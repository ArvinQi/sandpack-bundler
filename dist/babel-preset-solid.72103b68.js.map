{"mappings":"A,c,qD,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,I,C,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,E,G,E,C,I,E,E,E,A,C,U,O,S,A,a,O,O,O,O,C,E,Y,O,Q,O,G,E,O,W,O,C,E,C,E,C,Q,C,S,C,C,C,C,C,ECAA,IAAM,EAAe,EAAQ,mBAE7B,CAAA,EAAO,OAAO,CAAG,SAAU,CAAO,CAAE,EAAU,CAAC,CAAC,EA4B9C,MAAO,CACL,QA5Bc,CACd,CACE,EACA,OAAO,MAAM,CACX,CACE,WAAY,eACZ,SAAU,CACR,MACA,OACA,SACA,QACA,WACA,eACA,SACA,QACA,UACA,gBACD,CACD,wBAAyB,CAAA,EACzB,iBAAkB,CAAA,EAClB,SAAU,KACZ,EACA,GAEH,CACF,AAID,CACF,C,E,C,iB,O,E,C,M,C,S,C,C,C,C,C,EC/BA,IAMM,EANF,EAAY,EAAQ,oBACpB,EAAI,EAAQ,oBACZ,EAAsB,EAAQ,oBAC9B,EAAe,EAAQ,oBAmBvB,GAhBE,EAAI,OAAO,MAAM,CAAC,MAgBiC,GAdrD,OAAO,IAAI,CAc0C,GAdtC,OAAO,CAAC,SAAU,CAAC,EAChC,GAAI,AAAM,YAAN,EAAiB,CACnB,IAAI,EAAI,OAAO,wBAAwB,CAYU,EAZN,GAC3C,OAAO,cAAc,CAAC,EAAG,EAAG,EAAE,GAAG,CAAG,EAAI,CACtC,WAAY,CAAA,EACZ,IAAK,WAAc,OAAO,AASqB,CATpB,CAAC,EAAE,AAAE,CAClC,EACF,CACF,GAEF,EAAE,OAAO,CAI8C,EAHhD,OAAO,MAAM,CAAC,IAKvB,IAAM,EAAW,CACf,kBACA,QACA,YACA,WACA,UACA,WACA,UACA,WACA,iBACA,SACA,gBACA,QACA,OACA,WACA,QACA,WACA,aACA,OACA,cACA,WACA,WACA,WACA,WACA,WACD,CAEK,EAAkC,IAAI,IAAI,GAE1C,EAA2B,IAAI,IAAI,CACvC,YACA,QACA,WACA,iBACA,QACA,WACA,iBACG,EACJ,EAEK,EAAgC,IAAI,IAAI,CAC5C,YACA,cACA,YACA,WACD,EAGK,EAAwB,OAAO,MAAM,CAAC,OAAO,MAAM,CAAC,MAAO,CAC/D,UAAW,QACX,QAAS,KACX,GAEM,EAA4B,OAAO,MAAM,CAAC,OAAO,MAAM,CAAC,MAAO,CACnE,MAAO,YACP,eAAgB,CACd,EAAG,iBACH,OAAQ,EACR,MAAO,CACT,EACA,MAAO,CACL,EAAG,QACH,IAAK,CACP,EACA,SAAU,CACR,EAAG,WACH,OAAQ,CACV,EACA,YAAa,CACX,EAAG,cACH,MAAO,CACT,EACA,SAAU,CACR,EAAG,WACH,MAAO,EACP,SAAU,CACZ,CACF,GAQM,EAAgC,IAAI,IAAI,CAC5C,cACA,QACA,WACA,cACA,UACA,WACA,QACA,UACA,QACA,YACA,YACA,WACA,YACA,UACA,cACA,cACA,aACA,cACA,YACA,WACA,YACA,aACD,EAEK,EAA4B,IAAI,IAAI,CAExC,WACA,cACA,eACA,UACA,eACA,gBACA,mBACA,SACA,WACA,gBACA,SACA,OACA,OACA,UACA,UACA,gBACA,sBACA,cACA,mBACA,oBACA,oBACA,iBACA,UACA,UACA,UACA,UACA,UACA,iBACA,UACA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AI,EAAa,eAAe,CAAC,GAAO,CACtC,IAAI,EAAa,iBAAiB,CAAC,EAAK,IAAI,EAG1C,OAAO,EAAa,aAAa,CAAC,EAAK,IAAI,CAF3C,CAAA,EAAK,IAAI,CAAG,YAIhB,MAAO,GAAI,EAAa,qBAAqB,CAAC,GAC5C,OAAO,EAAa,gBAAgB,CAClC,EAAqB,EAAK,MAAM,EAChC,EAAqB,EAAK,QAAQ,QAE/B,GAAI,EAAa,mBAAmB,CAAC,GAC1C,OAAO,EAAa,aAAa,CAAC,CAAC,EAAE,EAAK,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,EAAK,IAAI,CAAC,IAAI,CAAC,CAAC,EAG9E,OAAO,CACT,CAEA,SAAS,EAAgB,CAAG,CAAE,CAAE,gBAAA,CAAe,CAAE,CAAG,CAAC,CAAC,SAChD,CAAA,GAAmB,EAAI,QAAQ,CAAC,MAAQ,EAAoB,GAAG,CAAC,EAAI,KAAK,CAAC,IAAI,CAAC,EAAE,CAAA,GAGjF,AAAQ,QAAR,CAEN,CAEA,IAAM,EAAiB,CACrB,IACA,OACA,UACA,IACA,MACA,MACA,MACA,KACA,SACA,SACA,OACA,OACA,OACA,WACA,MACA,MACA,KACA,QACA,IACA,SACA,MACA,QACA,MACA,MACA,QACA,MACA,OACA,QACA,WACA,SACA,SACA,UACA,WACA,IACA,OACA,IACA,OACA,SACA,SACA,OACA,QACA,OACA,SACA,MACA,MACA,MACA,WACA,WACA,OACA,IACA,KACA,MACA,QACD,CAEK,EAAgB,CACpB,UACA,UACA,QACA,aACA,KACA,UACA,SACA,MACA,KACA,KACA,WACA,aACA,SACA,SACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,SACA,SACA,KACA,KACA,OACA,OACA,MACA,KACA,IACA,MACA,UACA,QACA,KACD,CAEK,EAAc,CAClB,QACA,QACA,IACA,SACA,QACA,IACA,IACA,IACA,KACA,IACA,OACA,SACA,QACA,SACA,WACA,SACA,SACA,SACA,WACA,WACD,CAwED,SAAS,EAAU,CAAI,CAAE,CAAI,CAAE,CAAI,CAAE,CAAK,CAAE,CAAE,MAAA,CAAK,CAAE,QAAA,CAAO,CAAE,OAAA,CAAM,CAAE,KAAA,CAAI,CAAE,QAAA,CAAO,CAAE,MAG/E,EAAO,EADX,IAAM,EAAS,EAAU,GAQzB,GANK,CAAA,EAAQ,EAAK,KAAK,CAAC,IAAA,GAAS,CAAK,CAAC,EAAE,EAAI,EAAmB,GAAG,CAAC,CAAK,CAAC,EAAE,IAC1E,EAAO,CAAK,CAAC,EAAE,CACf,EAAY,CAAK,CAAC,EAAE,EAIlB,AAAc,UAAd,SACF,AAAI,EAAa,eAAe,CAAC,GACxB,EAAa,cAAc,CAChC,EAAa,gBAAgB,CAC3B,EAAa,gBAAgB,CAAC,EAAM,EAAa,UAAU,CAAC,UAC5D,EAAa,UAAU,CAAC,gBAE1B,CAAC,EAAa,aAAa,CAAC,GAAO,EAAM,EAGzC,EAAa,aAAa,CAAC,IAAU,EAAa,YAAY,CAAC,EAAO,CAAE,KAAM,WAAY,GACrF,EAAa,cAAc,CAChC,EAAa,gBAAgB,CAC3B,EAAa,gBAAgB,CAAC,EAAM,EAAa,UAAU,CAAC,UAC5D,EAAa,UAAU,CAAC,mBAE1B,CAAC,EAAa,aAAa,CAAC,GAAM,EAG/B,EAAa,qBAAqB,CACvC,EAAa,gBAAgB,CAAC,KAAM,EAAO,EAAa,WAAW,IACnE,EAAa,cAAc,CACzB,EAAa,gBAAgB,CAC3B,EAAa,gBAAgB,CAAC,EAAM,EAAa,UAAU,CAAC,UAC5D,EAAa,UAAU,CAAC,gBAE1B,CAAC,EAAa,aAAa,CAAC,GAAO,GAAkB,EAAM,EAE7D,EAAa,cAAc,CACzB,EAAa,gBAAgB,CAC3B,EAAa,gBAAgB,CAAC,EAAM,EAAa,UAAU,CAAC,UAC5D,EAAa,UAAU,CAAC,mBAE1B,CAAC,EAAa,aAAa,CAAC,GAAM,GAKxC,GAAI,AAAc,UAAd,EACF,OAAO,EAAa,cAAc,CAChC,EAAa,gBAAgB,CAC3B,EAAa,gBAAgB,CAAC,EAAM,EAAa,UAAU,CAAC,cAC5D,EAAa,UAAU,CAAC,WAE1B,CACE,EAAa,aAAa,CAAC,GAC3B,EAAU,EAAQ,EAAa,eAAe,CAAC,IAAK,EAAa,eAAe,CAAC,IAAK,IACvF,EAIL,GAAI,AAAS,UAAT,EACF,OAAO,EAAa,cAAc,CAChC,EAAqB,EAAM,QAAS,EAAkB,EAAM,OAAO,UAAU,EAC7E,EAAS,CAAC,EAAM,EAAO,EAAO,CAAG,CAAC,EAAM,EAAM,EAIlD,GAAI,CAAC,GAAS,AAAS,UAAT,EACZ,OAAO,EAAa,cAAc,CAChC,EAAqB,EAAM,YAAa,EAAkB,EAAM,OAAO,UAAU,EACjF,CAAC,EAAM,EAAM,EAIjB,GAAI,AAAS,cAAT,EACF,OAAO,EAAa,cAAc,CAChC,EAAqB,EAAM,YAAa,EAAkB,EAAM,OAAO,UAAU,EACjF,EAAS,CAAC,EAAM,EAAO,EAAO,CAAG,CAAC,EAAM,EAAM,EAIlD,GAAI,GAAW,AAAS,gBAAT,SACb,AAAI,EAAO,UAAU,CACZ,EAAa,cAAc,CAAC,EAAqB,EAAM,eAAgB,CAAC,EAAM,EAAa,aAAa,CAAC,QAAS,EAAM,EAE1H,EAAa,oBAAoB,CAAC,IAAK,EAAa,gBAAgB,CAAC,EAAM,EAAa,UAAU,CAAC,SAAU,GAGtH,IAAM,EAAc,EAAgB,GAAG,CAAC,GAClC,EAAS,EAAW,GAAG,CAAC,GACxB,EAAQ,AAjwBhB,SAAsB,CAAI,CAAE,CAAO,EACjC,IAAM,EAAI,CAAW,CAAC,EAAK,CAC3B,MAAO,AAAa,UAAb,OAAO,EAAkB,CAAC,CAAC,EAAQ,CAAG,EAAE,CAAI,CAAG,KAAA,EAAa,CACrE,EA8vB6B,EAAM,EAAQ,WAAW,IACpD,GAAI,AAAc,SAAd,GAAyB,CAAA,GAAgB,CAAC,GAAS,GAAW,GAAQ,AAAc,SAAd,CAAc,SAClF,GAAS,GAAgB,GAAU,AAAc,SAAd,GAAsB,CAAA,EAvcxD,AAuc8E,EAvczE,WAAW,GAAG,OAAO,CAAC,YAAa,CAAC,EAAG,IAAM,EAAE,WAAW,GAucpE,EACA,AAAI,EAAO,UAAU,EAAI,AAAc,SAAd,EAChB,EAAa,cAAc,CAAC,EAAqB,EAAM,eAAgB,CAAC,EAAM,EAAa,aAAa,CAAC,GAAO,EAAM,EAExH,EAAa,oBAAoB,CACtC,IACA,EAAa,gBAAgB,CAAC,EAAM,EAAa,UAAU,CAAC,GAAS,IACrE,GAIJ,IAAI,EAAe,EAAK,OAAO,CAAC,KAAO,GACvC,EAAO,CAAO,CAAC,EAAK,EAAI,EACxB,AAAC,GAAU,CAAA,EAAO,EAAK,WAAW,EAAA,EAClC,IAAM,EAAK,GAAgB,CAAY,CAAC,EAAK,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,QAC3D,AAAI,EACK,EAAa,cAAc,CAChC,EAAqB,EAAM,iBAAkB,EAAkB,EAAM,OAAO,UAAU,EACtF,CAAC,EAAM,EAAa,aAAa,CAAC,GAAK,EAAa,aAAa,CAAC,GAAO,EAAM,EAG1E,EAAa,cAAc,CAChC,EAAqB,EAAM,eAAgB,EAAkB,EAAM,OAAO,UAAU,EACpF,CAAC,EAAM,EAAa,aAAa,CAAC,GAAO,EAAM,CAGrD,CAEA,SAAS,EAA6B,CAAS,CAAE,CAAO,EACtD,KAAO,EAAa,YAAY,CAAC,IAAU,CACzC,IAAM,EAAS,EAAU,KAAK,CAAC,UAAU,CAAC,EAAQ,IAAI,EACtD,IAAI,EAMG,MAAO,CAAA,EALZ,GAAI,EAAa,oBAAoB,CAAC,EAAO,IAAI,CAAC,IAAI,EACpD,EAAU,EAAO,IAAI,CAAC,IAAI,CAAC,IAAI,MAC1B,GAAI,EAAa,qBAAqB,CAAC,EAAO,IAAI,CAAC,IAAI,EAC5D,MAAO,CAAA,OACF,MAAO,CAAA,CAElB,CACA,OAAO,EAAa,UAAU,CAAC,EACjC,CAqpBA,SAAS,EAAkB,CAAI,CAAE,CAAO,CAAE,CAAQ,CAAE,CAAC,CAAE,CAAI,MAGrD,EAFJ,IAAM,EAAS,EAAK,KAAK,CAAC,qBAAqB,CAAC,OAC9C,EAAS,EAAU,GAwBrB,OAtBA,EAAQ,QAAQ,EAAI,CAAC,EAAE,EAAE,EAAK,CAAC,CAAC,CAC5B,EAAO,UAAU,EAAI,AAAS,MAAT,GACvB,EAAY,EAAK,KAAK,CAAC,qBAAqB,CAAC,OAC7C,EAAQ,YAAY,CAAC,IAAI,CACvB,EAAa,kBAAkB,CAC7B,EAAa,YAAY,CAAC,CAAC,EAAQ,EAAU,EAC7C,EAAa,cAAc,CACzB,EAAqB,EAAM,gBAAiB,EAAkB,EAAM,OAAO,UAAU,EACrF,CAAC,EAAa,gBAAgB,CAAC,EAAa,UAAU,CAAC,GAAW,EAAa,UAAU,CAAC,gBAAgB,KAKhH,EAAQ,YAAY,CAAC,IAAI,CACvB,EAAa,kBAAkB,CAC7B,EACA,EAAa,gBAAgB,CAC3B,EAAa,UAAU,CAAC,GACxB,EAAa,UAAU,CAAC,AAAM,IAAN,EAAU,aAAe,kBAIlD,CAAC,EAAQ,EAAU,AAC5B,CA2JA,SAAS,EAAiB,CAAI,CAAE,CAAM,CAAE,CAAI,EAC1C,IAAM,EAAS,EAAU,UACzB,AAAI,EAAO,EAAE,CAEX,CADA,AAsDJ,SAA0B,CAAI,CAAE,CAAO,MAEjC,EADJ,GAAM,CAAE,WAAA,CAAU,CAAE,CAAG,EAAU,GAEjC,GAAI,EAAQ,QAAQ,CAAC,MAAM,CAAE,CAC3B,IAAI,EAAa,EACjB,GAAI,CAAC,EAAQ,YAAY,CAAE,CACzB,IAAM,EACJ,EAAK,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC,SAAS,EAC3C,CAAA,EAAK,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAG,EAAC,AAAD,EAC7C,CAAA,EAAc,EAAU,IAAI,CAAC,AAAA,GAAK,EAAE,QAAQ,GAAK,EAAQ,QAAQ,CAAA,EACpE,EAAa,EAAY,EAAE,EAE3B,EAAa,EAAK,KAAK,CAAC,qBAAqB,CAAC,SAC9C,EAAU,IAAI,CAAC,CACb,GAAI,EACJ,SAAU,EAAQ,QAAQ,CAC1B,MAAO,EAAQ,KAAK,CACpB,KAAM,EAAQ,gBAAgB,CAC9B,SAAU,KACZ,GAEJ,CACA,EAAO,EAAa,kBAAkB,CACpC,EAAQ,EAAE,CACV,EACI,EAAa,cAAc,CACzB,EAAqB,EAAM,iBAAkB,EAAkB,EAAM,OAAO,UAAU,EACtF,EAAa,CAAC,EAAW,CAAG,EAAE,EAEhC,EAAa,cAAc,CAAC,EAAY,EAAE,EAElD,CACA,EAAQ,YAAY,CAAC,OAAO,CAAC,GAC7B,EAAQ,IAAI,CAAG,EAAa,mBAAmB,CAAC,QAAS,EAAQ,YAAY,CAC/E,EAxFqB,EAAM,GAErB,AAAE,EAAO,KAAK,CAAC,MAAM,EAAI,EAAO,QAAQ,CAAC,MAAM,EAAI,EAAO,SAAS,CAAC,MAAK,EACzE,AAAoC,IAApC,EAAO,IAAI,CAAC,YAAY,CAAC,MAAM,EAIxB,EAAa,cAAc,CAChC,EAAa,uBAAuB,CAClC,EAAE,CACF,EAAa,cAAc,CAAC,CAC1B,EAAO,IAAI,IACR,EAAO,KAAK,CAAC,MAAM,CACpB,AA6Ed,SAAwB,CAAI,CAAE,CAAQ,EACpC,GAAI,CAAC,EAAS,MAAM,CAAE,OACtB,IAAM,EAAS,EAAU,GAEnB,EAAkB,EAAqB,EAAM,EAAO,aAAa,EAEvE,GAAI,AAAoB,IAApB,EAAS,MAAM,CAAQ,CACzB,IAAM,EACJ,AAAoB,cAApB,CAAQ,CAAC,EAAE,CAAC,GAAG,EAAoB,AAAoB,UAApB,CAAQ,CAAC,EAAE,CAAC,GAAG,CAC9C,EAAa,UAAU,CAAC,OACxB,KAAA,EASN,OAPE,CAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,WAC1B,EAAa,gBAAgB,CAAC,CAAQ,CAAC,EAAE,CAAC,KAAK,GAC/C,EAAa,iBAAiB,CAAC,CAAQ,CAAC,EAAE,CAAC,KAAK,GAEjD,CAAA,CAAQ,CAAC,EAAE,CAAC,KAAK,CAAG,EAAa,eAAe,CAAC,IAAK,EAAa,eAAe,CAAC,IAAK,CAAQ,CAAC,EAAE,CAAC,KAAK,EAL3G,EAQO,EAAa,mBAAmB,CACrC,EAAa,cAAc,CAAC,EAAiB,CAC3C,EAAa,uBAAuB,CAClC,EAAY,CAAC,EAAU,CAAG,EAAE,CAC5B,EAAU,EAAM,CAAQ,CAAC,EAAE,CAAC,IAAI,CAAE,CAAQ,CAAC,EAAE,CAAC,GAAG,CAAE,CAAQ,CAAC,EAAE,CAAC,KAAK,CAAE,CACpE,MAAO,CAAQ,CAAC,EAAE,CAAC,KAAK,CACxB,KAAM,CAAQ,CAAC,EAAE,CAAC,IAAI,CACtB,QAAS,CAAQ,CAAC,EAAE,CAAC,OAAO,CAC5B,QAAS,CAAA,EACT,OAAQ,CACV,IAEH,EAEL,CACA,IAAM,EAAe,EAAE,CACrB,EAAa,EAAE,CACf,EAAc,EAAE,CAChB,EAAS,EAAa,UAAU,CAAC,OA6CnC,OA5CA,EAAS,OAAO,CAAC,CAAC,CAAE,KAAA,CAAI,CAAE,IAAA,CAAG,CAAE,MAAA,CAAK,CAAE,MAAA,CAAK,CAAE,KAAA,CAAI,CAAE,QAAA,CAAO,CAAE,IAC1D,IAAM,EAAa,EAAK,KAAK,CAAC,qBAAqB,CAAC,MAMpD,IALI,EAAI,UAAU,CAAC,WAAc,EAAa,gBAAgB,CAAC,IAAW,EAAa,iBAAiB,CAAC,IACvG,CAAA,EAAQ,EAAa,eAAe,CAAC,IAAK,EAAa,eAAe,CAAC,IAAK,GAD9E,EAGA,EAAY,IAAI,CAAC,GACjB,EAAa,IAAI,CAAC,EAAa,kBAAkB,CAAC,EAAY,IAC1D,AAAQ,cAAR,GAAuB,AAAQ,UAAR,EAAiB,CAC1C,IAAM,EAAO,EAAa,gBAAgB,CAAC,EAAQ,GACnD,EAAW,IAAI,CACb,EAAa,mBAAmB,CAC9B,EAAa,oBAAoB,CAC/B,IACA,EACA,EAAU,EAAM,EAAM,EAAK,EAAY,CACrC,MAAA,EACA,KAAA,EACA,QAAA,EACA,QAAS,CAAA,EACT,OAAQ,CACV,KAIR,KAAO,CACL,IAAM,EAAO,EAAI,UAAU,CAAC,UAAY,EAAa,KAAA,EACrD,EAAW,IAAI,CACb,EAAa,mBAAmB,CAC9B,EAAa,iBAAiB,CAC5B,KACA,EAAa,gBAAgB,CAAC,MAAO,EAAY,EAAa,gBAAgB,CAAC,EAAQ,IACvF,EACE,EACA,EACA,EACA,EAAa,oBAAoB,CAAC,IAAK,EAAa,gBAAgB,CAAC,EAAQ,GAAa,GAC1F,CAAE,MAAA,EAAO,KAAA,EAAM,QAAA,EAAS,QAAS,CAAA,EAAM,OAAQ,CAAK,KAK9D,CACF,GAEO,EAAa,mBAAmB,CACrC,EAAa,cAAc,CAAC,EAAiB,CAC3C,EAAa,uBAAuB,CAClC,CAAC,EAAO,CACR,EAAa,cAAc,CAAC,CAC1B,EAAa,mBAAmB,CAAC,QAAS,MACvC,EACH,EAAa,eAAe,CAAC,GAC9B,GAEH,EAAa,gBAAgB,CAAC,EAAY,GAAG,CAAC,AAAA,GAAM,EAAa,cAAc,CAAC,EAAI,EAAa,UAAU,CAAC,gBAC7G,EAEL,EA5K6B,EAAM,EAAO,QAAQ,GAAK,EAAE,CAC3C,EAAO,SAAS,EAAI,EAAE,EAExB,EAAa,eAAe,CAAC,EAAO,EAAE,EACvC,GAEH,EAAE,EAdG,EAAO,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,IAAI,CAkB3C,AAAI,GAAQ,EAAO,OAAO,EAAI,EAAO,WAAW,CACvC,EAAa,cAAc,CAAC,EAAqB,EAAM,EAAO,WAAW,EAAG,CAAC,EAAO,KAAK,CAAC,EAAE,CAAC,EAE/F,EAAO,KAAK,CAAC,EAAE,AACxB,CAgKA,SAAS,EAAiB,CAAI,CAAE,CAAM,MAKhC,EAAU,EAJd,GAAI,CAAC,EAAO,QAAQ,CAClB,OAAO,EAAO,KAAK,CAAC,EAAE,CAKxB,GAAK,MAAM,OAAO,CAAC,EAAO,QAAQ,GAE3B,GAAI,AAA2B,IAA3B,EAAO,QAAQ,CAAC,MAAM,CAC/B,EAAW,EAAa,aAAa,CAAC,EAAO,QAAQ,CAAC,EAAE,MACnD,CACL,IAAM,EAAU,EAAO,QAAQ,CAAC,GAAG,CAAC,AAAA,GAAQ,EAAa,aAAa,CAAC,IACvE,EAAW,EAAa,eAAe,CAAC,EAC1C,OANE,EAAW,EAAa,aAAa,CAAC,EAAO,QAAQ,EAQvD,IAAM,EACJ,EAAK,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC,SAAS,EAC3C,CAAA,EAAK,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAG,EAAC,AAAD,EAC5C,EAAQ,EAAU,IAAI,CAAC,AAAA,GAC3B,AAAI,EAAa,iBAAiB,CAAC,EAAI,QAAQ,GAAK,EAAa,iBAAiB,CAAC,GAC1E,EAAI,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAChC,CAAC,EAAI,IAAM,EAAS,QAAQ,CAAC,EAAE,EAAI,EAAG,KAAK,GAAK,EAAS,QAAQ,CAAC,EAAE,CAAC,KAAK,EAGvE,EAAI,QAAQ,CAAC,KAAK,GAAK,EAAS,KAAK,EAW9C,GATK,EAOE,EAAK,EAAM,EAAE,EANlB,EAAK,EAAK,KAAK,CAAC,qBAAqB,CAAC,SACtC,EAAU,IAAI,CAAC,CACb,GAAA,EACA,SAAA,EACA,SAAU,KACZ,IAGE,EAAO,UAAU,CAAE,CACrB,GAAI,CAAC,MAAM,OAAO,CAAC,EAAO,QAAQ,GAAK,AAA2B,IAA3B,EAAO,QAAQ,CAAC,MAAM,CAAQ,OAAO,EACvE,GACH,MAAM,OAAO,CAAC,EAAO,QAAQ,GAC7B,AAA2B,IAA3B,EAAO,QAAQ,CAAC,MAAM,EACtB,AAAkC,mBAAlC,EAAO,cAAc,CAAC,EAAE,CAAC,IAAI,EAC7B,AAAyC,sBAAzC,EAAO,cAAc,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAGpC,OAAO,EAAa,gBAAgB,CAClC,IACA,EAAa,gBAAgB,CAC3B,IACA,EAAa,gBAAgB,CAAC,EAAI,EAAa,cAAc,CAAC,GAAI,CAAA,GAClE,EAAO,cAAc,CAAC,EAAE,EAE1B,EAAa,gBAAgB,CAAC,EAAI,EAAa,cAAc,CAAC,GAAI,CAAA,GAGxE,CACA,OAAO,EAAa,cAAc,CAChC,EAAqB,EAAM,OAC3B,MAAM,OAAO,CAAC,EAAO,QAAQ,GAAK,EAAO,QAAQ,CAAC,MAAM,CAAG,EACvD,CAAC,KAAO,EAAO,cAAc,CAAC,CAC9B,CAAC,EAAG,CAEZ,CASA,SAAS,EAAiB,CAAQ,CAAE,CAAK,EACvC,IAAI,EACA,MAAM,OAAO,CAAC,IAChB,CAAA,CAAC,EAAO,GAAG,EAAM,CAAG,CADtB,EAGA,CAAQ,CAAC,EAAS,MAAM,CAAG,EAAE,EAAI,EAC7B,GAAS,EAAM,MAAM,EAAE,EAAS,IAAI,CAAC,KAAK,CAAC,EAAU,EAC3D,CAyDA,SAAS,EAAY,CAAG,CAAE,CAAK,EAG7B,OAFA,EAAM,CAAO,CAAC,EAAI,EAAI,EACtB,AAAC,GAAU,CAAA,EAAM,EAAI,WAAW,EAAA,EACzB,CACT,CAyBA,SAAS,EAAiB,CAAI,CAAE,CAAU,CAAE,CAAI,CAAE,CAAc,EAC9D,GACE,EAAa,eAAe,CAAC,IAC7B,EAAa,gBAAgB,CAAC,IAC7B,EAAa,iBAAiB,CAAC,IAAe,AAAkC,IAAlC,EAAW,WAAW,CAAC,MAAM,CAC5E,CACA,GAAI,EAAgB,CAClB,GAAI,EAAa,eAAe,CAAC,GAAa,OAAO,EAAa,aAAa,CAAC,EAAW,EAAW,KAAK,CAAE,IACxG,GAAI,EAAa,iBAAiB,CAAC,GACtC,OAAO,EAAa,aAAa,CAAC,EAAW,EAAW,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAE,GACjF,CACA,OAAO,CACT,CAAO,GAAI,EAAa,UAAU,CAAC,GAQjC,OAPI,EAAa,gBAAgB,CAAC,EAAW,IAAI,EAC/C,EAAW,IAAI,CAAC,IAAI,CAAG,EAAW,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,AAAA,IAC1C,EAAa,iBAAiB,CAAC,IACjC,CAAA,EAAE,QAAQ,CAAG,EAAiB,EAAM,EAAE,QAAQ,CAAE,EAAM,EADxD,EAEO,IAEJ,EAAW,IAAI,CAAG,EAAiB,EAAM,EAAW,IAAI,CAAE,EAAM,GAChE,EACF,GAAI,EAAa,iBAAiB,CAAC,GAIxC,OAHA,EAAW,WAAW,CAAG,EAAW,WAAW,CAAC,GAAG,CAAC,AAAA,GAClD,EAAiB,EAAM,EAAG,EAAM,IAE3B,EACF,GAAI,EAAa,iBAAiB,CAAC,GACxC,OAAO,EACF,GAAI,EAAa,kBAAkB,CAAC,GAGzC,OAFA,EAAW,IAAI,CAAG,EAAiB,EAAM,EAAW,IAAI,CAAE,EAAM,GAChE,EAAW,KAAK,CAAG,EAAiB,EAAM,EAAW,KAAK,CAAE,EAAM,GAC3D,EACF,GAAI,EAAa,uBAAuB,CAAC,GAG9C,OAFA,EAAW,UAAU,CAAG,EAAiB,EAAM,EAAW,UAAU,CAAE,EAAM,GAC5E,EAAW,SAAS,CAAG,EAAiB,EAAM,EAAW,SAAS,CAAE,EAAM,GACnE,EACF,GAAI,EAAa,mBAAmB,CAAC,GAK1C,OAJA,EAAW,KAAK,CAAG,EAAiB,EAAM,EAAW,KAAK,CAAE,EAAM,GACtC,OAAxB,EAAW,QAAQ,EACrB,CAAA,EAAW,IAAI,CAAG,EAAiB,EAAM,EAAW,IAAI,CAAE,EAAM,EADlE,EAGO,OACF,GAAI,EAAa,gBAAgB,CAAC,IAAe,EAAa,UAAU,CAAC,EAAW,MAAM,EAS/F,OARI,EAAa,gBAAgB,CAAC,EAAW,MAAM,CAAC,IAAI,EACtD,EAAW,MAAM,CAAC,IAAI,CAAC,IAAI,CAAG,EAAW,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,AAAA,IACxD,EAAa,iBAAiB,CAAC,IACjC,CAAA,EAAE,QAAQ,CAAG,EAAiB,EAAM,EAAE,QAAQ,CAAE,EAAM,EADxD,EAEO,IAGT,EAAW,MAAM,CAAC,IAAI,CAAG,EAAiB,EAAM,EAAW,MAAM,CAAC,IAAI,CAAE,EAAM,GACzE,OACF,GAAI,EAAa,YAAY,CAAC,IAAe,CAAC,EAAY,EAAW,IAE1E,OADA,EAAW,UAAU,CAAG,CAAA,EACjB,EAGT,OAAO,EAAa,cAAc,CAChC,EAAqB,EAAM,UAC3B,CAAC,EAAW,CAAC,MAAM,CAAC,EAAO,CAAC,EAAa,cAAc,CAAC,CAAA,GAAM,CAAG,EAAE,EAEvE,CAEA,SAAS,EAAkB,CAAQ,CAAE,CAAU,CAAE,CAAkB,EACjE,IAAM,EAAa,EAAE,CACf,EAAoB,EAAW,IAAI,CAAC,AAAA,GAAK,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,GAAK,GACpE,IAAK,IAAI,EAAI,EAAG,EAAI,EAAmB,MAAM,CAAE,IAAK,CAClD,IAAM,EAAO,CAAkB,CAAC,EAAE,CAAC,IAAI,CACjC,EAAW,CAAC,EAAa,iBAAiB,CAAC,EAAK,IAAI,CAAC,IAAI,CAAC,IAAI,EAC/D,GACH,CAAA,EAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAG,YADxB,EAGA,EAAW,IAAI,CACb,EAAa,cAAc,CACzB,EAAW,EAAa,aAAa,CAAC,EAAK,IAAI,CAAC,IAAI,CAAC,IAAI,EAAI,EAAK,IAAI,CAAC,IAAI,CAC3E,EAAa,wBAAwB,CAAC,EAAK,KAAK,EAAI,EAAK,KAAK,CAAC,UAAU,CAAG,EAAK,KAAK,GAGzF,AAAA,CAAA,GAAqB,CAAA,GAAM,EAAW,MAAM,CAAC,CAAkB,CAAC,EAAE,CAAC,GAAG,CAAE,EAC3E,CAEE,GACA,EAAa,wBAAwB,CAAC,EAAkB,IAAI,CAAC,KAAK,GAClE,EAAa,kBAAkB,CAAC,EAAkB,IAAI,CAAC,KAAK,CAAC,UAAU,EAEvE,EAAkB,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,IAAI,GAE3D,CAAkB,CAAC,EAAE,CAAC,IAAI,CAAG,EAAa,YAAY,CACpD,EAAa,aAAa,CAAC,GAC3B,EAAa,sBAAsB,CAAC,EAAa,gBAAgB,CAAC,IAGxE,CAEA,SAAS,EAAoB,CAAI,EAC/B,IAAM,EAAa,EAAK,GAAG,CAAC,kBAAkB,GAAG,CAAC,cAChD,EAAkB,EAAW,MAAM,CACjC,AAAA,GAAK,EAAa,mBAAmB,CAAC,EAAE,IAAI,CAAC,IAAI,GAAK,AAA+B,UAA/B,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAElF,EAA2B,EAAW,MAAM,CAC1C,AAAA,GAAK,EAAa,mBAAmB,CAAC,EAAE,IAAI,CAAC,IAAI,GAAK,AAA+B,UAA/B,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAEhF,CAAA,EAAyB,MAAM,EACjC,EAAkB,YAAa,EAAY,GAC7C,IAAM,EAAkB,EAAW,MAAM,CACvC,AAAA,GACE,EAAE,IAAI,CAAC,IAAI,EACV,CAAA,AAAqB,UAArB,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,EACf,AAAqB,cAArB,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,EAChB,AAAqB,cAArB,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,AAAK,GAG3B,GAAI,EAAgB,MAAM,CAAG,EAAG,CAC9B,IAAM,EAAQ,CAAe,CAAC,EAAE,CAAC,IAAI,CACnC,EAAS,EAAE,CACX,EAAS,CAAC,EAAa,eAAe,CAAC,CAAE,IAAK,EAAG,GAAG,CACtD,IAAK,IAAI,EAAI,EAAG,EAAI,EAAgB,MAAM,CAAE,IAAK,CAC/C,IAAM,EAAO,CAAe,CAAC,EAAE,CAAC,IAAI,CAClC,EAAS,IAAM,EAAgB,MAAM,CAAG,EAC1C,GAAK,EAAa,wBAAwB,CAAC,EAAK,KAAK,EAW9C,CACL,IAAI,EAAO,EAAK,KAAK,CAAC,UAAU,CAChC,GAAI,AAAmB,cAAnB,EAAK,IAAI,CAAC,IAAI,CAAkB,CAClC,GAAI,EAAa,kBAAkB,CAAC,IAAS,CAAC,EAAK,UAAU,CAAC,IAAI,CAAC,AAAA,GAAK,EAAa,eAAe,CAAC,IAAK,CACxG,EAAyB,EAAM,EAAM,EAAQ,GAC7C,GAAK,EAAW,MAAM,CAAC,EAAW,OAAO,CAAC,CAAe,CAAC,EAAE,EAAG,GAC/D,QACF,CACA,EAAO,EAAa,cAAc,CAAC,EAAqB,EAAM,gBAAiB,CAAC,EAAK,CACvF,CACA,EAAO,IAAI,CAAC,EAAa,iBAAiB,CAAC,KAAM,EAAM,EAAa,aAAa,CAAC,MAClF,EAAO,IAAI,CAAC,EAAa,eAAe,CAAC,CAAE,IAAK,EAAS,GAAK,GAAI,GACpE,KAvBwD,CACtD,IAAM,EAAO,EAAO,GAAG,GACvB,EAAO,IAAI,CACT,EAAa,eAAe,CAAC,CAC3B,IACE,AAAC,CAAA,EAAO,EAAK,KAAK,CAAC,GAAG,CAAG,EAAA,EACxB,CAAA,EAAI,IAAM,EAAA,EACX,CAAC,EAAE,EAAK,KAAK,CAAC,KAAK,CAAC,CAAC,CACpB,CAAA,EAAS,GAAK,GAAA,CACnB,GAEJ,CAaA,GAAK,EAAW,MAAM,CAAC,EAAW,OAAO,CAAC,CAAe,CAAC,EAAE,EAAG,EACjE,CACA,EAAM,IAAI,CAAG,EAAa,aAAa,CAAC,SACxC,EAAM,KAAK,CAAG,EAAa,sBAAsB,CAAC,EAAa,eAAe,CAAC,EAAQ,GACzF,CAEA,OADI,EAAgB,MAAM,EAAE,EAAkB,QAAS,EAAY,GAC5D,CACT,CAuIA,SAAS,EAAyB,CAAI,CAAE,CAAI,CAAE,CAAM,CAAE,CAAM,EAC1D,EAAK,UAAU,CAAC,OAAO,CAAC,CAAC,EAAM,KAC7B,IAAM,EAAS,EAAK,UAAU,CAAC,MAAM,CAAG,IAAM,EAC1C,EAAM,EAAK,GAAG,CAQlB,GAP2D,EAAvD,EAAa,YAAY,CAAC,EAAK,GAAG,GAAK,CAAC,EAAK,QAAQ,CAAQ,EAAa,aAAa,CAAC,EAAI,IAAI,EAC3F,EAAK,QAAQ,CACd,EAAa,cAAc,CAAC,EAAqB,EAAM,UAAW,CACtE,EAAK,GAAG,CACR,EAAa,cAAc,CAAC,CAAA,GAC7B,EACU,EAAa,aAAa,CAAC,EAAW,EAAK,GAAG,CAAC,KAAK,GAC7D,EAAa,gBAAgB,CAAC,EAAK,KAAK,EAC1C,CAAA,GAAI,AAAqB,CAAA,IAArB,EAAK,KAAK,CAAC,KAAK,EAClB,GAAK,EAAK,QAAQ,CAShB,EAAO,IAAI,CAAC,GACZ,EAAO,IAAI,CAAC,EAAa,eAAe,CAAC,CAAE,IAAK,EAAS,GAAK,GAAI,QAVhD,CAClB,IAAM,EAAO,EAAO,GAAG,GACvB,EAAO,IAAI,CACT,EAAa,eAAe,CAAC,CAC3B,IACE,AAAC,CAAA,EAAO,EAAK,KAAK,CAAC,GAAG,CAAG,EAAA,EAAO,CAAA,EAAI,IAAM,EAAA,EAAM,CAAC,EAAE,EAAI,KAAK,CAAC,CAAC,CAAI,CAAA,EAAS,GAAK,GAAA,CACpF,GAEJ,E,MAMF,EAAO,IAAI,CAAC,EAAa,qBAAqB,CAAC,EAAK,KAAK,CAAE,EAAK,EAAa,aAAa,CAAC,MAC3F,EAAO,IAAI,CAAC,EAAa,eAAe,CAAC,CAAE,IAAK,EAAS,GAAK,GAAI,GAEtE,EACF,CAkWA,SAAS,EAAQ,CAAI,CAAE,CAAI,CAAE,CAAI,CAAE,CAAK,CAAE,CAAE,OAAA,CAAM,CAAE,CAAG,CAAC,CAAC,EAEvD,OADK,GAAO,CAAA,EAAQ,EAAa,cAAc,CAAC,CAAA,EAAhD,EACO,EAAa,cAAc,CAChC,EAAqB,EAAM,UAAW,EAAkB,EAAM,aAAa,UAAU,EACrF,EAAS,CAAC,EAAM,EAAa,aAAa,CAAC,GAAO,EAAO,EAAO,CAAG,CAAC,EAAM,EAAa,aAAa,CAAC,GAAO,EAAM,CAEtH,CA2KA,SAAS,EAAe,CAAI,CAAE,CAAM,CAAE,CAAI,EACxC,IAAM,EAAS,EAAU,UACzB,AAAI,EAAO,EAAE,CAEX,CADA,EAAO,IAAI,CAAG,EAAa,mBAAmB,CAAC,QAAS,EAAO,YAAY,EAEzE,AAAE,EAAO,KAAK,CAAC,MAAM,EAAI,EAAO,QAAQ,CAAC,MAAM,EAAI,EAAO,SAAS,CAAC,MAAK,EACzE,AAAoC,IAApC,EAAO,IAAI,CAAC,YAAY,CAAC,MAAM,EAIxB,EAAa,cAAc,CAChC,EAAa,uBAAuB,CAClC,EAAE,CACF,EAAa,cAAc,CAAC,CAC1B,EAAO,IAAI,IACR,EAAO,KAAK,CAAC,MAAM,CACpB,AAgBd,SAAsB,CAAI,CAAE,CAAQ,EAClC,GAAI,CAAC,EAAS,MAAM,CAAE,OACtB,IAAM,EAAS,EAAU,GAEnB,EAAkB,EAAqB,EAAM,EAAO,aAAa,EAEvE,GAAI,AAAoB,IAApB,EAAS,MAAM,CAAQ,CACzB,IAAM,EAAY,EAAa,UAAU,CAAC,OAE1C,OAAO,EAAa,mBAAmB,CACrC,EAAa,cAAc,CAAC,EAAiB,CAC3C,EAAa,uBAAuB,CAClC,CAAC,EAAU,CACX,EAAQ,EAAM,CAAQ,CAAC,EAAE,CAAC,IAAI,CAAE,CAAQ,CAAC,EAAE,CAAC,GAAG,CAAE,CAAQ,CAAC,EAAE,CAAC,KAAK,CAAE,CAClE,QAAS,CAAA,EACT,OAAQ,CACV,IAEH,EAEL,CACA,IAAM,EAAe,EAAE,CACrB,EAAa,EAAE,CACf,EAAc,EAAE,CAChB,EAAS,EAAa,UAAU,CAAC,OAuBnC,OAtBA,EAAS,OAAO,CAAC,CAAC,CAAE,KAAA,CAAI,CAAE,IAAA,CAAG,CAAE,MAAA,CAAK,CAAE,IACpC,IAAM,EAAa,EAAK,KAAK,CAAC,qBAAqB,CAAC,MACpD,EAAY,IAAI,CAAC,GACjB,EAAa,IAAI,CAAC,EAAa,kBAAkB,CAAC,EAAY,IAC9D,IAAM,EAAO,EAAa,gBAAgB,CAAC,EAAQ,GACnD,EAAW,IAAI,CACb,EAAa,mBAAmB,CAC9B,EAAa,iBAAiB,CAC5B,KACA,EAAa,gBAAgB,CAAC,MAAO,EAAY,EAAa,gBAAgB,CAAC,EAAQ,IACvF,EAAa,oBAAoB,CAAC,IAAK,EAAa,gBAAgB,CAAC,EAAQ,GAAa,EACxF,EACA,EACA,EACA,EACA,CAAE,QAAS,CAAA,EAAM,OAAQ,CAAK,MAKxC,GAEO,EAAa,mBAAmB,CACrC,EAAa,cAAc,CAAC,EAAiB,CAC3C,EAAa,uBAAuB,CAClC,CAAC,EAAO,CACR,EAAa,cAAc,CAAC,CAC1B,EAAa,mBAAmB,CAAC,QAAS,MACvC,EACH,EAAa,eAAe,CAAC,GAC9B,GAEH,EAAa,gBAAgB,CAAC,EAAY,GAAG,CAAC,AAAA,GAAM,EAAa,cAAc,CAAC,EAAI,EAAa,UAAU,CAAC,gBAC7G,EAEL,EA5E2B,EAAM,EAAO,QAAQ,GAAK,EAAE,CACzC,EAAO,SAAS,EAAI,EAAE,EAExB,EAAa,eAAe,CAAC,EAAO,EAAE,EACvC,GAEH,EAAE,EAdG,EAAO,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,IAAI,CAkB3C,AAAI,GAAQ,EAAO,OAAO,EAAI,EAAO,WAAW,CACvC,EAAa,cAAc,CAAC,EAAqB,EAAM,EAAO,WAAW,EAAG,CAAC,EAAO,KAAK,CAAC,EAAE,CAAC,EAE/F,EAAO,KAAK,CAAC,EAAE,AACxB,CA0VA,SAAS,EAAa,CAAI,MAmBpB,EAlBJ,IAAM,EAAS,EAAU,GACnB,GAkBN,AAlB8B,EAkBzB,QAAQ,CAAC,CACZ,eAAe,CAAI,EACjB,GAAW,CAAA,EAAS,EAAK,KAAK,CAAC,qBAAqB,CAAC,QAAA,EACrD,EAAK,WAAW,CAAC,EACnB,CACF,GACO,AAAA,IACL,GAAI,EAAQ,CACV,IAAI,EAAS,AA1Ba,EA0BR,kBAAkB,GAC9B,EAAO,EAAa,mBAAmB,CAAC,QAAS,CACrD,EAAa,kBAAkB,CAAC,EAAQ,EAAa,cAAc,IACpE,EACD,EAAO,YAAY,CAAC,EACtB,CACA,OAAO,CACT,GAhCM,EAAS,AAmCjB,SAAS,EAAc,CAAI,CAAE,EAAO,CAAC,CAAC,MAGhC,EAFJ,IAAM,EAAS,EAAU,GACnB,EAAO,EAAK,IAAI,CAEtB,GAAI,EAAa,YAAY,CAAC,GAC5B,OAAO,AA6FX,SAA0B,CAAM,CAAE,CAAI,CAAE,EAAO,CAAC,CAAC,EAE/C,IA72BI,EACF,EA42BE,EAAU,EADD,EAAK,IAAI,EAGtB,GAAI,EAAY,GAAU,OAAO,AAzZnC,SAA4B,CAAI,EAC9B,IAAI,EAAQ,EAAE,CACZ,EAAS,EAAU,GACnB,EAAQ,AAhBZ,SAAS,EAA2B,CAAI,EACtC,GAAI,EAAa,eAAe,CAAC,GAAO,CACtC,IAAI,EAAa,iBAAiB,CAAC,EAAK,IAAI,EACvC,OAAO,EAAa,aAAa,CAAC,EAAK,IAAI,CADD,CAAA,EAAK,IAAI,CAAG,YAE7D,MAAO,GAAI,EAAa,qBAAqB,CAAC,GAAO,CACnD,IAAM,EAAO,EAA2B,EAAK,QAAQ,EAC/C,EAAW,EAAa,eAAe,CAAC,GAC9C,OAAO,EAAa,gBAAgB,CAAC,EAA2B,EAAK,MAAM,EAAG,EAAM,EACtF,CAEA,OAAO,CACT,EAKuC,EAAK,IAAI,CAAC,cAAc,CAAC,IAAI,EAChE,EAAQ,EAAE,CACV,EAAgB,EAAE,CAClB,EAAgB,CAAA,EAChB,EAAc,EAAK,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAG,EAE5C,GAAI,EAAO,QAAQ,CAAC,OAAO,CAAC,EAAM,IAAI,EAAI,IAAM,CAAC,EAAK,KAAK,CAAC,UAAU,CAAC,EAAM,IAAI,EAAG,CAClF,IAAM,EAAW,EAAqB,EAAM,EAAM,IAAI,CACtD,CAAA,EAAM,IAAI,CAAG,EAAS,IAAI,AAC5B,CAEA,EACG,GAAG,CAAC,kBACJ,GAAG,CAAC,cACJ,OAAO,CAAC,AAAA,IACP,IAAM,EAAO,EAAU,IAAI,CAC3B,GAAI,EAAa,oBAAoB,CAAC,GAChC,EAAc,MAAM,GACtB,EAAM,IAAI,CAAC,EAAa,gBAAgB,CAAC,IACzC,EAAgB,EAAE,EAEpB,EAAM,IAAI,CACR,EAAU,EAAU,GAAG,CAAC,YAAa,CACnC,YAAa,CAAA,CACf,IAAO,CAAA,EAAgB,CAAA,CAAA,EACnB,CAAA,EAAa,gBAAgB,CAAC,EAAK,QAAQ,GAC1C,EAAK,QAAQ,CAAC,SAAS,CAAC,MAAM,EAC9B,EAAa,gBAAgB,CAAC,EAAK,QAAQ,CAAC,MAAM,GAClD,EAAa,kBAAkB,CAAC,EAAK,QAAQ,CAAC,MAAM,EAEnD,EAAa,uBAAuB,CAAC,EAAE,CAAE,EAAK,QAAQ,EADtD,EAAK,QAAQ,CAAC,MAAM,CAEtB,EAAK,QAAQ,MAEd,CAEL,IAAM,EAAQ,AAAC,CAAA,EAAa,eAAe,CAAC,EAAK,KAAK,EAAI,EAAa,aAAa,CAAC,EAAK,KAAK,CAAC,KAAK,EAAG,EAAK,KAAK,AAAL,GAAU,EAAa,cAAc,CAAC,CAAA,GACjJ,EAAK,EAAqB,EAAK,IAAI,EACnC,EAAM,EAAG,IAAI,CACf,GAAI,GAAe,AAAQ,aAAR,EAAoB,OACvC,GAAI,EAAa,wBAAwB,CAAC,IACxC,GAAI,AAAQ,QAAR,EAAe,CACjB,GAAI,AAAoB,QAApB,EAAO,QAAQ,CAAY,OAE/B,KACE,EAAa,qBAAqB,CAAC,EAAM,UAAU,GACnD,EAAa,gBAAgB,CAAC,EAAM,UAAU,GAC9C,EAAa,uBAAuB,CAAC,EAAM,UAAU,GAErD,EAAM,UAAU,CAAG,EAAM,UAAU,CAAC,UAAU,CAEhD,IAAI,EACF,EACE,EAAa,YAAY,CAAC,EAAM,UAAU,GACzC,CAAA,EAAU,EAAK,KAAK,CAAC,UAAU,CAAC,EAAM,UAAU,CAAC,IAAI,CAAA,GACtD,AAAiB,UAAjB,EAAQ,IAAI,CAChB,GAAI,CAAC,GAAc,EAAa,MAAM,CAAC,EAAM,UAAU,EAAG,CACxD,IAAM,EAAgB,EAAK,KAAK,CAAC,qBAAqB,CAAC,SACvD,EAAc,IAAI,CAChB,EAAa,YAAY,CACvB,SACA,EAAa,UAAU,CAAC,OACxB,CAAC,EAAa,UAAU,CAAC,MAAM,CAC/B,EAAa,cAAc,CAAC,CAC1B,EAAa,mBAAmB,CAAC,QAAS,CACxC,EAAa,kBAAkB,CAAC,EAAe,EAAM,UAAU,EAChE,EACD,EAAa,mBAAmB,CAC9B,EAAa,qBAAqB,CAChC,EAAa,gBAAgB,CAC3B,MACA,EAAa,eAAe,CAAC,SAAU,GACvC,EAAa,aAAa,CAAC,aAE7B,EAAa,cAAc,CAAC,EAAe,CAAC,EAAa,UAAU,CAAC,MAAM,EAC1E,EAAa,oBAAoB,CAAC,IAAK,EAAM,UAAU,CAAE,EAAa,UAAU,CAAC,SAGtF,GAGP,MAAO,GAAI,GAAc,EAAa,UAAU,CAAC,EAAM,UAAU,EAC/D,EAAc,IAAI,CAAC,EAAa,cAAc,CAAC,EAAa,UAAU,CAAC,OAAQ,EAAM,UAAU,QAC1F,GAAI,EAAa,gBAAgB,CAAC,EAAM,UAAU,EAAG,CAC1D,IAAM,EAAgB,EAAK,KAAK,CAAC,qBAAqB,CAAC,SACvD,EAAc,IAAI,CAChB,EAAa,YAAY,CACvB,SACA,EAAa,UAAU,CAAC,OACxB,CAAC,EAAa,UAAU,CAAC,MAAM,CAC/B,EAAa,cAAc,CAAC,CAC1B,EAAa,mBAAmB,CAAC,QAAS,CACxC,EAAa,kBAAkB,CAAC,EAAe,EAAM,UAAU,EAChE,EACD,EAAa,mBAAmB,CAC9B,EAAa,iBAAiB,CAC5B,KACA,EAAa,gBAAgB,CAC3B,MACA,EAAa,eAAe,CAAC,SAAU,GACvC,EAAa,aAAa,CAAC,aAE7B,EAAa,cAAc,CAAC,EAAe,CAAC,EAAa,UAAU,CAAC,MAAM,IAG/E,GAGP,CACF,MAAO,GACL,EAAU,EAAU,GAAG,CAAC,SAAS,GAAG,CAAC,cAAe,CAClD,YAAa,CAAA,EACb,UAAW,CAAA,CACb,IAEA,GACE,EAAO,gBAAgB,EACvB,AAAoB,QAApB,EAAO,QAAQ,EACd,CAAA,EAAa,mBAAmB,CAAC,EAAM,UAAU,GAChD,EAAa,uBAAuB,CAAC,EAAM,UAAU,CAAA,EACvD,CACA,IAAM,EAAO,EAAmB,EAAU,GAAG,CAAC,SAAS,GAAG,CAAC,cAAe,CAAA,GAE1E,EAAc,IAAI,CAChB,EAAa,YAAY,CACvB,MACA,EACA,EAAE,CACF,EAAa,cAAc,CAAC,CAAC,EAAa,eAAe,CAAC,EAAK,IAAI,EAAE,EACrE,CAAC,EAAa,iBAAiB,CAAC,IAGtC,MAAO,GACL,EAAa,gBAAgB,CAAC,EAAM,UAAU,GAC9C,EAAa,yBAAyB,CAAC,EAAM,UAAU,CAAC,MAAM,EAC9D,CACA,IAAM,EAAS,EAAM,UAAU,CAAC,MAAM,CAChC,EAAO,EAAa,gBAAgB,CAAC,EAAO,IAAI,EAClD,EAAO,IAAI,CACX,EAAa,cAAc,CAAC,CAAC,EAAa,eAAe,CAAC,EAAO,IAAI,EAAE,EAE3E,EAAc,IAAI,CAAC,EAAa,YAAY,CAAC,MAAO,EAAI,EAAE,CAAE,EAAM,CAAC,EAAa,iBAAiB,CAAC,IACpG,MACE,EAAc,IAAI,CAChB,EAAa,YAAY,CACvB,MACA,EACA,EAAE,CACF,EAAa,cAAc,CAAC,CAAC,EAAa,eAAe,CAAC,EAAM,UAAU,EAAE,EAC5E,CAAC,EAAa,iBAAiB,CAAC,UAIjC,EAAc,IAAI,CAAC,EAAa,cAAc,CAAC,EAAI,EAAM,UAAU,QACvE,EAAc,IAAI,CAAC,EAAa,cAAc,CAAC,EAAI,GAC1D,CACF,GAEF,IAAM,EAAc,AAsCtB,SAAoC,CAAQ,CAAE,CAAM,EAClD,IAAM,EAAmB,EAAe,GACxC,GAAI,CAAC,EAAiB,MAAM,CAAE,OAC9B,IAAI,EAAU,CAAA,EACV,EAAY,EAAE,CAEd,EAAsB,EAAiB,MAAM,CAAC,CAAC,EAAM,KACvD,GAAI,EAAa,SAAS,CAAC,EAAK,IAAI,EAAG,CACrC,IAAM,EAAI,EAAa,MAAM,CAAC,EAAe,EAAK,IAAI,CAAC,KAAK,CAAC,GAAG,EAC5D,CAAA,EAAE,MAAM,GACV,EAAU,IAAI,CAAC,EAAK,IAAI,EACxB,EAAK,IAAI,CAAC,EAAa,aAAa,CAAC,IAEzC,KAAO,CACL,IAAM,EAAQ,EAAc,EAAM,CAChC,SAAU,CAAA,EACV,eAAgB,CAAA,EAChB,YAAa,CAAA,CACf,GACA,EAAU,GAAW,EAAM,OAAO,CAEZ,QAApB,EAAO,QAAQ,EACf,EAAiB,MAAM,CAAG,GAC1B,EAAM,OAAO,EACb,EAAa,UAAU,CAAC,EAAM,KAAK,CAAC,EAAE,GAEtC,CAAA,EAAM,KAAK,CAAC,EAAE,CAAG,EAAM,KAAK,CAAC,EAAE,CAAC,IAAI,AAAJ,EAElC,EAAU,IAAI,CAAC,EAAK,IAAI,EACxB,EAAK,IAAI,CAAC,EAAkB,EAAQ,EAAM,GAAO,EAAM,EAAO,EAAiB,MAAM,CAAG,GAC1F,CACA,OAAO,CACT,EAAG,EAAE,EAqBL,OAnBI,AAA+B,IAA/B,EAAoB,MAAM,EAC5B,EAAsB,CAAmB,CAAC,EAAE,CAEzC,EAAa,wBAAwB,CAAC,CAAS,CAAC,EAAE,GAClD,EAAa,gBAAgB,CAAC,CAAS,CAAC,EAAE,GAC1C,EAAa,SAAS,CAAC,CAAS,CAAC,EAAE,IAEpC,EACE,CAAA,EAAa,gBAAgB,CAAC,IAC7B,EAAoB,SAAS,CAAC,MAAM,EACpC,EAAa,YAAY,CAAC,EAAoB,MAAM,EAEjD,EAAa,uBAAuB,CAAC,EAAE,CAAE,GADzC,EAAoB,MAAM,CAEhC,EAAU,CAAA,KAGZ,EAAsB,EAAa,uBAAuB,CAAC,EAAE,CAAE,EAAa,eAAe,CAAC,IAC5F,EAAU,CAAA,GAEL,CAAC,EAAqB,EAAQ,AACvC,EA5FiD,EAAK,GAAG,CAAC,YAAa,GACrE,GAAI,GAAe,CAAW,CAAC,EAAE,EAC/B,GAAI,CAAW,CAAC,EAAE,CAAE,CAClB,IAAM,EACJ,EAAa,gBAAgB,CAAC,CAAW,CAAC,EAAE,GAAK,EAAa,UAAU,CAAC,CAAW,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,EAChG,CAAW,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAChC,CAAW,CAAC,EAAE,CAAC,IAAI,CAAG,CAAW,CAAC,EAAE,CAAC,IAAI,CAAG,CAAW,CAAC,EAAE,CAChE,EAAc,IAAI,CAChB,EAAa,YAAY,CACvB,MACA,EAAa,UAAU,CAAC,YACxB,EAAE,CACF,EAAa,YAAY,CAAC,GAAQ,EAAa,cAAc,CAAC,CAAC,EAAa,eAAe,CAAC,GAAM,EAAI,GAG5G,MAAO,EAAc,IAAI,CAAC,EAAa,cAAc,CAAC,EAAa,UAAU,CAAC,YAAa,CAAW,CAAC,EAAE,GAEvG,CAAA,EAAc,MAAM,EAAI,CAAC,EAAM,MAAM,AAAN,GAAQ,EAAM,IAAI,CAAC,EAAa,gBAAgB,CAAC,IAEhF,CAAA,EAAM,MAAM,CAAG,GAAK,CAAA,GACtB,CAAA,EAAQ,CAAC,EAAa,cAAc,CAAC,EAAqB,EAAM,cAAe,GAAO,AAAA,EAExF,IAAM,EAAgB,CAAC,EAAO,CAAK,CAAC,EAAE,CAAC,CAIvC,GAHA,EAAM,IAAI,CAAC,EAAa,cAAc,CAAC,EAAqB,EAAM,mBAAoB,IAGlF,EAAM,MAAM,CAAG,EAAG,CACpB,IAAM,EAAM,EAAM,GAAG,GACrB,EAAQ,CACN,EAAa,cAAc,CACzB,EAAa,uBAAuB,CAAC,EAAE,CAAE,EAAa,cAAc,CAAC,IAAI,EAAO,EAAa,eAAe,CAAC,GAAK,GAClH,EAAE,EAEL,AACH,CACA,MAAO,CAAE,MAAA,EAAO,SAAU,GAAI,UAAW,CAAA,CAAK,CAChD,EAqNsD,GAKpD,IAAM,EAAc,AAAC,CAAA,EAAO,SAAS,EAAI,EAAE,AAAF,EAAI,IAAI,CAAC,AAAA,GAChD,EAAS,QAAQ,CAAC,QAAQ,CAAC,WAG7B,AAAI,GAAa,OAAS,OAAS,AAA6B,QAA7B,EAAU,GAAM,QAAQ,CAClD,AArtFX,SAA4B,CAAI,CAAE,CAAI,EACpC,IAAI,EAAU,EAAW,EAAK,IAAI,EAChC,EAAS,EAAU,GACnB,EAAU,EAAK,QAAQ,EAAI,AAAW,OAAX,GAAoB,EAAY,GAAG,CAAC,GAC/D,EAAU,EAAa,OAAO,CAAC,GAAW,GAC1C,EAAkB,EAAQ,OAAO,CAAC,KAAO,GACzC,EAAU,CACR,SAAU,CAAC,CAAC,EAAE,EAAQ,CAAC,CACvB,aAAc,EAAE,CAChB,MAAO,EAAE,CACT,SAAU,EAAE,CACZ,UAAW,EAAE,CACb,MAAO,EACP,iBAAkB,EAClB,QAAA,EACA,SAAU,KACZ,EACF,GAAI,EAAO,UAAU,EAAK,CAAA,AAAY,SAAZ,GAAsB,AAAY,SAAZ,GAAsB,AAAY,SAAZ,CAAY,IAChF,EAAQ,YAAY,CAAG,CAAA,EACnB,AAAY,SAAZ,GAAsB,EAAK,QAAQ,EAAE,CACvC,IAAM,EAAkB,EACtB,EACA,kBACA,EAAkB,EAAM,OAAO,UAAU,EAErC,EAAc,EAClB,EACA,cACA,EAAkB,EAAM,OAAO,UAAU,EAO3C,OALA,EAAQ,KAAK,CAAC,IAAI,CAChB,EAAa,mBAAmB,CAC9B,EAAa,cAAc,CAAC,EAAiB,CAAC,EAAa,EAAa,gBAAgB,CAAC,EAAE,EAAE,IAG1F,CACT,CASF,GAPI,GAAS,CAAA,EAAQ,QAAQ,CAAG,QAAU,EAAQ,QAAQ,AAAR,EAC7C,EAAK,MAAM,EAAE,CAAA,EAAQ,EAAE,CAAG,EAAK,KAAK,CAAC,qBAAqB,CAAC,MAAhE,EACA,AAqKF,SAA+B,CAAI,CAAE,CAAO,EAC1C,IAAI,EAAO,EAAQ,EAAE,CACnB,EAAqB,CAAA,EACrB,EACA,EACA,EAAa,EAAK,GAAG,CAAC,kBAAkB,GAAG,CAAC,cACxC,EAAU,EAAW,EAAK,IAAI,EAClC,EAAQ,EAAY,GAAG,CAAC,GACxB,EAAO,EAAQ,QAAQ,CAAC,KACxB,EAAc,EAAK,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAG,EAC1C,EAAS,EAAU,GAGjB,EAAW,IAAI,CAAC,AAAA,GAAa,EAAa,oBAAoB,CAAC,EAAU,IAAI,KAC/E,CAAC,EAAY,EAAW,CAAG,AAguB/B,SAA0B,CAAI,CAAE,CAAU,CAAE,CAAE,KAAA,CAAI,CAAE,MAAA,CAAK,CAAE,YAAA,CAAW,CAAE,iBAAA,CAAgB,CAAE,EAExF,IAAM,EAAqB,EAAE,CACvB,EAAa,EAAE,CACjB,EAAgB,EAAE,CAClB,EAAgB,CAAA,EAChB,EAAc,CAAA,EAClB,EAAW,OAAO,CAAC,AAAA,IACjB,IAAM,EAAO,EAAU,IAAI,CACrB,EACJ,CAAC,EAAa,oBAAoB,CAAC,IAClC,CAAA,EAAa,mBAAmB,CAAC,EAAK,IAAI,EACvC,CAAC,EAAE,EAAK,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,EAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CACpD,EAAK,IAAI,CAAC,IAAI,AAAJ,EAChB,GAAI,EAAa,oBAAoB,CAAC,GACpC,EAAc,CAAA,EACV,EAAc,MAAM,GACtB,EAAW,IAAI,CAAC,EAAa,gBAAgB,CAAC,IAC9C,EAAgB,EAAE,EAEpB,EAAW,IAAI,CACb,EAAU,EAAU,GAAG,CAAC,YAAa,CACnC,YAAa,CAAA,CACf,IAAO,CAAA,EAAgB,CAAA,CAAA,EACnB,CAAA,EAAa,gBAAgB,CAAC,EAAK,QAAQ,GAC1C,EAAK,QAAQ,CAAC,SAAS,CAAC,MAAM,EAC9B,EAAa,gBAAgB,CAAC,EAAK,QAAQ,CAAC,MAAM,GAClD,EAAa,kBAAkB,CAAC,EAAK,QAAQ,CAAC,MAAM,EAEnD,EAAa,uBAAuB,CAAC,EAAE,CAAE,EAAK,QAAQ,EADtD,EAAK,QAAQ,CAAC,MAAM,CAEtB,EAAK,QAAQ,OAEd,GACL,AAAC,CAAA,GACE,EAAa,wBAAwB,CAAC,EAAK,KAAK,GAC/C,EAAU,EAAU,GAAG,CAAC,SAAS,GAAG,CAAC,cAAe,CAAE,YAAa,CAAA,CAAK,EAAA,GAC5E,EAAgB,EAAK,CAAE,gBAAiB,CAAA,CAAK,GAC7C,CACA,IAAM,EAAc,EAAa,wBAAwB,CAAC,EAAK,KAAK,EAGpE,GADE,GAAe,EAAU,EAAU,GAAG,CAAC,SAAS,GAAG,CAAC,cAAe,CAAE,YAAa,CAAA,CAAK,GAC5E,CACX,IAAM,EAAK,EAAqB,EAAK,IAAI,EACrC,EACF,GACC,CAAA,EAAa,mBAAmB,CAAC,EAAK,KAAK,CAAC,UAAU,GACrD,EAAa,uBAAuB,CAAC,EAAK,KAAK,CAAC,UAAU,CAAA,EACxD,EAAmB,EAAU,GAAG,CAAC,SAAS,GAAG,CAAC,cAAe,CAAA,GAC7D,EAAa,uBAAuB,CAAC,EAAE,CAAE,EAAK,KAAK,CAAC,UAAU,EACpE,EAAc,IAAI,CAChB,EAAa,YAAY,CACvB,MACA,EACA,EAAE,CACF,EAAa,cAAc,CAAC,CAAC,EAAa,eAAe,CAAC,EAAK,IAAI,EAAE,EACrE,CAAC,EAAa,iBAAiB,CAAC,IAGtC,MACE,EAAc,IAAI,CAChB,EAAa,cAAc,CACzB,EAAa,aAAa,CAAC,GAC3B,EACI,EAAK,KAAK,CAAC,UAAU,CACrB,EAAK,KAAK,EAAK,CAAA,EAAW,GAAG,CAAC,GAAO,EAAa,cAAc,CAAC,CAAA,GAAQ,EAAa,aAAa,CAAC,GAAA,GAIhH,MAAO,EAAmB,IAAI,CAAC,EACjC,GAEI,EAAc,MAAM,EACtB,EAAW,IAAI,CAAC,EAAa,gBAAgB,CAAC,IAGhD,IAAM,EACJ,AAAsB,IAAtB,EAAW,MAAM,EAAW,EAExB,EAAa,cAAc,CAAC,EAAqB,EAAM,cAAe,GADtE,CAAU,CAAC,EAAE,CAGnB,MAAO,CACL,EACA,EAAa,mBAAmB,CAC9B,EAAa,cAAc,CACzB,EAAqB,EAAM,SAAU,EAAkB,EAAM,OAAO,UAAU,EAC9E,CAAC,EAAM,EAAO,EAAa,cAAc,CAAC,GAAQ,EAAa,cAAc,CAAC,GAAa,GAGhG,AACH,EAzzBgD,EAAM,EAAY,CAC5D,KAAA,EACA,MAAA,EACA,YAAA,EACA,iBAAkB,EAAO,gBAAgB,AAC3C,GACA,EAAK,GAAG,CAAC,kBAAkB,GAAG,CAC5B,aACA,EAAW,GAAG,CAAC,AAAA,GAAK,EAAE,IAAI,GAG5B,EAAqB,CAAA,GAIvB,IAAM,EAAiB,EACpB,GAAG,CAAC,kBACJ,GAAG,CAAC,cACJ,IAAI,CACH,AAAA,GACE,EAAE,IAAI,CAAC,IAAI,EACX,AAAqB,UAArB,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,EAChB,EAAa,wBAAwB,CAAC,EAAE,IAAI,CAAC,KAAK,GAClD,EAAa,kBAAkB,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,GACvD,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,AAAA,GAAK,EAAa,eAAe,CAAC,KAEjF,GAAI,EAAgB,CAClB,IAAI,EAAI,EACN,EAAU,EAAe,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,eAAe,CAChE,EAAe,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,GAAG,OAAO,CAAC,CAAC,EAAG,KAC7D,EAAE,QAAQ,GACT,GAAS,CAAA,EAAE,KAAK,CAAC,eAAe,CAAG,CAAvC,EACA,EACG,GAAG,CAAC,kBACJ,IAAI,CAAC,UAAU,CAAC,MAAM,CACrB,EAAe,GAAG,EAAG,EAAE,EACvB,EACA,EAAa,YAAY,CACvB,EAAa,iBAAiB,CAC5B,EAAa,aAAa,CAAC,SAC3B,EAAa,aAAa,CAAC,EAAa,YAAY,CAAC,EAAE,GAAG,EAAI,EAAE,GAAG,CAAC,IAAI,CAAG,EAAE,GAAG,CAAC,KAAK,GAExF,EAAa,sBAAsB,CAAC,EAAE,KAAK,IAGjD,EAAe,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,EAAQ,EAAI,EAAG,GAE1E,GACK,EAAe,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,EACzD,EAAK,GAAG,CAAC,kBAAkB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAe,GAAG,CAAE,EAC1E,CAIA,IAAM,EAAqB,AAD3B,CAAA,EAAa,EAAK,GAAG,CAAC,kBAAkB,GAAG,CAAC,aAA5C,EACsC,IAAI,CACxC,AAAA,GACE,EAAE,IAAI,CAAC,IAAI,EACX,AAAqB,cAArB,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,EAChB,EAAa,wBAAwB,CAAC,EAAE,IAAI,CAAC,KAAK,GAClD,EAAa,kBAAkB,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,GACvD,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CACtC,AAAA,GACE,EAAa,eAAe,CAAC,IAC7B,EAAE,QAAQ,EACT,EAAa,eAAe,CAAC,EAAE,GAAG,GAAM,CAAA,EAAE,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAQ,EAAE,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAA,IAGnG,GAAI,EAAoB,CACtB,IAAI,EAAI,EACN,EAAU,EAAmB,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,eAAe,CAClE,EAAsB,EAAmB,GAAG,CAAC,SAAS,GAAG,CAAC,cAAc,GAAG,CAAC,cAC9E,EAAoB,KAAK,GAAG,OAAO,CAAC,CAAC,EAAU,KAC7C,IAAM,EAAI,EAAS,IAAI,CACjB,CAAE,UAAA,CAAS,CAAE,MAAO,CAAQ,CAAE,CAAG,EAAS,GAAG,CAAC,SAAS,QAAQ,GACjE,GAAS,CAAA,EAAE,KAAK,CAAC,eAAe,CAAG,CAAvC,EACK,EAcM,GACT,EACG,GAAG,CAAC,kBACJ,IAAI,CAAC,UAAU,CAAC,MAAM,CACrB,EAAmB,GAAG,EAAG,EAAE,EAC3B,EACA,EAAa,YAAY,CACvB,EAAa,aAAa,CAAC,SAC3B,EAAa,aAAa,CAAC,EAAa,YAAY,CAAC,EAAE,GAAG,EAAI,EAAE,GAAG,CAAC,IAAI,CAAG,EAAE,GAAG,CAAC,KAAK,IArB5F,EACG,GAAG,CAAC,kBACJ,IAAI,CAAC,UAAU,CAAC,MAAM,CACrB,EAAmB,GAAG,EAAG,EAAE,EAC3B,EACA,EAAa,YAAY,CACvB,EAAa,iBAAiB,CAC5B,EAAa,aAAa,CAAC,SAC3B,EAAa,aAAa,CAAC,EAAa,YAAY,CAAC,EAAE,GAAG,EAAI,EAAE,GAAG,CAAC,IAAI,CAAG,EAAE,GAAG,CAAC,KAAK,GAExF,EAAa,sBAAsB,CAAC,EAAE,KAAK,IAenD,EAAoB,MAAM,CAAC,EAAQ,EAAI,EAAG,EAC5C,GACK,EAAoB,MAAM,EAC7B,EAAK,GAAG,CAAC,kBAAkB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAmB,GAAG,CAAE,EAC9E,CAIA,IAAM,EAAkB,AADxB,CAAA,EAAa,EAAK,GAAG,CAAC,kBAAkB,GAAG,CAAC,aAA5C,EACmC,MAAM,CACvC,AAAA,GAAK,EAAE,IAAI,CAAC,IAAI,EAAK,CAAA,AAAqB,UAArB,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAgB,AAAqB,cAArB,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,AAAK,GAE5E,GAAI,EAAgB,MAAM,CAAG,EAAG,CAC9B,IAAM,EAAQ,CAAe,CAAC,EAAE,CAAC,IAAI,CACnC,EAAS,EAAE,CACX,EAAS,CAAC,EAAa,eAAe,CAAC,CAAE,IAAK,EAAG,GAAG,CACtD,IAAK,IAAI,EAAI,EAAG,EAAI,EAAgB,MAAM,CAAE,IAAK,CAC/C,IAAM,EAAO,CAAe,CAAC,EAAE,CAAC,IAAI,CAClC,EAAS,IAAM,EAAgB,MAAM,CAAG,EAC1C,GAAK,EAAa,wBAAwB,CAAC,EAAK,KAAK,EAQnD,EAAO,IAAI,CAAC,EAAa,iBAAiB,CAAC,KAAM,EAAK,KAAK,CAAC,UAAU,CAAE,EAAa,aAAa,CAAC,MACnG,EAAO,IAAI,CAAC,EAAa,eAAe,CAAC,CAAE,IAAK,EAAS,GAAK,GAAI,QATZ,CACtD,IAAM,EAAO,EAAO,GAAG,GACvB,EAAO,IAAI,CACT,EAAa,eAAe,CAAC,CAC3B,IAAK,AAAC,CAAA,EAAO,EAAK,KAAK,CAAC,GAAG,CAAG,EAAA,EAAM,CAAC,EAAE,EAAK,KAAK,CAAC,KAAK,CAAC,CAAC,CAAI,CAAA,EAAS,GAAK,GAAA,CAC7E,GAEJ,CAIA,GAAK,EAAW,MAAM,CAAC,EAAW,OAAO,CAAC,CAAe,CAAC,EAAE,EAAG,EACjE,CACI,EAAO,MAAM,CAAE,EAAM,KAAK,CAAG,EAAa,sBAAsB,CAAC,EAAa,eAAe,CAAC,EAAQ,IACrG,EAAM,KAAK,CAAG,EAAa,aAAa,CAAC,CAAM,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CACnE,CACA,EAAK,GAAG,CAAC,kBAAkB,GAAG,CAC5B,aACA,EAAW,GAAG,CAAC,AAAA,GAAK,EAAE,IAAI,GAG5B,IAAI,EAAe,CAAA,EAEnB,EACG,GAAG,CAAC,kBACJ,GAAG,CAAC,cACJ,OAAO,CAAC,AAAA,IACP,IAAM,EAAO,EAAU,IAAI,CACvB,EAAQ,EAAK,KAAK,CACpB,EAAM,EAAa,mBAAmB,CAAC,EAAK,IAAI,EAC5C,CAAC,EAAE,EAAK,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,EAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CACpD,EAAK,IAAI,CAAC,IAAI,CAClB,EACE,EAAa,mBAAmB,CAAC,EAAK,IAAI,GAAK,EAAmB,GAAG,CAAC,EAAK,IAAI,CAAC,SAAS,CAAC,IAAI,EAClG,GAAI,EAAa,wBAAwB,CAAC,IAAU,CAAC,EAAI,UAAU,CAAC,QAAS,KAEvE,EADJ,IAAM,EAAY,EAAU,GAAG,CAAC,SAAS,GAAG,CAAC,cAAc,QAAQ,GAAG,KAAK,AAG3D,MAAA,IAAd,GACE,CAAA,AAA6B,UAA7B,CAAA,EAAO,OAAO,CAAA,GAA2B,AAAS,WAAT,CAAS,GAEpD,CAAA,EAAQ,EAAa,aAAa,CAAC,OAAO,GAJ5C,CAMF,CAQA,GANE,EAAa,mBAAmB,CAAC,EAAK,IAAI,GAC1C,GACA,CAAC,EAAa,wBAAwB,CAAC,IAEvC,CAAA,EAAK,KAAK,CAAG,EAAQ,EAAa,sBAAsB,CAAC,GAAS,EAAa,kBAAkB,GALnG,EAQE,EAAa,wBAAwB,CAAC,IACrC,CAAA,GACC,CAAE,CAAA,EAAa,eAAe,CAAC,EAAM,UAAU,GAAK,EAAa,gBAAgB,CAAC,EAAM,UAAU,CAAA,CAAA,GAEpG,GAAI,AAAQ,QAAR,EAAe,CAEjB,KACE,EAAa,qBAAqB,CAAC,EAAM,UAAU,GACnD,EAAa,gBAAgB,CAAC,EAAM,UAAU,GAE9C,EAAM,UAAU,CAAG,EAAM,UAAU,CAAC,UAAU,CAEhD,IAAI,EACF,EACE,EAAa,YAAY,CAAC,EAAM,UAAU,GACzC,CAAA,EAAU,EAAK,KAAK,CAAC,UAAU,CAAC,EAAM,UAAU,CAAC,IAAI,CAAA,GACtD,AAAiB,UAAjB,EAAQ,IAAI,CAChB,GAAI,CAAC,GAAc,EAAa,MAAM,CAAC,EAAM,UAAU,EAAG,CACxD,IAAM,EAAgB,EAAK,KAAK,CAAC,qBAAqB,CAAC,SACvD,EAAQ,KAAK,CAAC,OAAO,CACnB,EAAa,mBAAmB,CAAC,QAAS,CACxC,EAAa,kBAAkB,CAAC,EAAe,EAAM,UAAU,EAChE,EACD,EAAa,mBAAmB,CAC9B,EAAa,qBAAqB,CAChC,EAAa,gBAAgB,CAC3B,MACA,EAAa,eAAe,CAAC,SAAU,GACvC,EAAa,aAAa,CAAC,aAE7B,EAAa,cAAc,CACzB,EAAqB,EAAM,MAAO,EAAkB,EAAM,OAAO,UAAU,EAC3E,CAAC,EAAe,EAAK,EAEvB,EAAa,oBAAoB,CAAC,IAAK,EAAM,UAAU,CAAE,KAIjE,MAAO,GAAI,GAAc,EAAa,UAAU,CAAC,EAAM,UAAU,EAC/D,EAAQ,KAAK,CAAC,OAAO,CACnB,EAAa,mBAAmB,CAC9B,EAAa,cAAc,CACzB,EAAqB,EAAM,MAAO,EAAkB,EAAM,OAAO,UAAU,EAC3E,CAAC,EAAM,UAAU,CAAE,EAAK,SAIzB,GAAI,EAAa,gBAAgB,CAAC,EAAM,UAAU,EAAG,CAC1D,IAAM,EAAgB,EAAK,KAAK,CAAC,qBAAqB,CAAC,SACvD,EAAQ,KAAK,CAAC,OAAO,CACnB,EAAa,mBAAmB,CAAC,QAAS,CACxC,EAAa,kBAAkB,CAAC,EAAe,EAAM,UAAU,EAChE,EACD,EAAa,mBAAmB,CAC9B,EAAa,iBAAiB,CAC5B,KACA,EAAa,gBAAgB,CAC3B,MACA,EAAa,eAAe,CAAC,SAAU,GACvC,EAAa,aAAa,CAAC,aAE7B,EAAa,cAAc,CACzB,EAAqB,EAAM,MAAO,EAAkB,EAAM,OAAO,UAAU,EAC3E,CAAC,EAAe,EAAK,IAK/B,CACF,MAAO,GAAI,EAAI,UAAU,CAAC,QAExB,EAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAG,aACtB,EAAQ,KAAK,CAAC,OAAO,CACnB,EAAa,mBAAmB,CAC9B,EAAa,cAAc,CACzB,EAAqB,EAAM,MAAO,EAAkB,EAAM,OAAO,UAAU,EAC3E,CACE,EAAK,IAAI,CAAC,IAAI,CACd,EACA,EAAa,uBAAuB,CAClC,EAAE,CACF,EAAa,oBAAoB,CAAC,EAAM,UAAU,EAC9C,EAAa,cAAc,CAAC,CAAA,GAC5B,EAAM,UAAU,EAEvB,SAIF,GAAI,AAAQ,aAAR,EACT,EAAW,OACN,GAAI,EAAI,UAAU,CAAC,MAAO,CAC/B,IAAM,EA1wBP,AA0wBwB,EA1wBnB,KAAK,CAAC,GAAG,WAAW,GA2wBxB,GAAI,EAAI,UAAU,CAAC,QAAU,EAAI,UAAU,CAAC,cAAe,CACzD,IAAM,EAAkB,CAAC,EAAa,aAAa,CAAC,EAAI,KAAK,CAAC,IAAI,CAAC,EAAE,EAAG,EAAM,UAAU,CAAC,CACzF,EAAQ,KAAK,CAAC,IAAI,CAChB,EAAa,mBAAmB,CAC9B,EAAa,cAAc,CACzB,EAAa,gBAAgB,CAAC,EAAM,EAAa,UAAU,CAAC,qBAC5D,EAAI,UAAU,CAAC,cACX,EAAgB,MAAM,CAAC,EAAa,cAAc,CAAC,CAAA,IACnD,IAIZ,MAAO,GACL,EAAO,cAAc,EACpB,CAAA,EAAgB,GAAG,CAAC,IAAO,AAAuC,KAAvC,EAAO,eAAe,CAAC,OAAO,CAAC,EAAQ,EACnE,CAEA,EAAqB,CAAA,EAIrB,AAFE,CAAA,EAAU,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC,MAAM,EAC7C,CAAA,EAAU,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAG,IAAI,GAAA,CAAI,EACrD,GAAG,CAAC,GACX,IAAI,EAAU,EAAM,UAAU,CACxB,EAAc,EAA6B,EAAW,GACxD,EAAa,iBAAiB,CAAC,IAC7B,EAAQ,QAAQ,CAAC,MAAM,CAAG,GAC5B,EAAQ,KAAK,CAAC,OAAO,CACnB,EAAa,mBAAmB,CAC9B,EAAa,oBAAoB,CAC/B,IACA,EAAa,gBAAgB,CAAC,EAAM,EAAa,UAAU,CAAC,CAAC,EAAE,EAAE,EAAG,IAAI,CAAC,GACzE,EAAQ,QAAQ,CAAC,EAAE,IAK3B,EAAU,EAAQ,QAAQ,CAAC,EAAE,CAC7B,EAAQ,KAAK,CAAC,OAAO,CACnB,EAAa,mBAAmB,CAC9B,EAAa,oBAAoB,CAC/B,IACA,EAAa,gBAAgB,CAAC,EAAM,EAAa,UAAU,CAAC,CAAC,EAAE,EAAE,EAAG,CAAC,GACrE,MAIG,EAAa,UAAU,CAAC,IAAY,EAC7C,EAAQ,KAAK,CAAC,OAAO,CACnB,EAAa,mBAAmB,CAC9B,EAAa,oBAAoB,CAC/B,IACA,EAAa,gBAAgB,CAAC,EAAM,EAAa,UAAU,CAAC,CAAC,EAAE,EAAE,EAAG,CAAC,GACrE,KAKN,EAAQ,KAAK,CAAC,OAAO,CACnB,EAAa,mBAAmB,CAC9B,EAAa,cAAc,CACzB,EACE,EACA,mBACA,EAAkB,EAAM,OAAO,UAAU,EAE3C,CAAC,EAAM,EAAa,aAAa,CAAC,GAAK,EAAS,EAAa,cAAc,CAAC,CAAA,GAAM,GAK5F,KAAO,CACL,IAAI,EAAU,EAAM,UAAU,CACxB,EAAc,EAA6B,EAAW,GACxD,EAAa,iBAAiB,CAAC,IAE/B,EADE,EAAQ,QAAQ,CAAC,MAAM,CAAG,EAClB,EAAa,uBAAuB,CAC5C,CAAC,EAAa,UAAU,CAAC,KAAK,CAC9B,EAAa,cAAc,CAAC,EAAQ,QAAQ,CAAC,EAAE,CAAE,CAAC,EAAQ,QAAQ,CAAC,EAAE,CAAE,EAAa,UAAU,CAAC,KAAK,GAEvF,EAAQ,QAAQ,CAAC,EAAE,CACpC,EAAQ,KAAK,CAAC,OAAO,CACnB,EAAa,mBAAmB,CAC9B,EAAa,cAAc,CAAC,EAAa,gBAAgB,CAAC,EAAM,EAAa,UAAU,CAAC,qBAAsB,CAC5G,EAAa,aAAa,CAAC,GAC3B,EACD,KAGI,EAAa,UAAU,CAAC,IAAY,EAC7C,EAAQ,KAAK,CAAC,OAAO,CACnB,EAAa,mBAAmB,CAC9B,EAAa,cAAc,CAAC,EAAa,gBAAgB,CAAC,EAAM,EAAa,UAAU,CAAC,qBAAsB,CAC5G,EAAa,aAAa,CAAC,GAC3B,EACD,IAIL,EAAQ,KAAK,CAAC,OAAO,CACnB,EAAa,mBAAmB,CAC9B,EAAa,cAAc,CACzB,EACE,EACA,mBACA,EAAkB,EAAM,OAAO,UAAU,EAE3C,CAAC,EAAM,EAAa,aAAa,CAAC,GAAK,EAAQ,GAKzD,CACF,MAAO,GACL,EAAO,aAAa,EACnB,CAAA,EAAU,EAAU,GAAG,CAAC,SAAS,GAAG,CAAC,cAAe,CACnD,YAAa,CAAA,CACf,IACI,AAAA,CAAA,AAAQ,cAAR,GAAuB,AAAQ,UAAR,CAAQ,GAC/B,CAAC,EAAU,GAAG,CAAC,SAAS,GAAG,CAAC,cAAc,QAAQ,GAAG,SAAS,AAAT,EACzD,CACA,IAAI,EAAW,EACf,GAAI,AAAQ,UAAR,GAAmB,AAAQ,YAAR,EAAmB,CACxC,IAAM,EAAkB,EAAqB,EAAM,EAAO,aAAa,EACvE,EAAQ,SAAS,CAAC,IAAI,CACpB,EAAa,mBAAmB,CAC9B,EAAa,cAAc,CAAC,EAAiB,CAC3C,EAAa,uBAAuB,CAClC,EAAE,CACF,EAAU,EAAM,EAAM,EAAK,EAAM,UAAU,CAAE,CAC3C,QAAA,EACA,MAAA,EACA,KAAA,CACF,IAEH,IAGL,MACF,CACY,gBAAR,IACF,EAAW,EAAU,KAAK,CAAC,qBAAqB,CAAC,OAEjD,AADA,CAAA,EAAW,EAAa,OAAO,CAAC,IAAhC,EACS,KAAK,CAAG,CAAE,IAAK,IAAK,SAAU,GAAI,EAC3C,EAAQ,YAAY,CAAC,IAAI,CACvB,EAAa,kBAAkB,CAAC,EAAU,EAAa,gBAAgB,CAAC,EAAM,EAAa,UAAU,CAAC,kBAG1G,EAAQ,QAAQ,CAAC,IAAI,CAAC,CACpB,KAAM,EACN,IAAA,EACA,MAAO,EAAM,UAAU,CACvB,MAAA,EACA,KAAA,EACA,QAAA,CACF,EACF,MACE,EAAQ,KAAK,CAAC,IAAI,CAChB,EAAa,mBAAmB,CAC9B,EAAU,EAAW,EAAM,EAAK,EAAM,UAAU,CAAE,CAAE,MAAA,EAAO,KAAA,EAAM,QAAA,CAAQ,SAI1E,CACL,GAAI,EAAO,UAAU,EAAI,AAAQ,gBAAR,EAAuB,CAC9C,EAAQ,YAAY,CAAG,CAAA,EACvB,MACF,CAGA,GAFI,EAAa,wBAAwB,CAAC,IAAQ,CAAA,EAAQ,EAAM,UAAU,AAAV,EAChE,EAAM,CAAO,CAAC,EAAI,EAAI,EAClB,GAAS,EAAgB,GAAG,CAAC,GAC/B,EAAQ,KAAK,CAAC,IAAI,CAChB,EAAa,mBAAmB,CAAC,EAAU,EAAW,EAAM,EAAK,EAAO,CAAE,MAAA,EAAO,KAAA,EAAM,QAAA,CAAQ,SAE5F,CAGL,GAFA,AAAC,GAAU,CAAA,EAAM,EAAI,WAAW,EAAA,EAChC,EAAQ,QAAQ,EAAI,CAAC,EAAE,EAAe,IAAM,GAAG,EAAE,EAAI,CAAC,CAClD,CAAC,EAAO,CACV,EAAe,CAAA,EACf,MACF,CAEA,IAAI,EAAO,EAAM,KAAK,CAClB,EAAe,CAAA,EASnB,GAPI,CAAA,AAAQ,UAAR,GAAmB,AAAQ,UAAR,CAAQ,IAC7B,EAAO,EAAe,GACV,UAAR,GACF,CAAA,EAAO,EAAK,OAAO,CAAC,MAAO,KAAK,OAAO,CAAC,MAAO,IADjD,GAKE,CAAC,EAAK,MAAM,CAAE,CAChB,EAAe,CAAA,EACf,EAAQ,QAAQ,EAAI,MACpB,MACF,CAEA,IAAK,IAAI,EAAI,EAAG,EAAM,EAAK,MAAM,CAAE,EAAI,EAAK,IAAK,CAC/C,IAAI,EAAO,CAAI,CAAC,EAAE,CAGhB,CAAA,AAAS,MAAT,GACA,AAAS,MAAT,GACA,AAAS,MAAT,GACA,AAAS,MAAT,GACA,AAAS,OAAT,GACA,AAAS,OAAT,GACA,AAAS,MAAT,GACA,AAAS,MAAT,GACA,AAAS,MAAT,GACA,AAAS,MAAT,CAAS,GAET,CAAA,EAAe,CAAA,CAZjB,CAcF,CAEI,GACF,EAAe,CAAA,EACf,EAAQ,QAAQ,EAAI,CAAC,EAAE,EAAE,EAAgB,EAAW,EAAM,CAAA,IAAO,CAAC,CAAC,GAEnE,EAAe,CAAA,EACf,EAAQ,QAAQ,EAAI,CAAC,CAAC,EAAE,EAAgB,EAAW,EAAM,CAAA,IAAO,CAAC,CAErE,CACF,CACF,GACE,CAAC,GAAe,GAClB,EAAK,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAEtB,GAAY,EAAQ,KAAK,CAAC,IAAI,CAAC,GAEnC,EAAQ,kBAAkB,CAAG,EAAQ,kBAAkB,EAAI,CAC7D,EAnqBwB,EAAM,GACxB,EAAO,uBAAuB,EAAK,CAAA,AAAY,SAAZ,GAAsB,CAAA,GAC3D,AAk4BJ,SAAgC,CAAI,CAAE,CAAO,EAC3C,EAAQ,KAAK,CAAC,IAAI,CAChB,EAAa,mBAAmB,CAC9B,EAAa,oBAAoB,CAC/B,IACA,EAAa,gBAAgB,CAAC,EAAQ,EAAE,CAAE,EAAa,UAAU,CAAC,YAClE,EAAa,cAAc,CACzB,EAAqB,EAAM,WAAY,EAAkB,EAAM,OAAO,UAAU,EAChF,EAAE,IAKZ,EA/4B2B,EAAM,GAE/B,EAAQ,QAAQ,EAAI,IAChB,CAAC,EAAS,CAEZ,IAAM,EACJ,CAAC,EAAK,WAAW,EAChB,EAAK,UAAU,EAAK,CAAA,CAAC,EAAO,qBAAqB,EAAI,EAAK,UAAU,CAAC,GAAG,CAAC,EAAA,EACxE,GACF,EAAQ,UAAU,CAAG,IAAI,IAAI,EAAK,UAAU,EAAI,GAChD,EAAQ,UAAU,CAAC,GAAG,CAAC,GACnB,EAAe,QAAQ,CAAC,IAAU,EAAc,OAAO,CAAC,AAAA,GAAK,EAAQ,UAAU,CAAC,GAAG,CAAC,KACnF,EAAQ,UAAU,CAAG,EAAK,UAAU,CAC3C,AAwqBJ,SAA6B,CAAI,CAAE,CAAO,CAAE,CAAM,EAChD,IAAI,EAAW,EAAQ,EAAE,EAAI,EAAQ,EAAE,CAAC,IAAI,CAC1C,EAAU,EAAW,EAAK,IAAI,EAC9B,EACA,EAAI,EACA,EAAmB,EAAe,EAAK,GAAG,CAAC,aAC/C,EAAc,AAxBlB,SAAyB,CAAQ,CAAE,CAAU,EAC3C,IAAI,EAAc,GAChB,EACF,IAAK,IAAI,EAAI,EAAS,MAAM,CAAG,EAAG,GAAK,EAAG,IAAK,CAC7C,IAAM,EAAO,CAAQ,CAAC,EAAE,CAAC,IAAI,CAC7B,GACE,GACA,EAAa,SAAS,CAAC,IACvB,AAAqC,CAAA,IAArC,EAAoB,CAAQ,CAAC,EAAE,GAC9B,EAAa,YAAY,CAAC,IAAU,CAAA,EAAU,EAAW,EAAA,GAAU,CAAC,EAAY,GACjF,CACA,EAAc,EACd,KACF,CACF,CACA,OAAO,CACT,EAQkC,EAAkB,EAAO,UAAU,EACjE,EAAa,EAAiB,MAAM,CAAC,CAAC,EAAM,EAAO,KACjD,GAAI,EAAM,aAAa,GACrB,MAAM,AAAI,MACR,CAAC,+DAA+D,EAAE,EAAQ,EAAE,CAAC,EAGjF,IAAM,EAAc,EAAc,EAAO,CACvC,WAAY,EAAQ,UAAU,CAC9B,YAAa,IAAU,EACvB,OAAQ,CAAC,EAAQ,EAAE,EAAI,CAAC,AAmJhC,SAAS,EAAkB,CAAQ,CAAE,CAAK,CAAE,CAAM,EAChD,GAAI,CAAQ,CAAC,EAAQ,EAAE,CAAE,KAQnB,EAPJ,IAAM,EAAO,CAAQ,CAAC,EAAQ,EAAE,CAAC,IAAI,CACrC,GACE,EAAa,wBAAwB,CAAC,IACtC,CAAC,EAAa,oBAAoB,CAAC,EAAK,UAAU,GAClD,AAA6C,CAAA,IAA7C,EAAoB,CAAQ,CAAC,EAAQ,EAAE,GAIrC,EAAa,YAAY,CAAC,IAAU,CAAA,EAAU,EAAW,EAAA,GAAU,EAAY,GAFjF,MAAO,CAAA,CAGX,CACA,IAAK,IAAI,EAAI,EAAO,EAAI,EAAS,MAAM,CAAE,IAAK,CAC5C,IAAM,EAAQ,CAAQ,CAAC,EAAE,CAAC,IAAI,CAC9B,GAAI,EAAa,wBAAwB,CAAC,GACxC,CAAA,GAAI,CAAC,EAAa,oBAAoB,CAAC,EAAM,UAAU,GAAK,AAAqC,CAAA,IAArC,EAAoB,CAAQ,CAAC,EAAE,EACzF,MAAO,CAAA,CADT,MAEK,GAAI,EAAa,YAAY,CAAC,GAAQ,CAC3C,IAAM,EAAU,EAAW,GAC3B,GAAI,EAAY,IACZ,EAAO,uBAAuB,EAAK,CAAA,AAAY,SAAZ,GAAsB,EAAQ,OAAO,CAAC,KAAO,EAAA,GAGlF,EAAM,cAAc,CAAC,UAAU,CAAC,IAAI,CAClC,AAAA,GACE,EAAa,oBAAoB,CAAC,IAClC,CAAC,cAAe,YAAa,YAAY,CAAC,QAAQ,CAAC,EAAK,IAAI,CAAC,IAAI,GAChE,EAAK,IAAI,CAAC,SAAS,EAAI,AAA6B,QAA7B,EAAK,IAAI,CAAC,SAAS,CAAC,IAAI,EAC/C,EAAa,wBAAwB,CAAC,EAAK,KAAK,GAC/C,CACE,CAAA,EAAa,eAAe,CAAC,EAAK,KAAK,CAAC,UAAU,GAClD,EAAa,gBAAgB,CAAC,EAAK,KAAK,CAAC,UAAU,CAAA,GAZnC,MAAO,CAAA,EAiBjC,IAAM,EAAe,EAAe,CAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,aACpD,GAAI,EAAa,MAAM,EAAM,EAAkB,EAAc,EAAG,GAAS,MAAO,CAAA,CAClF,CACF,CACF,EA3LkD,EAAkB,EAAO,EACrE,GACA,GAAI,CAAC,EAAa,OAAO,EACzB,IAAM,EAAI,EAAK,MAAM,CAIrB,OAHI,EAAY,IAAI,EAAI,GAAK,CAAI,CAAC,EAAI,EAAE,CAAC,IAAI,CAC3C,CAAI,CAAC,EAAI,EAAE,CAAC,QAAQ,EAAI,EAAY,QAAQ,CACvC,EAAK,IAAI,CAAC,GACV,CACT,EAAG,EAAE,EAEP,EAAW,OAAO,CAAC,CAAC,EAAO,KACzB,GAAK,GACL,GAAI,EAAM,OAAO,EAAI,AAAmB,QAAnB,EAAM,QAAQ,CACjC,MAAM,AAAI,MAAM,CAAC,CAAC,EAAE,EAAM,OAAO,CAAC,uBAAuB,EAAE,EAAQ;gFACO,CAAC,EAI7E,GADA,EAAQ,QAAQ,EAAI,EAAM,QAAQ,CAC9B,EAAM,EAAE,CAAE,KAsBR,EArBJ,GAAI,AAAkB,SAAlB,EAAM,OAAO,CAAa,CAC5B,GAAI,EAAO,UAAU,CAAE,CACrB,IAAM,EAAkB,EACtB,EACA,kBACA,EAAkB,EAAM,OAAO,UAAU,EAErC,EAAc,EAClB,EACA,cACA,EAAkB,EAAM,OAAO,UAAU,EAE3C,EAAQ,KAAK,CAAC,IAAI,CAChB,EAAa,mBAAmB,CAC9B,EAAa,cAAc,CAAC,EAAiB,CAAC,EAAa,EAAa,gBAAgB,CAAC,EAAE,EAAE,GAGnG,CACA,MACF,CAGI,EAAO,UAAU,EAAI,AAAY,SAAZ,GACvB,CAAA,EAAe,EACb,EACA,eACA,EAAkB,EAAM,OAAO,UAAU,CAAA,EAG7C,IAAM,EAAO,EAAa,gBAAgB,CACxC,EAAa,UAAU,CAAC,GACxB,EAAa,UAAU,CAAC,AAAM,IAAN,EAAU,aAAe,gBAEnD,EAAQ,YAAY,CAAC,IAAI,CACvB,EAAa,kBAAkB,CAC7B,EAAM,EAAE,CACR,EAAO,UAAU,EAAI,AAAY,SAAZ,EACjB,EAAa,cAAc,CAAC,EAAc,CAAC,EAAM,EAAa,aAAa,CAAC,EAAM,OAAO,EAAE,EAC3F,IAGR,EAAQ,YAAY,CAAC,IAAI,IAAI,EAAM,YAAY,EAC/C,EAAQ,KAAK,CAAC,IAAI,IAAI,EAAM,KAAK,EACjC,EAAQ,QAAQ,CAAC,IAAI,IAAI,EAAM,QAAQ,EACvC,EAAQ,SAAS,CAAC,IAAI,IAAI,EAAM,SAAS,EACzC,EAAQ,kBAAkB,CAAG,EAAQ,kBAAkB,EAAI,EAAM,kBAAkB,CACnF,EAAQ,gBAAgB,CAAG,EAAQ,gBAAgB,EAAI,EAAM,gBAAgB,CAC7E,EAAW,EAAM,EAAE,CAAC,IAAI,CACxB,EAAkB,KAClB,GACF,MAAO,GAAI,EAAM,KAAK,CAAC,MAAM,CAAE,CAC7B,IAAI,EAAS,EAAqB,EAAM,SAAU,EAAkB,EAAM,OAAO,UAAU,EACrF,EAAQ,EAAY,GACxB,EAAU,EAAO,UAAU,EAAI,EAEjC,GAAI,GAAW,AA1lCrB,SAAuB,CAAI,CAAE,CAAU,EACrC,IAAI,EAAQ,EACV,EACF,KAAO,EAAE,GAAS,GAAG,CACnB,IAAM,EAAO,CAAI,CAAC,EAAM,CACxB,GAAK,GACL,GAAI,EAAK,IAAI,CAAE,CACb,EAAU,CAAA,EACV,KACF,CACA,GAAI,EAAK,EAAE,CAAE,MAAO,CAAA,EACtB,CACA,GAAI,CAAC,EAAS,MAAO,CAAA,EAErB,IADA,EAAQ,EACD,EAAE,EAAQ,EAAK,MAAM,EAAE,CAC5B,IAAM,EAAO,CAAI,CAAC,EAAM,CACxB,GAAK,GACL,GAAI,EAAK,IAAI,CAAE,MAAO,CAAA,EACtB,GAAI,EAAK,EAAE,CAAE,MACf,CACA,MAAO,CAAA,CACT,EAqkCmC,EAAY,GAAQ,CAC/C,IAAI,EAAQ,EACR,GAAS,CAAA,EAAW,EAAkB,EAAM,EAAS,EAAU,IAAK,IAAI,CAAC,EAAE,CAAC,IAAI,AAAJ,EAC5E,EACF,EAAS,EAET,CAAC,EAAQ,EAAU,CAAG,EAAkB,EAAM,EAAS,EAAU,IAAK,EAAU,IAAM,IAEnF,GAAS,CAAA,EAAkB,CAAhC,EACA,EAAQ,KAAK,CAAC,IAAI,CAChB,EAAa,mBAAmB,CAC9B,EAAa,cAAc,CACzB,EACA,EACI,CAAC,EAAQ,EAAE,CAAE,EAAM,KAAK,CAAC,EAAE,CAAE,EAAQ,EAAU,CAC/C,CAAC,EAAQ,EAAE,CAAE,EAAM,KAAK,CAAC,EAAE,CAAE,EAAO,IAI9C,EAAW,EAAO,IAAI,AACxB,MAAW,EACT,EAAQ,KAAK,CAAC,IAAI,CAChB,EAAa,mBAAmB,CAC9B,EAAa,cAAc,CAAC,EAAQ,CAClC,EAAQ,EAAE,CACV,EAAM,KAAK,CAAC,EAAE,CACd,AA0Cd,SAAS,EAAY,CAAQ,CAAE,CAAK,EAClC,OAAO,CAAQ,CAAC,EAAQ,EAAE,EAAK,CAAA,CAAQ,CAAC,EAAQ,EAAE,CAAC,EAAE,EAAI,EAAY,EAAU,EAAQ,EAAA,CACzF,EA5C0B,EAAY,IAAU,EAAa,WAAW,GAC3D,IAIL,EAAQ,KAAK,CAAC,IAAI,CAChB,EAAa,mBAAmB,CAAC,EAAa,cAAc,CAAC,EAAQ,CAAC,EAAQ,EAAE,CAAE,EAAM,KAAK,CAAC,EAAE,CAAC,GAGvG,MAAO,EAAkB,KAC3B,EACF,EAvyBwB,EAAM,EAAS,GAC/B,GAAY,CAAA,EAAQ,QAAQ,EAAI,CAAC,EAAE,EAAE,EAAQ,CAAC,CAAC,AAAD,CACpD,CACA,GAAI,EAAK,QAAQ,EAAI,EAAO,UAAU,EAAI,EAAQ,kBAAkB,CAAE,CACpE,IAAI,EAAqB,EACvB,EACA,qBACA,EAAkB,EAAM,OAAO,UAAU,EAE3C,EAAQ,SAAS,CAAC,IAAI,CAAC,EAAa,mBAAmB,CAAC,EAAa,cAAc,CAAC,EAAoB,EAAE,GAC5G,CAEA,OADI,GAAS,CAAA,EAAQ,QAAQ,EAAI,QAAjC,EACO,CACT,EAipF8B,EAAM,GAG9B,AAA6B,QAA7B,EAAU,GAAM,QAAQ,CACnB,AAr7CX,SAAS,EAAmB,CAAI,CAAE,CAAI,EACpC,IAAM,EAAS,EAAU,GAEzB,GAAI,EAAK,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,AAAA,GAAK,EAAa,oBAAoB,CAAC,IAClF,OAAO,AA8bX,SAAuB,CAAI,CAAE,CAAE,SAAA,CAAQ,CAAE,WAAA,CAAU,CAAE,MAyB/C,EAxBJ,IAAM,EAAU,EAAW,EAAK,IAAI,EAClC,EAAS,EAAU,GACnB,EAAa,EAAoB,GAE7B,EAAmB,EAAe,EAAK,GAAG,CAAC,aAC/C,EAAQ,EAAY,GACpB,EAAU,GAAc,EACxB,EAAa,EAAiB,MAAM,CAAC,CAAC,EAAM,KAC1C,GAAI,EAAa,SAAS,CAAC,EAAK,IAAI,EAAG,CACrC,IAAM,EAAI,EAAa,MAAM,CAAC,EAAe,EAAK,IAAI,CAAC,KAAK,CAAC,GAAG,EAC5D,CAAA,EAAE,MAAM,EAAE,EAAK,IAAI,CAAC,EAAa,aAAa,CAAC,GACrD,KAAO,CACL,IAAM,EAAQ,EAAc,GACxB,GAAW,EAAM,KAAK,CAAC,MAAM,EAAI,CAAC,EAAM,aAAa,EACvD,EAAK,IAAI,CAAC,EAAa,aAAa,CAAC,aACnC,EAAM,KAAK,CAAC,MAAM,EAAI,CAAC,EAAM,aAAa,EAC5C,CAAA,EAAM,KAAK,CAAC,EAAE,CAAG,EAAiB,EAAM,EAAM,KAAK,CAAC,EAAE,CAAA,EACxD,EAAK,IAAI,CAAC,EAAkB,EAAQ,EAAM,GAAO,EAAM,EAAO,CAAA,IAC1D,GAAW,EAAM,KAAK,CAAC,MAAM,EAAI,CAAC,EAAM,aAAa,EACvD,EAAK,IAAI,CAAC,EAAa,aAAa,CAAC,YACzC,CACA,OAAO,CACT,EAAG,EAAE,EAGP,GAAI,AAAsB,IAAtB,EAAW,MAAM,CACnB,EAAQ,CAAC,CAAU,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,KAChC,CACL,EAAQ,EAAE,CACV,IAAI,EAAgB,EAAE,CACpB,EAAgB,CAAA,EAChB,EAAc,EAAK,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAG,EAE5C,EAAW,OAAO,CAAC,AAAA,IACjB,IAAM,EAAO,EAAU,IAAI,CAC3B,GAAI,EAAa,oBAAoB,CAAC,GAChC,EAAc,MAAM,GACtB,EAAM,IAAI,CAAC,EAAa,gBAAgB,CAAC,IACzC,EAAgB,EAAE,EAEpB,EAAM,IAAI,CACR,EAAU,EAAU,GAAG,CAAC,YAAa,CACnC,YAAa,CAAA,CACf,IAAO,CAAA,EAAgB,CAAA,CAAA,EACnB,CAAA,EAAa,gBAAgB,CAAC,EAAK,QAAQ,GAC1C,EAAK,QAAQ,CAAC,SAAS,CAAC,MAAM,EAC9B,EAAa,gBAAgB,CAAC,EAAK,QAAQ,CAAC,MAAM,GAClD,EAAa,kBAAkB,CAAC,EAAK,QAAQ,CAAC,MAAM,EAEnD,EAAa,uBAAuB,CAAC,EAAE,CAAE,EAAK,QAAQ,EADtD,EAAK,QAAQ,CAAC,MAAM,CAEtB,EAAK,QAAQ,MAEd,CACL,IAAM,EAAQ,EAAK,KAAK,EAAI,EAAa,cAAc,CAAC,CAAA,GACtD,EAAK,EAAqB,EAAK,IAAI,EACnC,EAAM,EAAa,mBAAmB,CAAC,EAAK,IAAI,EAC5C,CAAC,EAAE,EAAK,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,EAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CACpD,EAAK,IAAI,CAAC,IAAI,CAEpB,GAAI,GAAe,AAAQ,aAAR,GAEjB,AAAQ,QAAR,GACA,EAAI,UAAU,CAAC,SACf,EAAI,UAAU,CAAC,UACf,EAAI,UAAU,CAAC,MALsB,OAQvC,GAAI,EAAa,wBAAwB,CAAC,IACxC,GACE,EAAU,EAAU,GAAG,CAAC,SAAS,GAAG,CAAC,cAAe,CAClD,YAAa,CAAA,EACb,UAAW,CAAA,CACb,GACA,CACA,IAAI,EAAO,EAAa,uBAAuB,CAAC,EAAE,CAAE,EAAM,UAAU,EACpE,EAAc,IAAI,CAChB,EAAa,YAAY,CACvB,MACA,EACA,EAAE,CACF,EAAa,cAAc,CAAC,CAAC,EAAa,eAAe,CAAC,EAAK,IAAI,EAAE,EACrE,CAAC,EAAa,iBAAiB,CAAC,IAGtC,MAAO,EAAc,IAAI,CAAC,EAAa,cAAc,CAAC,EAAI,EAAM,UAAU,QACvE,EAAc,IAAI,CAAC,EAAa,cAAc,CAAC,EAAI,GAC1D,CACF,GAEI,CAAA,EAAc,MAAM,EAAI,CAAC,EAAM,MAAM,AAAN,GAAQ,EAAM,IAAI,CAAC,EAAa,gBAAgB,CAAC,IAEhF,CAAA,EAAM,MAAM,CAAG,GAAK,CAAA,GACtB,CAAA,EAAQ,CAAC,EAAa,cAAc,CAAC,EAAqB,EAAM,cAAe,GAAO,AAAA,CAE1F,CAmBA,MAAO,CAAE,MAjBK,CACZ,EAAa,cAAc,CAAC,EAAqB,EAAM,cAAe,CACpE,EAAa,aAAa,CAAC,GAC3B,CAAK,CAAC,EAAE,CACR,EAAW,MAAM,CACb,EACE,EAAa,uBAAuB,CAClC,EAAE,CACF,AAAsB,IAAtB,EAAW,MAAM,CAAS,CAAU,CAAC,EAAE,CAAG,EAAa,eAAe,CAAC,IAEzE,AAAsB,IAAtB,EAAW,MAAM,CACjB,CAAU,CAAC,EAAE,CACb,EAAa,eAAe,CAAC,GAC/B,EAAa,UAAU,CAAC,aAC5B,EAAa,cAAc,CAAC,CAAA,CAAQ,CAAA,GAAY,EAAO,UAAU,AAAV,GACxD,EACF,CACe,SAAU,GAAI,cAAe,CAAA,CAAK,CACpD,EAjjByB,EAAM,CAAE,GAAG,CAAI,CAAE,GAAG,CAAM,AAAC,GAElD,IAAM,EAAU,EAAW,EAAK,IAAI,EAClC,EAAU,EAAa,OAAO,CAAC,GAAW,GAC1C,EAAU,CACR,SAAU,CAAC,CAAC,CAAC,EAAE,EAAQ,CAAC,CAAC,CACzB,eAAgB,EAAE,CAClB,aAAc,EAAE,CAChB,MAAO,EAAE,CACT,SAAU,EAAE,CACZ,QAAA,EACA,WAAY,EAAK,IAAI,CAAC,UAAU,CAChC,SAAU,KACZ,EAGF,GAFI,CAAA,AAAY,WAAZ,GAAwB,AAAY,UAAZ,CAAY,GAAS,CAAA,EAAK,WAAW,CAAG,CAAA,CAApE,EAEI,EAAK,QAAQ,EAAI,EAAO,UAAU,CAAE,CACtC,GAAI,AAAY,SAAZ,EAAoB,CACtB,EAAqB,EAAM,eAC3B,EAAqB,EAAM,mBAC3B,IAAM,EAAQ,EAAmB,EAAM,CAAE,GAAG,CAAI,CAAE,SAAU,CAAA,CAAM,GAelE,OAdA,EAAQ,QAAQ,CAAG,GACnB,EAAQ,KAAK,CAAC,IAAI,CAChB,EAAa,cAAc,CAAC,EAAa,UAAU,CAAC,qBAAsB,CACxE,EAAa,UAAU,CAAC,iBACxB,EAAa,gBAAgB,CAAC,CAC5B,EAAa,YAAY,CACvB,MACA,EAAa,UAAU,CAAC,YACxB,EAAE,CACF,EAAa,cAAc,CAAC,CAAC,EAAa,eAAe,CAAC,EAAiB,EAAM,IAAQ,GAE5F,EACF,GAEI,CACT,CACA,EAAQ,QAAQ,CAAC,IAAI,CAAC,IACtB,EAAQ,cAAc,CAAC,IAAI,CACzB,EAAa,cAAc,CAAC,EAAqB,EAAM,mBAAoB,EAAE,EAEjF,CAOA,OANA,AA8LF,SAA+B,CAAI,CAAE,CAAO,CAAE,CAAI,MAK5C,EAJJ,IAAM,EAAU,EAAW,EAAK,IAAI,EAClC,EAAQ,EAAY,GAAG,CAAC,GACxB,EAAc,EAAK,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAG,EAI5C,AAHe,EAAoB,GAGxB,OAAO,CAAC,AAAA,IACjB,IAAM,EAAO,EAAU,IAAI,CAEvB,EAAQ,EAAK,KAAK,CACpB,EAAM,EAAa,mBAAmB,CAAC,EAAK,IAAI,EAC5C,CAAC,EAAE,EAAK,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,EAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CACpD,EAAK,IAAI,CAAC,IAAI,CAClB,EACE,EAAa,mBAAmB,CAAC,EAAK,IAAI,GAAK,EAAmB,GAAG,CAAC,EAAK,IAAI,CAAC,SAAS,CAAC,IAAI,EAQlG,GANI,CAAA,EAAa,mBAAmB,CAAC,EAAK,IAAI,GAAK,GAAsB,EAAgB,GAAG,CAAC,EAAA,GAC3F,CAAC,EAAa,wBAAwB,CAAC,IAEvC,CAAA,EAAK,KAAK,CAAG,EAAQ,EAAa,sBAAsB,CAAC,GAAS,EAAa,kBAAkB,GAJnG,EAQE,EAAa,wBAAwB,CAAC,IACrC,CAAA,GACC,EAAgB,GAAG,CAAC,IACpB,CAAE,CAAA,EAAa,eAAe,CAAC,EAAM,UAAU,GAAK,EAAa,gBAAgB,CAAC,EAAM,UAAU,GAAK,EAAa,gBAAgB,CAAC,EAAM,UAAU,CAAA,CAAA,EACvJ,CACA,GACE,AAAQ,QAAR,GACA,EAAI,UAAU,CAAC,SACf,EAAI,UAAU,CAAC,UACf,EAAI,UAAU,CAAC,MAEf,OACG,GAAI,EAAgB,GAAG,CAAC,GACvB,EAAK,UAAU,EAAI,AAAQ,gBAAR,GAAyB,GAAS,EAAM,UAAU,EACvE,CAAA,EAAM,UAAU,CAAG,EAAa,iBAAiB,CAAC,KAAM,EAAM,UAAU,CAAE,EAAa,aAAa,CAAC,KADvG,EAGY,cAAR,GAAqB,CAAA,EAAK,WAAW,CAAG,CAAA,CAA5C,EACA,EAAW,MACN,CACL,IAAI,EAAW,CAAA,EACf,GAAI,EAAkB,GAAG,CAAC,GAAM,CAC9B,EAAQ,QAAQ,CAAC,IAAI,CAAC,IACtB,IAAM,EAAK,EAAa,cAAc,CAAC,EAAqB,EAAW,gBAAiB,CACtF,EAAa,aAAa,CAAC,GAC3B,EAAM,UAAU,CAChB,EAAa,cAAc,CAAC,CAAA,GAC7B,EACD,EAAQ,cAAc,CAAC,IAAI,CAAC,GAC5B,MACF,CACA,GAAI,AAAQ,UAAR,EAAiB,CACnB,GACE,EAAa,wBAAwB,CAAC,IACtC,EAAa,kBAAkB,CAAC,EAAM,UAAU,GAChD,CAAC,EAAM,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,AAAA,GAAK,EAAa,eAAe,CAAC,IACpE,CACA,IAAM,EAAQ,EAAM,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,EAAG,IAChD,EAAa,gBAAgB,CAC3B,IACA,EAAa,aAAa,CACxB,AAAC,CAAA,EAAI,IAAM,EAAA,EAAO,CAAA,EAAa,YAAY,CAAC,EAAE,GAAG,EAAI,EAAE,GAAG,CAAC,IAAI,CAAG,EAAE,GAAG,CAAC,KAAI,AAAJ,EAAS,KAEnF,EAAiB,EAAM,EAAE,KAAK,CAAE,CAAA,EAAM,CAAA,KAGtC,EAAM,CAAK,CAAC,EAAE,CAClB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,MAAM,CAAE,IAChC,EAAM,EAAa,gBAAgB,CAAC,IAAK,EAAK,CAAK,CAAC,EAAE,CAExD,CAAA,EAAM,UAAU,CAAG,CACrB,MACE,EAAM,UAAU,CAAG,EAAa,cAAc,CAAC,EAAqB,EAAM,YAAa,CACrF,EAAM,UAAU,CACjB,EAEH,EAAW,CAAA,CACb,CACA,GAAI,AAAQ,cAAR,EAAqB,CACvB,GACE,EAAa,kBAAkB,CAAC,EAAM,UAAU,GAChD,CAAC,EAAM,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,AAAA,GAAK,EAAa,eAAe,CAAC,IACpE,CACA,IAAM,EAAS,EAAE,CACf,EAAS,CAAC,EAAa,eAAe,CAAC,CAAE,IAAK,EAAG,GAAG,CACtD,EAAyB,EAAM,EAAM,UAAU,CAAE,EAAQ,GACpD,EAAO,MAAM,CACT,AAAkB,IAAlB,EAAO,MAAM,EAAW,CAAM,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,EAAK,CAAM,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAErE,EAAM,UAAU,CAAG,EAAa,eAAe,CAAC,EAAQ,GAD7D,EAAM,UAAU,CAAG,CAAM,CAAC,EAAE,CAFV,EAAM,UAAU,CAAG,EAAa,aAAa,CAAC,CAAM,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAIvF,MACE,EAAM,UAAU,CAAG,EAAa,cAAc,CAAC,EAAqB,EAAM,gBAAiB,CACzF,EAAM,UAAU,CACjB,EAEH,EAAM,QACN,EAAW,CAAA,CACb,CACI,GAAU,CAAA,EAAM,UAAU,CAAG,EAAiB,EAAM,EAAM,UAAU,CAAE,CAAA,EAA1E,EAEI,CAAC,GAAY,EAAa,SAAS,CAAC,EAAM,UAAU,GACtD,EAAM,EAAY,EAAK,GACvB,EAAiB,EAAQ,QAAQ,CAAE,CAAC,CAAC,EAAE,EAAI,EAAE,CAAC,EAC9C,EAAQ,QAAQ,CAAC,IAAI,CAAC,KACtB,EAAQ,cAAc,CAAC,IAAI,CAAC,EAAM,UAAU,GACvC,AA3Rf,SAAmB,CAAS,CAAE,CAAO,CAAE,CAAI,CAAE,CAAK,CAAE,CAAK,MAEnD,EACC,CAAA,EAAQ,EAAK,KAAK,CAAC,IAAA,GAAS,CAAK,CAAC,EAAE,EAAI,EAAmB,GAAG,CAAC,CAAK,CAAC,EAAE,IAC1E,EAAO,CAAK,CAAC,EAAE,CACf,CAAK,CAAC,EAAE,EAGV,EAAO,EAAY,EAAM,GACzB,IAAM,EAAO,EAAa,cAAc,CAAC,EAAqB,EAAW,gBAAiB,CACxF,EAAa,aAAa,CAAC,GAC3B,EACA,EAAa,cAAc,CAAC,CAAA,GAC7B,EACD,GAAI,EAAQ,QAAQ,CAAC,EAAQ,QAAQ,CAAC,MAAM,CAAG,EAAE,CAAC,MAAM,CACtD,EAAQ,QAAQ,CAAC,IAAI,CAAC,IACtB,EAAQ,cAAc,CAAC,IAAI,CAAC,OACvB,CACL,IAAM,EAAO,EAAQ,cAAc,CAAC,MAAM,CAAG,CAC7C,CAAA,EAAQ,cAAc,CAAC,EAAK,CAAG,EAAa,gBAAgB,CAAC,IAAK,EAAQ,cAAc,CAAC,EAAK,CAAE,EAClG,CACF,EAsQyB,EAAW,EAAS,EAAK,EAAM,UAAU,CAAE,EAC9D,CACF,KAAO,CACL,GAAI,AAAQ,gBAAR,EAAuB,OACvB,EAAa,wBAAwB,CAAC,IAAQ,CAAA,EAAQ,EAAM,UAAU,AAAV,EAChE,EAAM,EAAY,EAAK,GACvB,IAAM,EAAY,EAAkB,GAAG,CAAC,GACxC,GAAI,GAAa,GAAS,AAAgB,KAAhB,EAAM,KAAK,EAAW,CAAC,EAAM,KAAK,GAC5D,EAAiB,EAAQ,QAAQ,CAAE,CAAC,CAAC,EAAE,EAAI,CAAC,EACxC,CAAC,GAFyD,OAG9D,IAAI,EAAO,EAAY,GAAK,EAAM,KAAK,CACnC,CAAA,AAAQ,UAAR,GAAmB,AAAQ,UAAR,CAAQ,IAC7B,EAAO,EAAe,GACV,UAAR,GACF,CAAA,EAAO,EAAK,OAAO,CAAC,MAAO,KAAK,OAAO,CAAC,MAAO,IADjD,GAIF,EAAiB,EAAQ,QAAQ,CAAE,CAAC,EAAE,EAAE,EAAW,EAAM,CAAA,GAAM,CAAC,CAAC,CACnE,CACF,GACI,CAAC,GAAe,GAClB,EAAK,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAE5B,EAjUwB,EAAM,EAAS,CAAE,GAAG,CAAM,CAAE,GAAG,CAAI,AAAC,GAC1D,EAAiB,EAAQ,QAAQ,CAAE,KAC9B,IACH,AAiWJ,SAA6B,CAAI,CAAE,CAAO,CAAE,CAAE,WAAA,CAAU,CAAE,EACxD,IAAM,EAAc,EAAK,WAAW,CAC9B,EAAmB,EAAe,EAAK,GAAG,CAAC,aAC3C,EAAQ,EAAY,GACxB,EAAU,GAAc,EAC1B,EAAiB,OAAO,CAAC,AAAA,IACvB,GAAI,EAAa,YAAY,CAAC,EAAK,IAAI,GAAK,AAA0B,SAA1B,EAAW,EAAK,IAAI,EAAc,CAC5E,IAAM,EAAQ,EAAc,EAAM,CAAE,YAAA,EAAa,WAAY,CAAA,CAAM,GACnE,EAAqB,EAAM,eAC3B,EAAqB,EAAM,mBAC3B,EAAQ,QAAQ,CAAC,IAAI,CAAC,IACtB,EAAQ,cAAc,CAAC,IAAI,CACzB,EAAa,cAAc,CAAC,EAAa,UAAU,CAAC,qBAAsB,CACxE,EAAa,UAAU,CAAC,iBACxB,EAAa,gBAAgB,CAAC,CAC5B,EAAa,YAAY,CACvB,MACA,EAAa,UAAU,CAAC,YACxB,EAAE,CACF,EAAa,cAAc,CAAC,CAAC,EAAa,eAAe,CAAC,EAAiB,EAAM,IAAQ,GAE5F,EACF,GAEH,MACF,CACA,IAAM,EAAQ,EAAc,EAAM,CAAE,YAAA,CAAY,GAC3C,IACL,EAAiB,EAAQ,QAAQ,CAAE,EAAM,QAAQ,EACjD,EAAQ,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,EAAQ,cAAc,CAAE,EAAM,cAAc,EAAI,EAAE,EAChF,EAAM,KAAK,CAAC,MAAM,GACf,GAAgB,EAAM,aAAa,EACtC,CAAA,EAAM,KAAK,CAAC,EAAE,CAAG,EAAiB,EAAM,EAAM,KAAK,CAAC,EAAE,CAAA,EAGpD,GAAW,CAAC,EAAM,aAAa,EACjC,EAAiB,EAAQ,QAAQ,CAAE,YACnC,EAAQ,QAAQ,CAAC,IAAI,CAAC,IACtB,EAAQ,cAAc,CAAC,IAAI,CAAC,EAAM,KAAK,CAAC,EAAE,EAC1C,EAAiB,EAAQ,QAAQ,CAAE,cAEnC,EAAQ,QAAQ,CAAC,IAAI,CAAC,IACtB,EAAQ,cAAc,CAAC,IAAI,CAAC,EAAM,KAAK,CAAC,EAAE,IAGhD,EACF,EA/YwB,EAAM,EAAS,CAAE,GAAG,CAAM,CAAE,GAAG,CAAI,AAAC,GACxD,EAAiB,EAAQ,QAAQ,CAAE,CAAC,EAAE,EAAE,EAAQ,CAAC,CAAC,GAE7C,CACT,EAg4C8B,EAAM,IA73B9B,EAAU,EAAW,AAg4BC,EAh4BI,IAAI,EAWlC,CAVE,EAAU,CACR,GAAI,AA83BkB,EA93Bb,KAAK,CAAC,qBAAqB,CAAC,OACrC,aAAc,EAAE,CAChB,MAAO,EAAE,CACT,SAAU,EAAE,CACZ,UAAW,EAAE,CACb,QAAA,EACA,SAAU,WACZ,GAEM,YAAY,CAAC,IAAI,CACvB,EAAa,kBAAkB,CAC7B,EAAQ,EAAE,CACV,EAAa,cAAc,CACzB,EAi3BoB,EA/2BlB,gBACA,EA82BkB,EA92BM,aAAa,UAAU,EAEjD,CAAC,EAAa,aAAa,CAAC,GAAS,IAK3C,AAMF,SAA6B,CAAI,CAAE,CAAO,MACpC,EAAU,EACd,IAAI,EAAa,EAAK,GAAG,CAAC,kBAAkB,GAAG,CAAC,cAC1C,EAAO,EAAQ,EAAE,CACrB,EAAc,EAAK,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAG,EAC1C,EAAS,EAAU,GAGjB,EAAW,IAAI,CAAC,AAAA,GAAa,EAAa,oBAAoB,CAAC,EAAU,IAAI,KAC/E,CAAC,EAAY,EAAW,CAAG,AA0O/B,SAAwB,CAAI,CAAE,CAAU,CAAE,CAAE,KAAA,CAAI,CAAE,YAAA,CAAW,CAAE,iBAAA,CAAgB,CAAE,EAE/E,IAAM,EAAqB,EAAE,CACvB,EAAa,EAAE,CACjB,EAAgB,EAAE,CAClB,EAAgB,CAAA,EAChB,EAAc,CAAA,EAClB,EAAW,OAAO,CAAC,AAAA,IACjB,IAAM,EAAO,EAAU,IAAI,CACrB,EACJ,CAAC,EAAa,oBAAoB,CAAC,IAClC,CAAA,EAAa,mBAAmB,CAAC,EAAK,IAAI,EACvC,CAAC,EAAE,EAAK,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,EAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CACpD,EAAK,IAAI,CAAC,IAAI,AAAJ,EAChB,GAAI,EAAa,oBAAoB,CAAC,GACpC,EAAc,CAAA,EACV,EAAc,MAAM,GACtB,EAAW,IAAI,CAAC,EAAa,gBAAgB,CAAC,IAC9C,EAAgB,EAAE,EAEpB,EAAW,IAAI,CACb,EAAU,EAAU,GAAG,CAAC,YAAa,CACnC,YAAa,CAAA,CACf,IAAO,CAAA,EAAgB,CAAA,CAAA,EACnB,CAAA,EAAa,gBAAgB,CAAC,EAAK,QAAQ,GAC1C,EAAK,QAAQ,CAAC,SAAS,CAAC,MAAM,EAC9B,EAAa,gBAAgB,CAAC,EAAK,QAAQ,CAAC,MAAM,GAClD,EAAa,kBAAkB,CAAC,EAAK,QAAQ,CAAC,MAAM,EAEnD,EAAa,uBAAuB,CAAC,EAAE,CAAE,EAAK,QAAQ,EADtD,EAAK,QAAQ,CAAC,MAAM,CAEtB,EAAK,QAAQ,OAEd,GACL,AAAC,CAAA,GACE,EAAa,wBAAwB,CAAC,EAAK,KAAK,GAC/C,EAAU,EAAU,GAAG,CAAC,SAAS,GAAG,CAAC,cAAe,CAAE,YAAa,CAAA,CAAK,EAAA,GAC5E,EAAgB,EAAK,CAAE,gBAAiB,CAAA,CAAK,GAC7C,CACA,IAAM,EAAc,EAAa,wBAAwB,CAAC,EAAK,KAAK,EAGpE,GADE,GAAe,EAAU,EAAU,GAAG,CAAC,SAAS,GAAG,CAAC,cAAe,CAAE,YAAa,CAAA,CAAK,GAC5E,CACX,IAAM,EAAK,EAAqB,EAAK,IAAI,EACrC,EACF,GACC,CAAA,EAAa,mBAAmB,CAAC,EAAK,KAAK,CAAC,UAAU,GACrD,EAAa,uBAAuB,CAAC,EAAK,KAAK,CAAC,UAAU,CAAA,EACxD,EAAmB,EAAU,GAAG,CAAC,SAAS,GAAG,CAAC,cAAe,CAAA,GAC7D,EAAa,uBAAuB,CAAC,EAAE,CAAE,EAAK,KAAK,CAAC,UAAU,EACpE,EAAc,IAAI,CAChB,EAAa,YAAY,CACvB,MACA,EACA,EAAE,CACF,EAAa,cAAc,CAAC,CAAC,EAAa,eAAe,CAAC,EAAK,IAAI,EAAE,EACrE,CAAC,EAAa,iBAAiB,CAAC,IAGtC,MACE,EAAc,IAAI,CAChB,EAAa,cAAc,CACzB,EAAa,aAAa,CAAC,GAC3B,EAAc,EAAK,KAAK,CAAC,UAAU,CAAG,EAAK,KAAK,EAAI,EAAa,cAAc,CAAC,CAAA,IAIxF,MAAO,EAAmB,IAAI,CAAC,EACjC,GAEI,EAAc,MAAM,EACtB,EAAW,IAAI,CAAC,EAAa,gBAAgB,CAAC,IAGhD,IAAM,EACJ,AAAsB,IAAtB,EAAW,MAAM,EAAW,EAExB,EAAa,cAAc,CAAC,EAAqB,EAAM,cAAe,GADtE,CAAU,CAAC,EAAE,CAGnB,MAAO,CACL,EACA,EAAa,mBAAmB,CAC9B,EAAa,cAAc,CACzB,EAAqB,EAAM,SAAU,EAAkB,EAAM,aAAa,UAAU,EACpF,CAAC,EAAM,EAAO,EAAa,cAAc,CAAC,GAAa,GAG5D,AACH,EAjU8C,EAAM,EAAY,CAC1D,KAAA,EACA,YAAA,EACA,iBAAkB,EAAO,gBAAgB,AAC3C,GACA,EAAK,GAAG,CAAC,kBAAkB,GAAG,CAC5B,aACA,EAAW,GAAG,CAAC,AAAA,GAAK,EAAE,IAAI,IAI9B,EACG,GAAG,CAAC,kBACJ,GAAG,CAAC,cACJ,OAAO,CAAC,AAAA,IACP,IAAM,EAAO,EAAU,IAAI,CAEvB,EAAQ,EAAK,KAAK,CACpB,EAAM,EAAa,mBAAmB,CAAC,EAAK,IAAI,EAC5C,CAAC,EAAE,EAAK,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,EAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CACpD,EAAK,IAAI,CAAC,IAAI,CAClB,EAAoB,EAAa,mBAAmB,CAAC,EAAK,IAAI,GAAK,AAA6B,QAA7B,EAAK,IAAI,CAAC,SAAS,CAAC,IAAI,CAQ7F,GANE,EAAa,mBAAmB,CAAC,EAAK,IAAI,GAC1C,GACA,CAAC,EAAa,wBAAwB,CAAC,IAEvC,CAAA,EAAK,KAAK,CAAG,EAAQ,EAAa,sBAAsB,CAAC,GAAS,EAAa,kBAAkB,GALnG,EAOI,EAAa,wBAAwB,CAAC,IACxC,GAAI,AAAQ,QAAR,EAAe,CAEjB,KACE,EAAa,qBAAqB,CAAC,EAAM,UAAU,GACnD,EAAa,gBAAgB,CAAC,EAAM,UAAU,GAE9C,EAAM,UAAU,CAAG,EAAM,UAAU,CAAC,UAAU,CAEhD,GAAI,EAAa,MAAM,CAAC,EAAM,UAAU,EAAG,CACzC,IAAM,EAAgB,EAAK,KAAK,CAAC,qBAAqB,CAAC,SACvD,EAAQ,KAAK,CAAC,OAAO,CACnB,EAAa,mBAAmB,CAAC,QAAS,CACxC,EAAa,kBAAkB,CAAC,EAAe,EAAM,UAAU,EAChE,EACD,EAAa,mBAAmB,CAC9B,EAAa,qBAAqB,CAChC,EAAa,gBAAgB,CAC3B,MACA,EAAa,eAAe,CAAC,SAAU,GACvC,EAAa,aAAa,CAAC,aAE7B,EAAa,cAAc,CACzB,EACE,EACA,MACA,EAAkB,EAAM,aAAa,UAAU,EAEjD,CAAC,EAAe,EAAK,EAEvB,EAAa,oBAAoB,CAAC,IAAK,EAAM,UAAU,CAAE,KAIjE,MAAO,GAAI,EAAa,UAAU,CAAC,EAAM,UAAU,EACjD,EAAQ,KAAK,CAAC,OAAO,CACnB,EAAa,mBAAmB,CAC9B,EAAa,cAAc,CACzB,EACE,EACA,MACA,EAAkB,EAAM,aAAa,UAAU,EAEjD,CAAC,EAAM,UAAU,CAAE,EAAK,SAIzB,GAAI,EAAa,gBAAgB,CAAC,EAAM,UAAU,EAAG,CAC1D,IAAM,EAAgB,EAAK,KAAK,CAAC,qBAAqB,CAAC,SACvD,EAAQ,KAAK,CAAC,OAAO,CACnB,EAAa,mBAAmB,CAAC,QAAS,CACxC,EAAa,kBAAkB,CAAC,EAAe,EAAM,UAAU,EAChE,EACD,EAAa,mBAAmB,CAC9B,EAAa,iBAAiB,CAC5B,KACA,EAAa,gBAAgB,CAC3B,MACA,EAAa,eAAe,CAAC,SAAU,GACvC,EAAa,aAAa,CAAC,aAE7B,EAAa,cAAc,CACzB,EACE,EACA,MACA,EAAkB,EAAM,aAAa,UAAU,EAEjD,CAAC,EAAe,EAAK,IAK/B,CACF,MAAW,EAAI,UAAU,CAAC,SAExB,EAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAG,aACtB,EAAQ,KAAK,CAAC,OAAO,CACnB,EAAa,mBAAmB,CAC9B,EAAa,cAAc,CACzB,EAAqB,EAAM,MAAO,EAAkB,EAAM,aAAa,UAAU,EACjF,CACE,EAAK,IAAI,CAAC,IAAI,CACd,EACA,EAAa,uBAAuB,CAClC,EAAE,CACF,EAAa,oBAAoB,CAAC,EAAM,UAAU,EAC9C,EAAa,cAAc,CAAC,CAAA,GAC5B,EAAM,UAAU,EAEvB,KAIE,AAAQ,aAAR,EACT,EAAW,EAEX,EAAO,aAAa,EACpB,EAAU,EAAU,GAAG,CAAC,SAAS,GAAG,CAAC,cAAe,CAClD,YAAa,CAAA,CACf,GAEA,EAAQ,QAAQ,CAAC,IAAI,CAAC,CAAE,KAAA,EAAM,IAAA,EAAK,MAAO,EAAM,UAAU,AAAC,GAE3D,EAAQ,KAAK,CAAC,IAAI,CAChB,EAAa,mBAAmB,CAAC,EAAQ,EAAW,EAAM,EAAK,EAAM,UAAU,SAInF,EAAQ,KAAK,CAAC,IAAI,CAAC,EAAa,mBAAmB,CAAC,EAAQ,EAAW,EAAM,EAAK,IAEtF,GACE,GAAY,EAAQ,KAAK,CAAC,IAAI,CAAC,GAC/B,CAAC,GAAe,GAClB,EAAK,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAE5B,EAwsB4B,EAv2BA,GAC1B,AAwKF,SAA2B,CAAI,CAAE,CAAO,EACtC,IAAM,EAAmB,EAAe,EAAK,GAAG,CAAC,aAC/C,EAAQ,EAAY,GACpB,EAAa,EAAiB,GAAG,CAAC,GAAe,MAAM,CAAC,CAAC,EAAM,KAC7D,GAAI,CAAC,EAAO,OAAO,EACnB,IAAM,EAAI,EAAK,MAAM,CAIrB,OAHI,EAAM,IAAI,EAAI,GAAK,CAAI,CAAC,EAAI,EAAE,CAAC,IAAI,CACrC,CAAI,CAAC,EAAI,EAAE,CAAC,QAAQ,EAAI,EAAM,QAAQ,CACjC,EAAK,IAAI,CAAC,GACV,CACT,EAAG,EAAE,EAED,EAAU,EAAE,CAClB,EAAW,OAAO,CAAC,CAAC,EAAO,KACzB,GAAK,GACL,GAAI,EAAM,OAAO,EAAI,AAAmB,cAAnB,EAAM,QAAQ,CACjC,MAAM,AAAI,MAAM,CAAC,CAAC,EAAE,EAAM,OAAO,CAAC,uBAAuB,EAAE,EAAW,EAAK,IAAI,EAAE;kFACL,CAAC,EAE/E,GAAI,EAAM,EAAE,CAAE,CACZ,IAAI,EAAa,EACf,EACA,aACA,EAAkB,EAAM,aAAa,UAAU,EAE7C,EAAS,EAAM,EAAE,CACrB,GAAI,EAAM,IAAI,CAAE,CACd,IAAI,EAAiB,EACnB,EACA,iBACA,EAAkB,EAAM,aAAa,UAAU,EAE7C,EACF,EAAQ,YAAY,CAAC,IAAI,CACvB,EAAa,kBAAkB,CAC7B,EAAM,EAAE,CACR,EAAa,cAAc,CAAC,EAAgB,CAC1C,EAAa,eAAe,CAAC,CAAC,EAAa,eAAe,CAAC,CAAE,IAAK,EAAM,QAAQ,AAAC,GAAG,CAAE,EAAE,EACzF,IAIL,EAAS,EAAa,cAAc,CAAC,EAAgB,CACnD,EAAa,eAAe,CAAC,CAAC,EAAa,eAAe,CAAC,CAAE,IAAK,EAAM,QAAQ,AAAC,GAAG,CAAE,EAAE,EACzF,CACL,CACA,EAAQ,IAAI,CAAC,EAAa,mBAAmB,CAAC,EAAa,cAAc,CAAC,EAAY,CAAC,EAAQ,EAAE,CAAE,EAAO,IAC1G,EAAQ,YAAY,CAAC,IAAI,IAAI,EAAM,YAAY,EAC/C,EAAQ,KAAK,CAAC,IAAI,IAAI,EAAM,KAAK,EACjC,EAAQ,QAAQ,CAAC,IAAI,IAAI,EAAM,QAAQ,CACzC,MAAO,GAAI,EAAM,KAAK,CAAC,MAAM,CAAE,CAC7B,IAAI,EAAS,EACX,EACA,SACA,EAAkB,EAAM,aAAa,UAAU,EAE7C,EACF,EAAQ,KAAK,CAAC,IAAI,CAChB,EAAa,mBAAmB,CAC9B,EAAa,cAAc,CAAC,EAAQ,CAClC,EAAQ,EAAE,CACV,EAAM,KAAK,CAAC,EAAE,CACd,AAcd,SAAS,EAAU,CAAQ,CAAE,CAAK,EAChC,OAAO,CAAQ,CAAC,EAAQ,EAAE,EAAK,CAAA,CAAQ,CAAC,EAAQ,EAAE,CAAC,EAAE,EAAI,EAAU,EAAU,EAAQ,EAAA,CACvF,EAhBwB,EAAY,IAAU,EAAa,WAAW,GACzD,IAIL,EAAQ,KAAK,CAAC,IAAI,CAChB,EAAa,mBAAmB,CAAC,EAAa,cAAc,CAAC,EAAQ,CAAC,EAAQ,EAAE,CAAE,EAAM,KAAK,CAAC,EAAE,CAAC,GAGvG,EACF,GACA,EAAQ,KAAK,CAAC,OAAO,IAAI,EAC3B,EAonB4B,EAt2BF,GAEjB,EAq2BT,EAnH4B,EAAQ,EAAM,GACjC,GAAI,EAAa,aAAa,CAAC,GAAO,CAC3C,IAAI,EAAU,CAAE,SAAU,GAAI,aAAc,EAAE,CAAE,MAAO,EAAE,CAAE,SAAU,EAAE,AAAC,EAGxE,OADA,AA9DJ,SAAmC,CAAQ,CAAE,CAAO,CAAE,CAAM,EAC1D,IACE,EAAa,AADU,EAAe,GACR,MAAM,CAAC,CAAC,EAAM,KAC1C,GAAI,EAAa,SAAS,CAAC,EAAK,IAAI,EAAG,CACrC,IAAM,EAAI,EAAa,MAAM,CAAC,EAAe,EAAK,IAAI,CAAC,KAAK,CAAC,GAAG,EAC5D,CAAA,EAAE,MAAM,EAAE,EAAK,IAAI,CAAC,EAAa,aAAa,CAAC,GACrD,KAAO,CACL,IAAM,EAAQ,EAAc,EAAM,CAAE,SAAU,CAAA,EAAM,cAAe,CAAA,EAAM,YAAa,CAAA,CAAK,GAC3F,EAAK,IAAI,CAAC,EAAkB,EAAQ,EAAM,GAAO,EAAM,EAAO,CAAA,GAChE,CACA,OAAO,CACT,EAAG,EAAE,EACP,EAAQ,KAAK,CAAC,IAAI,CAAC,AAAsB,IAAtB,EAAW,MAAM,CAAS,CAAU,CAAC,EAAE,CAAG,EAAa,eAAe,CAAC,GAC5F,EAiD8B,EAAK,GAAG,CAAC,YAAa,EAAS,GAClD,CACT,CAAO,GAAI,EAAa,SAAS,CAAC,IAAU,AAA6C,CAAA,IAA7C,CAAA,EAAc,EAAoB,EAAA,EAAkB,CAC9F,IAAM,EACJ,AAAgB,KAAA,IAAhB,EACI,EAAK,WAAW,CACd,EAAY,QAAQ,GACpB,EAAW,EAAY,QAAQ,IACjC,EAAe,EAAK,KAAK,CAAC,GAAG,EACnC,GAAI,CAAC,EAAK,MAAM,CAAE,OAAO,KACzB,IAAM,EAAU,CACd,SAAU,AAAoB,QAApB,EAAO,QAAQ,CAAa,EAAO,EAAgB,GAC7D,aAAc,EAAE,CAChB,MAAO,EAAE,CACT,SAAU,EAAE,CACZ,UAAW,EAAE,CACb,KAAM,CAAA,CACR,EAGA,OAFK,EAAK,MAAM,EAAI,AAAoB,QAApB,EAAO,QAAQ,EACjC,CAAA,EAAQ,EAAE,CAAG,EAAK,KAAK,CAAC,qBAAqB,CAAC,MADhD,EAEO,CACT,CAAO,GAAI,EAAa,wBAAwB,CAAC,GAAO,CACtD,GAAI,EAAa,oBAAoB,CAAC,EAAK,UAAU,EAAG,OAAO,KAC/D,GACE,CAAC,EAAU,EAAK,GAAG,CAAC,cAAe,CACjC,YAAa,CAAA,EACb,UAAW,CAAC,CAAC,EAAK,cAAc,CAChC,OAAQ,CAAC,EAAK,cAAc,AAC9B,GAEA,MAAO,CAAE,MAAO,CAAC,EAAK,UAAU,CAAC,CAAE,SAAU,EAAG,EAElD,IAAM,EACJ,EAAO,gBAAgB,EACvB,AAAoB,QAApB,EAAO,QAAQ,EACd,CAAA,EAAa,mBAAmB,CAAC,EAAK,UAAU,GAAK,EAAa,uBAAuB,CAAC,EAAK,UAAU,CAAA,EACtG,EAAmB,EAAK,GAAG,CAAC,cAAe,EAAK,cAAc,EAC9D,CAAC,EAAK,cAAc,EACnB,CAAA,AAAoB,QAApB,EAAO,QAAQ,EAAc,EAAK,aAAY,AAAZ,GACnC,EAAa,gBAAgB,CAAC,EAAK,UAAU,GAC7C,CAAC,EAAa,kBAAkB,CAAC,EAAK,UAAU,CAAC,MAAM,GACvD,AAAqC,IAArC,EAAK,UAAU,CAAC,SAAS,CAAC,MAAM,CAChC,EAAK,UAAU,CAAC,MAAM,CACtB,EAAa,uBAAuB,CAAC,EAAE,CAAE,EAAK,UAAU,EAC9D,MAAO,CACL,MACE,EAAK,MAAM,CAAG,EACV,CACE,EAAa,cAAc,CACzB,EAAa,uBAAuB,CAClC,EAAE,CACF,EAAa,cAAc,CAAC,CAAC,CAAI,CAAC,EAAE,CAAE,EAAa,eAAe,CAAC,CAAI,CAAC,EAAE,EAAE,GAE9E,EAAE,EAEL,CACD,CAAC,EAAK,CACZ,SAAU,GACV,QAAS,CAAA,CACX,CACF,CAAO,GAAI,EAAa,gBAAgB,CAAC,UACvC,AACG,EAAU,EAAK,GAAG,CAAC,cAAe,CACjC,YAAa,CAAA,EACb,OAAQ,CAAC,EAAK,cAAc,AAC9B,GAIK,CACL,MAAO,CAFI,EAAa,uBAAuB,CAAC,EAAE,CAAE,EAAK,UAAU,EAEtD,CACb,SAAU,GACV,QAAS,CAAA,CACX,EANS,CAAE,MAAO,CAAC,EAAK,UAAU,CAAC,CAAE,SAAU,EAAG,CAQtD,EAtHI,EACA,EAAa,aAAa,CAAC,EAAK,IAAI,EAChC,CAAC,EACD,CACE,SAAU,CAAA,EACV,YAAa,CAAA,CACf,GAGA,EAAW,EAAkB,EAAQ,EAAM,GAEjD,EAAK,WAAW,CAAC,EAAQ,EAAS,EAAM,EAAQ,CAAA,IAClD,CA4GA,SAAS,EAAkB,CAAM,CAAE,CAAI,CAAE,CAAM,SAC7C,AAAI,EAAQ,OAAO,EAAI,AAAoB,QAApB,EAAO,QAAQ,EAAe,AAAoB,QAApB,EAAO,QAAQ,CAC3D,EAGL,AAAoB,QAApB,EAAO,QAAQ,EAAc,AAAoB,QAApB,EAAO,QAAQ,CACvC,EAGF,CACT,CA2BA,IAAI,GAAc,AAAA,IAWhB,GAVI,EAAK,KAAK,CAAC,IAAI,CAAC,MAAM,EACxB,EAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CACjB,EAAa,mBAAmB,CAC9B,EAAa,cAAc,CACzB,EAAqB,EAAM,iBAAkB,EAAkB,EAAM,OAAO,UAAU,EACtF,CAAC,EAAa,eAAe,CAAC,MAAM,IAAI,CAAC,EAAK,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,AAAA,GAAK,EAAa,aAAa,CAAC,KAAK,IAK9G,EAAK,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,OAAQ,CACrC,IAAI,EAAe,EAAK,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,AAAA,GAAQ,AAAkB,QAAlB,EAAK,QAAQ,EACrE,EAAe,EAAK,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,AAAA,GAAQ,AAAkB,QAAlB,EAAK,QAAQ,CACzE,CAAA,EAAa,MAAM,CAAG,GAAK,AAxrD/B,SAA2B,CAAI,CAAE,CAAS,EACxC,IAAM,EAAc,EAAU,GAAG,CAAC,AAAA,IAChC,IAAM,EAAO,CACX,OAAQ,EAAS,QAAQ,CACzB,IAAK,EAAS,QAAQ,AACxB,EACA,OAAO,EAAa,kBAAkB,CACpC,EAAS,EAAE,CACX,EAAa,UAAU,CACrB,EAAa,cAAc,CACzB,EAAqB,EAAM,WAAY,EAAkB,EAAM,OAAO,UAAU,EAChF,CAAC,EAAa,eAAe,CAAC,CAAC,EAAa,eAAe,CAAC,EAAM,CAAA,GAAM,CAAE,EAAE,EAAE,CAAC,MAAM,CACnF,EAAS,KAAK,EAAI,EAAS,IAAI,CAC3B,CAAC,EAAa,cAAc,CAAC,EAAS,IAAI,EAAG,EAAa,cAAc,CAAC,EAAS,KAAK,EAAE,CACzF,EAAE,GAGV,UACA,aAGN,GACA,EAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAa,mBAAmB,CAAC,QAAS,GACnE,EAiqDiD,EAAM,GACnD,EAAa,MAAM,CAAG,GAAK,AA39C/B,SAAyB,CAAI,CAAE,CAAS,EACtC,IAAM,EAAc,EAAU,GAAG,CAAC,AAAA,GACzB,EAAa,kBAAkB,CAAC,EAAS,EAAE,CAAE,EAAS,QAAQ,GAEvE,EAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAa,mBAAmB,CAAC,QAAS,GACnE,EAs9C+C,EAAM,EACnD,CACF,EAEI,GAAS,CACX,WAAY,MACZ,SAAU,MACV,WAAY,CAAA,EACZ,eAAgB,CAAA,EAChB,gBAAiB,EAAE,CACnB,SAAU,EAAE,CACZ,oBAAqB,CAAA,EACrB,iBAAkB,CAAA,EAClB,sBAAuB,CAAA,EACvB,wBAAyB,CAAA,EACzB,aAAc,QACd,cAAe,SACf,YAAa,OACb,SAAU,CAAA,CACZ,EAEA,GAAM,CAAE,mBAAA,EAAkB,CAAE,CAAG,EAAQ,oBAGjC,GAAe,CACnB,WAAW,CAAI,EACb,IAAM,EAAS,EAAK,IAAI,CAAC,cAAc,CAAC,IAAI,CACtC,EAAS,EAAK,MAAM,CAC1B,GAAI,CAAC,EAAa,YAAY,CAAC,IAAW,CAAC,EAAa,eAAe,CAAC,GAAS,OACjF,IAAM,EAAY,EAAO,IAAI,CAC7B,GAAI,EAAY,GAAY,OAC5B,IAAM,EAAe,EAAO,cAAc,CAAC,IAAI,CAC/C,GAAI,CAAC,EAAa,eAAe,CAAC,GAAe,OACjD,IAAM,EAAkB,EAAa,IAAI,CACzC,GAAI,CAAC,EAAY,IACX,CAAC,GAAmB,EAAiB,GACvC,MAAM,EAAK,mBAAmB,CAC5B,CAAC,cAAc,EAAE,EAAU,sBAAsB,EAAE,EAAgB,CAAC,CAAC,CAI7E,CACF,EAEA,IAAI,GAAa,CAAC,EAAM,CAAE,KAAA,CAAI,CAAE,IAC9B,IAAM,EAAU,EAAK,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAG,OAAO,MAAM,CAAC,CAAC,EAAG,GAAQ,GACpE,EAAM,EAAO,mBAAmB,CACtC,GAAI,EAAK,CACP,IAAM,EAAW,EAAK,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CACvC,EAAU,CAAA,EACd,IAAK,IAAI,EAAI,EAAG,EAAI,EAAS,MAAM,CAAE,IAAK,CACxC,IAAM,EAAU,CAAQ,CAAC,EAAE,CACrB,EAAQ,EAAQ,KAAK,CAAC,OAAO,CAAC,oBACpC,GAAI,EAAQ,IAAM,EAAQ,KAAK,CAAC,KAAK,CAAC,GAAO,QAAQ,CAAC,GAAM,CAC1D,EAAU,CAAA,EACV,KACF,CACF,CACA,GAAI,CAAC,EAAS,CACZ,EAAK,IAAI,GACT,MACF,CACF,CACI,EAAO,QAAQ,EAAE,EAAK,QAAQ,CAAC,GACrC,CAiBA,CAAA,EAAO,OAAO,CAfF,IACH,CAAA,CACL,KAAM,sBACN,SAAU,EAAU,OAAO,CAC3B,QAAS,CACP,WAAY,EACZ,YAAa,EACb,QAAS,CACP,MAAO,GACP,KAAM,EACR,CACF,CACF,CAAA,C,E,C,iB,Q,mB,Q,mB,Q,mB,Q,iB,O,E,C,M,C,S,C,C,C,C,C,E,O,c,C,E,a,C,M,C,C,G,E,O,C,K,EEtgHmD,IAAA8hB,EAEtC,AAAA,CAAA,EAAAE,AAFfjhB,EAAA,oBAEeihB,OAAAA,AAAAA,EAAQC,AAAAA,IACrBA,EAAIC,aAAa,CAAC,GAEX,CACLhhB,KAAM,aAENihB,kBAAkBjB,CAAI,CAAEkB,CAAU,EAK5BA,EAAWpf,OAAO,CAAC4T,IAAI,CACrBzM,AAAAA,GAAK,AAACuJ,CAAAA,MAAMC,OAAO,CAACxJ,GAAKA,CAAC,CAAC,EAAE,CAAGA,CAAAA,IAAO,eAO7CiY,EAAWpf,OAAO,CAAC2O,IAAI,CAAC,MAC1B,CACF,GACA7P,CAAAA,EAAAsC,OAAA,CAAA0d,C,E,C,iB,O,E,C,M,C,S,C,C,C,C,C,E,O,c,C,E,a,C,M,C,C,G,E,O,C,E,E,a,C,K,EERF,IAAMQ,EAA6B,CAIjCJ,cAAgBD,AAAAA,GAAoBM,AAAAA,IAClCC,AA8EJ,CAAA,SAA2BD,CAAsB,CAAEE,CAAe,MAmB5DphB,EAlBJ,GAAI,AAAiB,UAAjB,OAAOkhB,EAAoB,CAC7B,GAAI,CAACG,OAAOC,SAAS,CAACJ,GACpB,MAAM,AAAIjhB,MAAM,qCAElBihB,EAAS,CAAA,CAAA,EAAGA,EAAM,MAAA,CAAO,AAC3B,CACA,GAAI,AAAiB,UAAjB,OAAOA,EACT,MAAM,AAAIjhB,MAAM,qCAGlB,IAAMshB,EAAQthB,MAAMuhB,eAAe,AA6BnC,MA3BqB,UAAjB,OAAOD,GAAsBA,EAAQ,IAGvCthB,CAAAA,MAAMuhB,eAAe,CAAG,EAH1B,EAQExhB,EADEohB,AAAwB,OAAxBA,EAAQlH,KAAK,CAAC,EAAG,GACb,AAAIja,MACP,CAAA,sDAAA,EAAwDmhB,EAAQ,kDAAA,CAAI,EAIjE,AAAInhB,MACP,CAAA,gBAAA,EAAkBihB,EAAM,wBAAA,EAA0BE,EAAQ,mSAAA,CAAI,EAS9C,UAAjB,OAAOG,GACTthB,CAAAA,MAAMuhB,eAAe,CAAGD,CAD1B,EAIMvgB,OAAOY,MAAM,CAAC5B,EAAK,CACvBE,KAAM,4BACNkhB,QAAAA,EACAF,MAAAA,CACF,EACF,CAAA,EA3HsBA,EAAON,EAAIQ,OAAO,CACtC,CACF,EAcO,SAAST,EACdc,CAIqC,EAMrC,MAAO,CAACb,EAAKlf,EAAiBggB,SAAoBC,MAC5CC,EAEJ,IAAK,IAAM/hB,KAAQmB,OAAOwB,IAAI,CAC5Bye,GAEIL,CAAG,CAAC/gB,EAAK,GAEb6wB,AAAS,MAAT9O,GAAAA,CAAAA,EAAcC,AAapB,SAAuBjB,CAAc,EAMnC,IAAIkB,EAAQ,KAcZ,MAb2B,UAAvB,OAAOlB,EAAIQ,OAAO,EAAiB,OAAO/Z,IAAI,CAACuZ,EAAIQ,OAAO,GAC5DU,CAAAA,EAAQ9gB,OAAO+gB,cAAc,CAACnB,EAA9BkB,GAGG,CAAA,CAAC9b,EAAI8b,EAAO,YACX,CAAC9b,EAAI8b,EAAO,cACZ,CAAC9b,EAAI8b,EAAO,aACZ,CAAC9b,EAAI8b,EAAO,QAAA,GAEdA,CAAAA,EAAQ,IAPV,EAWF9gB,OAAAY,MAAA,CAAA,CAAA,EACKkgB,EACAlB,EAEP,EArCkCA,EAA5B8P,EACA9O,CAAS,CAAC/hB,EAAK,CAAGohB,CAAY,CAACphB,EAAK,CAAC+hB,IAIvC,OAAOH,EAAOE,AAAU,MAAVA,CAAAA,EAACC,CAAAA,EAASD,EAAIf,EAAKlf,GAAW,CAAC,EAAGggB,EAClD,CACF,CAgCA,SAAS1b,EAAIgc,CAAO,CAAExU,CAAW,EAC/B,OAAOxM,OAAOihB,SAAS,CAACC,cAAc,CAAC1hB,IAAI,CAACwhB,EAAKxU,EACnD,CAxEExM,OAAOY,MAAM,CAACqf,EAAc,CAE1BkB,QAASA,IAAM,IACN,CAAA,CAAC,CAAA,EAGVC,WAAYA,IAAM,KAElB,CACF,GAiCsE3hB,EAAAugB,aAAA,CAF3CL,C,E,C,E,C,M,C,S,C,C,C,C,C,EC/D7B,OAAO,cAAc,CAAC,EAAS,aAAc,CAC3C,MAAO,CAAA,CACT,GACA,OAAO,cAAc,CAAC,EAAS,iBAAkB,CAC/C,WAAY,CAAA,EACZ,IAAK,WACH,OAAO,EAAgB,OAAO,AAChC,CACF,GACA,EAAQ,UAAU,CAelB,SAAoB,CAAI,CAAE,CAAc,CAAE,CAAI,EAC5C,OAAO,IAAI,EAAgB,OAAO,CAAC,GAAM,UAAU,CAAC,EAAgB,EACtE,EAhBA,EAAQ,QAAQ,CAkBhB,SAAkB,CAAI,CAAE,CAAI,CAAE,CAAc,CAAE,CAAI,EAChD,OAAO,IAAI,EAAgB,OAAO,CAAC,GAAM,QAAQ,CAAC,EAAM,EAAgB,EAC1E,EAnBA,EAAQ,YAAY,CAqBpB,SAAsB,CAAI,CAAE,CAAc,CAAE,CAAI,EAC9C,OAAO,IAAI,EAAgB,OAAO,CAAC,GAAM,YAAY,CAAC,EAAgB,EACxE,EAtBA,EAAQ,aAAa,CAwBrB,SAAuB,CAAI,CAAE,CAAc,CAAE,CAAI,EAC/C,OAAO,IAAI,EAAgB,OAAO,CAAC,GAAM,aAAa,CAAC,EAAgB,EACzE,EAzBA,OAAO,cAAc,CAAC,EAAS,WAAY,CACzC,WAAY,CAAA,EACZ,IAAK,WACH,OAAO,EAAU,OAAO,AAC1B,CACF,GAEA,IAAI,EAAkB,EAAQ,oBAE1B,EAAY,EAAQ,mB,E,C,mB,Q,iB,O,E,C,Q,C,S,C,C,C,C,C,ECtBxB,OAAO,cAAc,CAAC,EAAS,aAAc,CAC3C,MAAO,CAAA,CACT,GACA,EAAQ,OAAO,CAAG,KAAK,EAEvB,IAAI,EAAU,EAAQ,oBAElB,EAAK,EAAQ,oBAEb,EAAiB,EAAQ,oBAEzB,EAAY,EAAQ,oBAExB,GAAM,CACJ,eAAA,CAAc,CACd,mBAAA,CAAkB,CACnB,CAAG,CAqQJ,CAAA,EAAQ,OAAO,CAnQf,MACE,YAAY,CAAI,CAAE,CAAc,CAAE,CAAI,CAAE,CACtC,IAAI,CAAC,YAAY,CAAG,CAClB,eAAgB,KAChB,aAAc,WACd,gBAAiB,QACjB,iBAAkB,QAClB,oBAAqB,CAAA,EACrB,gBAAiB,CAAA,EACjB,eAAgB,QAClB,EACA,IAAM,EAAc,EAAK,IAAI,CAAC,AAAA,GAAK,EAAE,SAAS,GAC9C,CAAA,IAAI,CAAC,YAAY,CAAG,EACpB,IAAI,CAAC,aAAa,CAAG,EAAY,KAAK,CACtC,IAAI,CAAC,IAAI,CAAG,EAAY,GAAG,CAC3B,IAAI,CAAC,YAAY,CAAG,IAAI,CAAC,cAAc,CAAC,EAAgB,EAAM,CAAA,EAChE,CAEA,WAAW,CAAgB,CAAE,CAAI,CAAE,CACjC,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAW,EAAkB,EACpD,CAEA,SAAS,CAAU,CAAE,CAAgB,CAAE,CAAI,CAAE,CAG3C,OAFA,EAAQ,AAAsB,UAAtB,OAAO,GAER,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,EAAkB,GAAO,EAC3E,CAEA,aAAa,CAAgB,CAAE,CAAI,CAAE,CACnC,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,EAAkB,GAAO,KAC3E,CAEA,cAAc,CAAgB,CAAE,CAAI,CAAE,CACpC,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,EAAkB,GAAO,KAAK,EAChF,CAEA,eAAe,CAAc,CAAE,CAAI,CAAE,EAAS,CAAA,CAAK,CAAE,CACnD,IAAI,EAiBJ,MAfI,AAA0B,UAA1B,OAAO,EACT,EAAU,OAAO,MAAM,CAAC,CAAC,EAAG,IAAI,CAAC,YAAY,CAAE,CAC7C,eAAA,CACF,EAAG,IAEH,EAAQ,CAAC,EAAM,mCAEf,EAAU,OAAO,MAAM,CAAC,CAAC,EAAG,IAAI,CAAC,YAAY,CAAE,IAG7C,CAAC,GAAU,IACS,KAAA,IAAlB,EAAK,QAAQ,EAAgB,CAAA,EAAQ,QAAQ,CAAG,EAAK,QAAQ,AAAR,EACjC,KAAA,IAApB,EAAK,UAAU,EAAgB,CAAA,EAAQ,UAAU,CAAG,EAAK,UAAU,AAAV,GAGxD,CACT,CAEA,gBAAgB,CAAI,CAAE,CAAU,CAAE,CAChC,IAAM,EAAY,AAAe,YAAf,EACZ,EAAU,CAAC,CAAC,GAAc,CAAC,EAC3B,EAAc,AAAe,OAAf,EACd,CACJ,eAAA,CAAc,CACd,aAAA,CAAY,CACZ,gBAAA,CAAe,CACf,iBAAA,CAAgB,CAChB,oBAAA,CAAmB,CACnB,gBAAA,CAAe,CACf,SAAA,CAAQ,CACR,eAAA,CAAc,CACd,WAAA,CAAU,CACX,CAAG,EACA,EAAO,GAAY,EACjB,EAAS,AAAA,CAAA,EAAG,EAAU,OAAM,AAAN,EAAS,IAAI,CAAC,YAAY,EAChD,EAAkB,GAAS,AAAqB,SAArB,EAC3B,EAAmB,GAAS,AAAqB,UAArB,EAElC,GAAI,AAAmB,UAAnB,GAA8B,CAAC,EACjC,MAAM,AAAI,MAAM,0DAGlB,IAAM,EAAU,IAAI,EAAe,OAAO,CAAC,EAAgB,IAAI,CAAC,aAAa,CAAE,IAAI,CAAC,IAAI,EAExF,GAAI,AAAiB,QAAjB,EAAwB,CAC1B,GAAI,CAAC,GAAmB,CAAC,EACvB,MAAM,AAAI,MAAM,6CAGlB,EAAQ,MAAM,GAEV,EACF,EAAQ,SAAS,CAAC,GAAY,GACrB,CAAA,GAAa,CAAA,GACtB,EAAQ,KAAK,CAAC,EAAM,EAExB,MAAO,GAAI,AAAiB,aAAjB,EACT,MAAM,AAAI,MAAM,CAAC,wBAAwB,EAAE,EAAa,CAAC,CAAC,OACrD,GAAI,AAAoB,UAApB,GACT,GAAI,EAAiB,CACnB,EAAO,AAAS,YAAT,EAAqB,EAAO,EACnC,IAAM,EAAa,CAAC,EAAE,EAAe,WAAW,CAAC,CACjD,EAAQ,MAAM,GAEV,EACF,EAAQ,OAAO,CAAC,GAAY,GAAG,CAAC,GAAQ,GAAgB,eAAe,GAC9D,EACL,EACF,EAAQ,OAAO,CAAC,GAAY,GAAG,CAAC,GAAQ,GAAgB,cAAc,GAAG,IAAI,CAAC,WAE9E,EAAQ,OAAO,CAAC,GAAY,GAAG,CAAC,GAAM,cAAc,GAAG,IAAI,CAAC,GAErD,GACT,EAAQ,OAAO,CAAC,GAAY,IAAI,CAAC,EAErC,MAAW,GACT,EAAQ,MAAM,GAEV,EACF,EAAQ,SAAS,CAAC,GAAQ,GACjB,CAAA,GAAa,CAAA,GACtB,EAAQ,KAAK,CAAC,EAAM,KAGtB,EAAQ,OAAO,GAEX,EACF,EAAQ,GAAG,CAAC,GAAQ,GAAgB,eAAe,GAC1C,AAAC,CAAA,GAAa,CAAA,GAAY,EAC/B,GACF,EAAO,AAAS,YAAT,EAAqB,EAAO,EACnC,EAAQ,GAAG,CAAC,GAAM,IAAI,CAAC,GACvB,EAAQ,cAAc,IAEtB,EAAQ,GAAG,CAAC,GAAgB,IAAI,CAAC,GAE1B,EACT,EAAQ,GAAG,CAAC,GAAM,cAAc,GAAG,IAAI,CAAC,GAC/B,GACT,EAAQ,GAAG,CAAC,GAAM,IAAI,CAAC,SAGtB,GAAI,AAAoB,aAApB,EACL,GACF,EAAQ,MAAM,GAEV,EACF,EAAQ,OAAO,CAAC,GAAQ,GACf,CAAA,GAAa,CAAA,GACtB,EAAQ,OAAO,CAAC,GAAgB,IAAI,CAAC,IAE9B,GACT,EAAQ,MAAM,GAEV,EACF,EAAQ,SAAS,CAAC,GAAQ,GACjB,CAAA,GAAa,CAAA,GACtB,EAAQ,KAAK,CAAC,EAAM,KAGtB,EAAQ,OAAO,GAEX,EACF,EAAQ,GAAG,CAAC,GAAQ,GACX,CAAA,GAAa,CAAjB,IACD,EACF,EAAQ,GAAG,CAAC,GAAgB,IAAI,CAAC,GAEjC,EAAQ,IAAI,CAAC,GAAY,GAAG,CAAC,UAI9B,GAAI,AAAoB,eAApB,EAAkC,CAC3C,GAAI,GAAa,EACf,MAAM,AAAI,MAAM,0CAGd,GACF,EAAQ,MAAM,GAEV,EACF,EAAQ,OAAO,CAAC,GAAQ,GACf,EACT,EAAQ,OAAO,CAAC,GACP,GACT,EAAQ,OAAO,CAAC,GAAgB,IAAI,CAAC,IAE9B,GACT,EAAQ,MAAM,GAEV,EACF,EAAQ,OAAO,CAAC,GAAQ,GACf,EACT,EAAQ,OAAO,CAAC,GACP,GACT,EAAQ,KAAK,CAAC,EAAM,KAGtB,EAAQ,OAAO,GAEX,EACF,EAAQ,GAAG,CAAC,GAAQ,GACX,EACT,EAAQ,GAAG,CAAC,GACH,IACL,EACF,EAAQ,GAAG,CAAC,GAAgB,IAAI,CAAC,GAEjC,EAAQ,GAAG,CAAC,GAAM,IAAI,CAAC,IAI/B,MACE,MAAM,AAAI,MAAM,CAAC,yBAAyB,EAAE,EAAgB,EAAE,CAAC,EAGjE,GAAM,CACJ,WAAA,CAAU,CACV,WAAA,CAAU,CACX,CAAG,EAAQ,IAAI,SAIhB,CAFA,IAAI,CAAC,iBAAiB,CAAC,EAAY,EAAgB,GAE/C,AAAC,CAAA,GAAa,CAAA,GAAY,GAAmB,AAAoB,eAApB,EAAW,IAAI,EACvD,EAAmB,CAAC,EAAe,GAAI,EAAW,EAGpD,CACT,CAEA,kBAAkB,CAAU,CAAE,EAAiB,QAAQ,CAAE,EAAa,CAAC,CAAE,CACvE,IAAM,EAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAEnC,GAAI,AAAmB,UAAnB,EACF,CAAA,IAAK,IAAI,EAAI,EAAK,MAAM,CAAG,EAAG,GAAK,EAAG,IACpC,GAAI,CAAI,CAAC,EAAE,CAAC,mBAAmB,GAAI,CACjC,CAAI,CAAC,EAAE,CAAC,WAAW,CAAC,GACpB,MACF,CAAA,KAEG,CACL,EAAW,OAAO,CAAC,AAAA,IACjB,EAAK,WAAW,CAAG,CACrB,GACA,IAAM,EAAa,EAAK,IAAI,CAAC,AAAA,IAC3B,IAAM,EAAM,EAAE,IAAI,CAAC,WAAW,CAC9B,OAAO,OAAO,QAAQ,CAAC,IAAQ,EAAM,CACvC,GAEA,GAAI,EAAY,CACd,EAAW,YAAY,CAAC,GACxB,MACF,CACF,CAEA,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,OAAQ,EAC7C,CAEF,C,E,C,mB,Q,iB,Q,mB,Q,mB,O,E,C,M,C,S,C,C,C,C,C,ECnRA,OAAO,cAAc,CAAC,EAAS,aAAc,CAC3C,MAAO,CAAA,CACT,GACA,EAAQ,OAAO,CAAG,KAAK,EAEvB,IAAI,EAAU,EAAQ,oBAItB,GAAM,CACJ,eAAA,CAAc,CACd,UAAA,CAAS,CACT,oBAAA,CAAmB,CACnB,WAAA,CAAU,CACV,kBAAA,CAAiB,CACjB,uBAAA,CAAsB,CACtB,yBAAA,CAAwB,CACxB,gBAAA,CAAe,CACf,iBAAA,CAAgB,CAChB,cAAA,CAAa,CACb,oBAAA,CAAmB,CACnB,mBAAA,CAAkB,CACnB,CAfQ,EAAQ,mBA0JjB,CAAA,EAAQ,OAAO,CAzIf,MACE,YAAY,CAAc,CAAE,CAAK,CAAE,CAAG,CAAE,CACtC,IAAI,CAAC,WAAW,CAAG,EAAE,CACrB,IAAI,CAAC,WAAW,CAAG,KACnB,IAAI,CAAC,eAAe,CAAG,KAAK,EAC5B,IAAI,CAAC,MAAM,CAAG,EACd,IAAI,CAAC,IAAI,CAAG,EACZ,IAAI,CAAC,eAAe,CAAG,CACzB,CAEA,MAAO,CACL,MAAO,CACL,WAAY,IAAI,CAAC,WAAW,CAC5B,WAAY,IAAI,CAAC,WAAW,AAC9B,CACF,CAEA,QAAS,CAGP,OAFA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAkB,EAAE,CAAE,EAAc,IAAI,CAAC,eAAe,IAEvE,IAAI,AACb,CAEA,SAAU,CAGR,OAFA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAoB,EAAe,EAAW,WAAY,CAAC,EAAc,IAAI,CAAC,eAAe,EAAE,IAE9G,IAAI,AACb,CAEA,UAAU,EAAO,WAAW,CAAE,CAC5B,IAAM,EAAQ,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,GAE1C,EAAY,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAG,EAAE,CAQ/D,OANA,EAAQ,AAAmB,sBAAnB,EAAU,IAAI,EAEtB,EAAQ,AAAgC,IAAhC,EAAU,UAAU,CAAC,MAAM,EAEnC,EAAU,UAAU,CAAG,CAAC,EAAyB,GAAO,CACxD,IAAI,CAAC,WAAW,CAAG,EAAU,GACtB,IAAI,AACb,CAEA,QAAQ,CAAI,CAAE,CACZ,IAAM,EAAK,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,GAEvC,EAAY,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAG,EAAE,CAQ/D,OANA,EAAQ,AAAmB,sBAAnB,EAAU,IAAI,EAEtB,EAAQ,AAAgC,IAAhC,EAAU,UAAU,CAAC,MAAM,EAEnC,EAAU,UAAU,CAAG,CAAC,EAAuB,GAAI,CACnD,IAAI,CAAC,WAAW,CAAG,EAAU,GACtB,IAAI,AACb,CAEA,MAAM,CAAI,CAAE,CAAU,CAAE,CACtB,GAAI,AAAe,YAAf,EAA0B,OAAO,IAAI,CAAC,OAAO,CAAC,GAElD,IAAM,EAAK,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,GAEvC,EAAY,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAG,EAAE,CAQ/D,OANA,EAAQ,AAAmB,sBAAnB,EAAU,IAAI,EAEtB,EAAQ,AAAgC,IAAhC,EAAU,UAAU,CAAC,MAAM,EAEnC,EAAU,UAAU,CAAG,CAAC,EAAgB,EAAI,EAAW,IAAa,CACpE,IAAI,CAAC,WAAW,CAAG,EAAU,GACtB,IAAI,AACb,CAEA,IAAI,CAAI,CAAE,CACR,IAAM,EAAK,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,GAEzC,EAAY,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAG,EAAE,CAY7D,MAVuB,wBAAnB,EAAU,IAAI,GAChB,EAAQ,IAAI,CAAC,WAAW,EAExB,EAAY,EAAoB,IAAI,CAAC,WAAW,EAEhD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAGxB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAG,EAAE,CAAG,EAAoB,MAAO,CAAC,EAAmB,EAAI,EAAU,UAAU,EAAE,EACzH,IAAI,CAAC,WAAW,CAAG,EAAU,GACtB,IAAI,AACb,CAEA,gBAAiB,CACf,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,yBAC3C,CAEA,iBAAkB,CAChB,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,0BAC3C,CAEA,SAAS,CAAM,CAAE,CACf,IAAM,EAAY,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAG,EAAE,CAY/D,MAVI,AAAmB,wBAAnB,EAAU,IAAI,CAChB,EAAU,UAAU,CAAG,EAAe,EAAQ,CAAC,EAAU,UAAU,CAAC,EAC3D,AAAmB,wBAAnB,EAAU,IAAI,EACvB,EAAQ,AAAkC,IAAlC,EAAU,YAAY,CAAC,MAAM,EAErC,EAAU,YAAY,CAAC,EAAE,CAAC,IAAI,CAAG,EAAe,EAAQ,CAAC,EAAU,YAAY,CAAC,EAAE,CAAC,IAAI,CAAC,GAExF,EAAQ,IAAI,CAAC,oBAGR,IAAI,AACb,CAEA,KAAK,CAAI,CAAE,CACT,IAAM,EAAY,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAG,EAAE,CAY/D,MAVI,AAAmB,wBAAnB,EAAU,IAAI,CAChB,EAAU,UAAU,CAAG,EAAiB,EAAU,UAAU,CAAE,EAAW,IAChE,AAAmB,wBAAnB,EAAU,IAAI,EACvB,EAAQ,AAAkC,IAAlC,EAAU,YAAY,CAAC,MAAM,EAErC,EAAU,YAAY,CAAC,EAAE,CAAC,IAAI,CAAG,EAAiB,EAAU,YAAY,CAAC,EAAE,CAAC,IAAI,CAAE,EAAW,KAE7F,EAAQ,IAAI,CAAC,mBAAqB,EAAU,IAAI,EAG3C,IAAI,AACb,CAEA,KAAK,CAAI,CAAE,CACT,IAAI,CAAC,WAAW,CAAG,EAAiB,IAAI,CAAC,WAAW,CAAE,EAAW,GACnE,CAEF,C,E,C,iB,Q,mB,O,E,C,M,C,S,C,C,C,C,C,EC/JA,OAAO,cAAc,CAAC,EAAS,aAAc,CAC3C,MAAO,CAAA,CACT,GACA,EAAQ,OAAO,CAEf,SAAkB,CAAI,EACpB,GAAM,CACJ,WAAA,CAAU,CACX,CAAG,EAAK,IAAI,CAEb,GAAI,AAAe,WAAf,GAA2B,AAAe,WAAf,EAC7B,MAAM,EAAK,mBAAmB,CAAC,CAAC,oBAAoB,EAAE,EAAW,oBAAoB,CAAC,EAGxF,MAAO,AAAyB,WAAzB,EAAK,IAAI,CAAC,UAAU,AAC7B,C,E,C,E,C,M,C,S,C,C,C,C,C,EChBA,IAAI,EAAW,IAAK,EAAI,IAAI,CAAC,QAAQ,EAAK,WAStC,MAAO,AARP,CAAA,EAAW,OAAO,MAAM,EAAI,SAAS,CAAC,EAClC,IAAK,IAAI,EAAG,EAAI,EAAG,EAAI,UAAU,MAAM,CAAE,EAAI,EAAG,IAE5C,IAAK,IAAI,KADT,EAAI,SAAS,CAAC,EAAE,CACK,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,EAAG,IACzD,CAAA,CAAC,CAAC,EAAE,CAAG,CAAC,CAAC,EAAE,AAAF,EAEjB,OAAO,CACX,CAAA,EACgB,KAAK,CAAC,IAAI,CAAE,UAChC,EACA,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,MAAO,CAAA,CAAK,GAC3D,IAAI,EAAqB,EAAQ,oBAC7B,EAAwB,EAAQ,oBAChC,EAAoB,EAAQ,oBAC5B,EAAqB,EAAS,EAAS,CAAC,EAAG,EAAmB,eAAe,EAAG,CAAE,IAAK,EAAmB,eAAe,CAAC,KAAK,AAAC,GAChI,EAAgB,CAChB,aAAc,WACd,SAAU,iJACV,kBAAmB,0KACnB,UAAW,wMACf,EACI,EAAuB,CACvB,KAAM,eACN,MAAO,MACP,QAAS,SACb,CAuCA,CAAA,EAAQ,MAAM,CArCd,SAAgB,CAAI,CAAE,CAAE,EACpB,IAAI,EAAK,AAAO,KAAK,IAAZ,EAAgB,EAAuB,EAAI,EAAK,EAAG,IAAI,CAAE,EAAO,AAAO,KAAK,IAAZ,EAAgB,eAAiB,EAAI,EAAK,EAAG,OAAO,CAAE,EAAU,AAAO,KAAK,IAAZ,EAAgB,UAAY,EAAI,EAAK,EAAG,KAAK,CAAE,EAAQ,AAAO,KAAK,IAAZ,EAAgB,MAAQ,EACxN,GAAI,CAAC,EACD,MAAO,GAEX,IAAI,EAAe,CAAa,CAAC,EAAK,CAClC,EAAa,CAAkB,CAAC,EAAM,CAAC,UAAU,CACjD,EAAQ,AAAY,gBAAZ,CACZ,CAAA,EAAa,SAAS,CAAG,EACzB,IAAI,EAAK,EAAa,IAAI,CAAC,GAE3B,GAAI,EAAI,CACJ,EAAK,GACL,IAAI,EAAK,EACT,EAAG,CACK,IAAO,EAAG,KAAK,EACf,CAAA,GAAM,EAAK,SAAS,CAAC,EAAI,EAAG,KAAK,CAAA,EAErC,IAAI,EAAK,CAAE,CAAC,EAAE,CACV,EAAW,CAAU,CAAC,EAAG,CAC7B,GAAI,CAAC,EAAU,CACX,IAAI,EAAS,EAAG,MAAM,CAAG,EAAI,EAAkB,YAAY,CAAC,EAAI,GAAK,EAAG,UAAU,CAAC,GACnF,EAAW,AAAC,CAAA,EAAQ,MAAQ,EAAO,QAAQ,CAAC,IAAM,KAAO,CAAA,EAAU,GACvE,CACA,GAAM,EACN,EAAK,EAAG,KAAK,CAAG,EAAG,MAAM,AAC7B,OAAU,EAAK,EAAa,IAAI,CAAC,GAAQ,AACrC,IAAO,EAAK,MAAM,EAClB,CAAA,GAAM,EAAK,SAAS,CAAC,EADzB,CAGJ,MAEI,EACI,EAER,OAAO,CACX,EAEA,IAAI,EAAuB,CACvB,MAAO,OACP,MAAO,KACX,EACI,EAAS,4CACT,EAAY,gDACZ,EAAoB,CACpB,IAAK,CACD,OAAQ,EACR,UAAW,EACX,KAAM,EAAmB,WAAW,CAAC,GAAG,AAC5C,EACA,MAAO,CACH,OAAQ,EACR,UAAW,EACX,KAAM,EAAmB,WAAW,CAAC,KAAK,AAC9C,EACA,MAAO,CACH,OAAQ,EACR,UAAW,EACX,KAAM,EAAmB,WAAW,CAAC,KAAK,AAC9C,CACJ,EACI,EAAgB,EAAS,EAAS,CAAC,EAAG,GAAoB,CAAE,IAAK,EAAkB,KAAK,AAAC,GACzF,EAAe,OAAO,YAAY,CAClC,EAAkB,EAAa,OAC/B,EAA6B,CAC7B,MAAO,KACX,CAuCA,CAAA,EAAQ,YAAY,CArCpB,SAAsB,CAAM,CAAE,CAAE,EAC5B,IAAI,EAAK,AAAC,CAAA,AAAO,KAAK,IAAZ,EAAgB,EAA6B,CAAA,EAAI,KAAK,CAAE,EAAQ,AAAO,KAAK,IAAZ,EAAgB,MAAQ,EAClG,GAAI,CAAC,EACD,MAAO,GAEX,IAAI,EAAK,CACoB,CAAA,CAAM,CAAC,EAAO,MAAM,CAAG,EAAE,CAYlD,IAAI,EAA4B,CAAkB,CAAC,EAAM,CAAC,QAAQ,CAAC,EAAO,CAC1E,GAAI,EACA,EAAK,OAEJ,GAAI,AAAc,MAAd,CAAM,CAAC,EAAE,EAAY,AAAc,MAAd,CAAM,CAAC,EAAE,CAAU,CAC7C,IAAI,EAAqB,CAAM,CAAC,EAAE,CAC9B,EAAe,AAAsB,KAAtB,GAA6B,AAAsB,KAAtB,EAC1C,SAAS,EAAO,MAAM,CAAC,GAAI,IAC3B,SAAS,EAAO,MAAM,CAAC,IAC7B,EACI,GAAgB,QACV,EACA,EAAe,MACX,EAAkB,aAAa,CAAC,GAChC,EAAa,EAAsB,iBAAiB,CAAC,EAAa,EAAI,EACxF,CAEJ,OAAO,CACX,EAgEA,EAAQ,MAAM,CA7Dd,SAAgB,CAAI,CAAE,CAAE,EACpB,IAUI,EAVA,EAAqB,AAAO,KAAK,IAAZ,EAAgB,EAAuB,EAAI,EAAe,EAAmB,KAAK,CAAE,EAAQ,AAAiB,KAAK,IAAtB,EAA0B,MAAQ,EAAc,EAAK,EAAmB,KAAK,CAAE,EAAQ,AAAO,KAAK,IAAZ,EAAgB,AAAU,QAAV,EAAkB,SAAW,OAAS,EAClQ,GAAI,CAAC,EACD,MAAO,GAEX,IAAI,EAAe,CAAa,CAAC,EAAM,CAAC,EAAM,CAC1C,EAAa,CAAkB,CAAC,EAAM,CAAC,QAAQ,CAC/C,EAAc,AAAU,cAAV,EACd,EAAW,AAAU,WAAV,CACf,CAAA,EAAa,SAAS,CAAG,EACzB,IAAI,EAAiB,EAAa,IAAI,CAAC,GAEvC,GAAI,EAAgB,CAChB,EAAkB,GAClB,IAAI,EAAqB,EACzB,EAAG,CACK,IAAuB,EAAe,KAAK,EAC3C,CAAA,GAAmB,EAAK,SAAS,CAAC,EAAoB,EAAe,KAAK,CAAA,EAE9E,IAAI,EAAiB,CAAc,CAAC,EAAE,CAClC,EAAiB,EACjB,EAAyB,CAAc,CAAC,EAAe,MAAM,CAAG,EAAE,CACtE,GAAI,GACG,AAA2B,MAA3B,EACH,EAAiB,OAEhB,GAAI,GACF,AAA2B,MAA3B,EACH,EAAiB,MAEhB,CACD,IAAI,EAA4B,CAAU,CAAC,EAAe,CAC1D,GAAI,EACA,EAAiB,OAEhB,GAAI,AAAsB,MAAtB,CAAc,CAAC,EAAE,EAAY,AAAsB,MAAtB,CAAc,CAAC,EAAE,CAAU,CAC7D,IAAI,EAAqB,CAAc,CAAC,EAAE,CACtC,EAAe,AAAsB,KAAtB,GAA6B,AAAsB,KAAtB,EAC1C,SAAS,EAAe,MAAM,CAAC,GAAI,IACnC,SAAS,EAAe,MAAM,CAAC,IACrC,EACI,GAAgB,QACV,EACA,EAAe,MACX,EAAkB,aAAa,CAAC,GAChC,EAAa,EAAsB,iBAAiB,CAAC,EAAa,EAAI,EACxF,CACJ,CACA,GAAmB,EACnB,EAAqB,EAAe,KAAK,CAAG,EAAe,MAAM,AACrE,OAAU,EAAiB,EAAa,IAAI,CAAC,GAAQ,AACjD,IAAuB,EAAK,MAAM,EAClC,CAAA,GAAmB,EAAK,SAAS,CAAC,EADtC,CAGJ,MAEI,EACI,EAER,OAAO,CACX,C,E,C,mB,Q,iB,Q,mB,O,E,C,M,C,S,C,C,C,C,C,ECpMa,OAAO,cAAc,CAAC,EAAQ,aAAa,CAAC,MAAM,CAAA,CAAI,GAAG,EAAQ,WAAW,CAAC,CAAC,IAAI,6CAA6C,MAAM,+nBAA+nB,MAAM,spBAAspB,EAAE,EAAQ,eAAe,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,IAAI,OAAO,IAAI,SAAS,IAAI,SAAS,IAAI,QAAQ,GAAG,EAAE,WAAW,CAAC,IAAI,OAAO,IAAI,OAAO,IAAI,SAAS,IAAI,SAAS,IAAI,OAAO,CAAC,EAAE,MAAM,CAAC,SAAS,CAAC,SAAS,IAAI,QAAQ,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,OAAO,IAAI,QAAQ,IAAI,UAAU,IAAI,WAAW,IAAI,QAAQ,IAAI,SAAS,IAAI,OAAO,IAAI,QAAQ,IAAI,QAAQ,IAAI,SAAS,IAAI,QAAQ,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,OAAO,IAAI,QAAQ,IAAI,OAAO,IAAI,QAAQ,IAAI,OAAO,IAAI,QAAQ,IAAI,QAAQ,IAAI,SAAS,IAAI,OAAO,IAAI,QAAQ,IAAI,UAAU,IAAI,WAAW,IAAI,QAAQ,IAAI,SAAS,IAAI,QAAQ,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,QAAQ,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,QAAQ,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,OAAO,IAAI,QAAQ,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,QAAQ,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,QAAQ,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,OAAO,IAAI,QAAQ,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,QAAQ,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,QAAQ,IAAI,SAAS,IAAI,OAAO,IAAI,QAAQ,IAAI,MAAM,IAAI,OAAO,IAAI,MAAM,IAAI,OAAO,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,IAAI,SAAS,IAAI,WAAW,IAAI,SAAS,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,YAAY,IAAI,SAAS,IAAI,QAAQ,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,OAAO,IAAI,OAAO,IAAI,OAAO,IAAI,YAAY,IAAI,OAAO,IAAI,QAAQ,IAAI,UAAU,IAAI,QAAQ,IAAI,YAAY,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,UAAU,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,YAAY,IAAI,SAAS,IAAI,QAAQ,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,OAAO,IAAI,OAAO,IAAI,OAAO,IAAI,YAAY,IAAI,OAAO,IAAI,QAAQ,IAAI,WAAW,IAAI,UAAU,IAAI,QAAQ,IAAI,YAAY,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,UAAU,IAAI,aAAa,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,WAAW,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,YAAY,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,OAAO,IAAI,SAAS,IAAI,QAAQ,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,QAAQ,IAAI,OAAO,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,WAAW,IAAI,QAAQ,IAAI,SAAS,IAAI,UAAU,IAAI,OAAO,IAAI,UAAU,IAAI,OAAO,IAAI,OAAO,IAAI,QAAQ,IAAI,QAAQ,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,SAAS,IAAI,SAAS,IAAI,QAAQ,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,GAAG,EAAE,WAAW,CAAC,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,QAAQ,IAAI,WAAW,IAAI,SAAS,IAAI,QAAQ,IAAI,SAAS,EAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,SAAS,IAAI,QAAQ,IAAI,WAAW,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,EAAI,UAAU,IAAI,SAAS,IAAI,WAAW,IAAI,UAAU,IAAI,SAAS,EAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,EAAI,WAAW,EAAI,WAAW,EAAI,UAAU,EAAI,WAAW,EAAI,SAAS,EAAI,UAAU,EAAI,UAAU,EAAI,WAAW,EAAI,WAAW,EAAI,WAAW,EAAI,UAAU,EAAI,SAAS,EAAI,WAAW,EAAI,WAAW,EAAI,UAAU,EAAI,SAAS,EAAI,QAAQ,EAAI,WAAW,EAAI,WAAW,EAAI,WAAW,EAAI,UAAU,EAAI,WAAW,EAAI,SAAS,IAAI,UAAU,EAAI,WAAW,EAAI,WAAW,EAAI,WAAW,EAAI,UAAU,EAAI,SAAS,EAAI,WAAW,EAAI,UAAU,EAAI,UAAU,EAAI,WAAW,EAAI,WAAW,EAAI,UAAU,EAAI,WAAW,EAAI,SAAS,EAAI,UAAU,EAAI,UAAU,EAAI,WAAW,EAAI,WAAW,EAAI,WAAW,EAAI,UAAU,EAAI,SAAS,EAAI,WAAW,EAAI,WAAW,EAAI,UAAU,EAAI,SAAS,EAAI,QAAQ,EAAI,WAAW,EAAI,WAAW,EAAI,WAAW,EAAI,UAAU,EAAI,WAAW,EAAI,SAAS,IAAI,WAAW,EAAI,WAAW,EAAI,WAAW,EAAI,WAAW,EAAI,UAAU,EAAI,SAAS,EAAI,WAAW,EAAI,UAAU,EAAI,SAAS,IAAI,SAAS,IAAI,QAAQ,IAAI,OAAO,IAAI,OAAO,EAAI,UAAU,EAAI,UAAU,EAAI,WAAW,EAAI,WAAW,EAAI,SAAS,EAAI,SAAS,IAAI,UAAU,IAAI,SAAS,IAAI,SAAS,IAAI,WAAW,IAAI,SAAS,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,SAAS,EAAI,SAAS,EAAI,UAAU,EAAI,SAAS,EAAI,UAAU,EAAI,UAAU,EAAI,YAAY,EAAI,SAAS,EAAI,QAAQ,EAAI,UAAU,EAAI,SAAS,EAAI,UAAU,EAAI,WAAW,EAAI,OAAO,EAAI,OAAO,EAAI,OAAO,EAAI,YAAY,EAAI,OAAO,EAAI,QAAQ,EAAI,UAAU,EAAI,QAAQ,EAAI,YAAY,EAAI,QAAQ,EAAI,QAAQ,EAAI,QAAQ,EAAI,UAAU,EAAI,UAAU,EAAI,SAAS,EAAI,UAAU,EAAI,UAAU,EAAI,YAAY,EAAI,SAAS,EAAI,QAAQ,EAAI,UAAU,EAAI,SAAS,EAAI,UAAU,EAAI,WAAW,EAAI,OAAO,EAAI,OAAO,EAAI,OAAO,EAAI,YAAY,EAAI,OAAO,EAAI,QAAQ,EAAI,WAAW,EAAI,UAAU,EAAI,QAAQ,EAAI,YAAY,EAAI,QAAQ,EAAI,QAAQ,EAAI,QAAQ,EAAI,UAAU,EAAI,aAAa,EAAI,UAAU,EAAI,QAAQ,IAAI,SAAS,IAAI,WAAW,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,EAAI,WAAW,EAAI,UAAU,EAAI,SAAS,IAAI,UAAU,EAAI,YAAY,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,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","sources":["<anon>","node_modules/babel-preset-solid/index.js","node_modules/babel-plugin-jsx-dom-expressions/index.js","node_modules/@babel/plugin-syntax-jsx/lib/index.js","node_modules/@babel/plugin-syntax-jsx/src/index.ts","node_modules/@babel/helper-plugin-utils/lib/index.js","node_modules/@babel/helper-plugin-utils/src/index.ts","node_modules/babel-plugin-jsx-dom-expressions/node_modules/@babel/helper-module-imports/lib/index.js","node_modules/babel-plugin-jsx-dom-expressions/node_modules/@babel/helper-module-imports/lib/import-injector.js","node_modules/babel-plugin-jsx-dom-expressions/node_modules/@babel/helper-module-imports/lib/import-builder.js","node_modules/babel-plugin-jsx-dom-expressions/node_modules/@babel/helper-module-imports/lib/is-module.js","node_modules/html-entities/lib/index.js","node_modules/html-entities/lib/named-references.js","node_modules/html-entities/lib/numeric-unicode-map.js","node_modules/html-entities/lib/surrogate-pairs.js","node_modules/validate-html-nesting/src/index.js","node_modules/validate-html-nesting/src/mapping.js","node_modules/process/browser.js","node_modules/inherits/inherits_browser.js"],"sourcesContent":["importScripts(\"./babel-preset-solid.e257d70e.js\");\n// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        this\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"5Q6DS\":[function(require,module,exports) {\nconst jsxTransform = require(\"b29e1dae212317c9\");\nmodule.exports = function(context, options = {}) {\n    const plugins = [\n        [\n            jsxTransform,\n            Object.assign({\n                moduleName: \"solid-js/web\",\n                builtIns: [\n                    \"For\",\n                    \"Show\",\n                    \"Switch\",\n                    \"Match\",\n                    \"Suspense\",\n                    \"SuspenseList\",\n                    \"Portal\",\n                    \"Index\",\n                    \"Dynamic\",\n                    \"ErrorBoundary\"\n                ],\n                contextToCustomElements: true,\n                wrapConditionals: true,\n                generate: \"dom\"\n            }, options)\n        ]\n    ];\n    return {\n        plugins\n    };\n};\n\n},{\"b29e1dae212317c9\":\"clJab\"}],\"clJab\":[function(require,module,exports) {\n\"use strict\";\nvar SyntaxJSX = require(\"ced14b3cabb71ae3\");\nvar t = require(\"3dbfa0d0bfd7994a\");\nvar helperModuleImports = require(\"8f809a0d259a0936\");\nvar htmlEntities = require(\"1e09f2a3447b1b07\");\nfunction _interopNamespaceDefault(e) {\n    var n = Object.create(null);\n    if (e) Object.keys(e).forEach(function(k) {\n        if (k !== \"default\") {\n            var d = Object.getOwnPropertyDescriptor(e, k);\n            Object.defineProperty(n, k, d.get ? d : {\n                enumerable: true,\n                get: function() {\n                    return e[k];\n                }\n            });\n        }\n    });\n    n.default = e;\n    return Object.freeze(n);\n}\nvar t__namespace = /*#__PURE__*/ _interopNamespaceDefault(t);\nconst booleans = [\n    \"allowfullscreen\",\n    \"async\",\n    \"autofocus\",\n    \"autoplay\",\n    \"checked\",\n    \"controls\",\n    \"default\",\n    \"disabled\",\n    \"formnovalidate\",\n    \"hidden\",\n    \"indeterminate\",\n    \"ismap\",\n    \"loop\",\n    \"multiple\",\n    \"muted\",\n    \"nomodule\",\n    \"novalidate\",\n    \"open\",\n    \"playsinline\",\n    \"readonly\",\n    \"required\",\n    \"reversed\",\n    \"seamless\",\n    \"selected\"\n];\nconst BooleanAttributes = /*#__PURE__*/ new Set(booleans);\nconst Properties = /*#__PURE__*/ new Set([\n    \"className\",\n    \"value\",\n    \"readOnly\",\n    \"formNoValidate\",\n    \"isMap\",\n    \"noModule\",\n    \"playsInline\",\n    ...booleans\n]);\nconst ChildProperties = /*#__PURE__*/ new Set([\n    \"innerHTML\",\n    \"textContent\",\n    \"innerText\",\n    \"children\"\n]);\n// React Compat\nconst Aliases = /*#__PURE__*/ Object.assign(Object.create(null), {\n    className: \"class\",\n    htmlFor: \"for\"\n});\nconst PropAliases = /*#__PURE__*/ Object.assign(Object.create(null), {\n    class: \"className\",\n    formnovalidate: {\n        $: \"formNoValidate\",\n        BUTTON: 1,\n        INPUT: 1\n    },\n    ismap: {\n        $: \"isMap\",\n        IMG: 1\n    },\n    nomodule: {\n        $: \"noModule\",\n        SCRIPT: 1\n    },\n    playsinline: {\n        $: \"playsInline\",\n        VIDEO: 1\n    },\n    readonly: {\n        $: \"readOnly\",\n        INPUT: 1,\n        TEXTAREA: 1\n    }\n});\nfunction getPropAlias(prop, tagName) {\n    const a = PropAliases[prop];\n    return typeof a === \"object\" ? a[tagName] ? a[\"$\"] : undefined : a;\n}\n// list of Element events that will be delegated\nconst DelegatedEvents = /*#__PURE__*/ new Set([\n    \"beforeinput\",\n    \"click\",\n    \"dblclick\",\n    \"contextmenu\",\n    \"focusin\",\n    \"focusout\",\n    \"input\",\n    \"keydown\",\n    \"keyup\",\n    \"mousedown\",\n    \"mousemove\",\n    \"mouseout\",\n    \"mouseover\",\n    \"mouseup\",\n    \"pointerdown\",\n    \"pointermove\",\n    \"pointerout\",\n    \"pointerover\",\n    \"pointerup\",\n    \"touchend\",\n    \"touchmove\",\n    \"touchstart\"\n]);\nconst SVGElements = /*#__PURE__*/ new Set([\n    // \"a\",\n    \"altGlyph\",\n    \"altGlyphDef\",\n    \"altGlyphItem\",\n    \"animate\",\n    \"animateColor\",\n    \"animateMotion\",\n    \"animateTransform\",\n    \"circle\",\n    \"clipPath\",\n    \"color-profile\",\n    \"cursor\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"feBlend\",\n    \"feColorMatrix\",\n    \"feComponentTransfer\",\n    \"feComposite\",\n    \"feConvolveMatrix\",\n    \"feDiffuseLighting\",\n    \"feDisplacementMap\",\n    \"feDistantLight\",\n    \"feFlood\",\n    \"feFuncA\",\n    \"feFuncB\",\n    \"feFuncG\",\n    \"feFuncR\",\n    \"feGaussianBlur\",\n    \"feImage\",\n    \"feMerge\",\n    \"feMergeNode\",\n    \"feMorphology\",\n    \"feOffset\",\n    \"fePointLight\",\n    \"feSpecularLighting\",\n    \"feSpotLight\",\n    \"feTile\",\n    \"feTurbulence\",\n    \"filter\",\n    \"font\",\n    \"font-face\",\n    \"font-face-format\",\n    \"font-face-name\",\n    \"font-face-src\",\n    \"font-face-uri\",\n    \"foreignObject\",\n    \"g\",\n    \"glyph\",\n    \"glyphRef\",\n    \"hkern\",\n    \"image\",\n    \"line\",\n    \"linearGradient\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"missing-glyph\",\n    \"mpath\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"radialGradient\",\n    \"rect\",\n    // \"script\",\n    \"set\",\n    \"stop\",\n    // \"style\",\n    \"svg\",\n    \"switch\",\n    \"symbol\",\n    \"text\",\n    \"textPath\",\n    // \"title\",\n    \"tref\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n    \"vkern\"\n]);\nconst SVGNamespace = {\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\"\n};\nvar VoidElements = [\n    \"area\",\n    \"base\",\n    \"br\",\n    \"col\",\n    \"embed\",\n    \"hr\",\n    \"img\",\n    \"input\",\n    \"keygen\",\n    \"link\",\n    \"menuitem\",\n    \"meta\",\n    \"param\",\n    \"source\",\n    \"track\",\n    \"wbr\"\n];\nconst reservedNameSpaces = new Set([\n    \"class\",\n    \"on\",\n    \"oncapture\",\n    \"style\",\n    \"use\",\n    \"prop\",\n    \"attr\"\n]);\nconst nonSpreadNameSpaces = new Set([\n    \"class\",\n    \"style\",\n    \"use\",\n    \"prop\",\n    \"attr\"\n]);\nfunction getConfig(path) {\n    return path.hub.file.metadata.config;\n}\nconst getRendererConfig = (path, renderer)=>{\n    const config = getConfig(path);\n    return config?.renderers?.find((r)=>r.name === renderer) ?? config;\n};\nfunction registerImportMethod(path, name, moduleName) {\n    const imports = path.scope.getProgramParent().data.imports || (path.scope.getProgramParent().data.imports = new Map());\n    moduleName = moduleName || getConfig(path).moduleName;\n    if (!imports.has(`${moduleName}:${name}`)) {\n        let id = helperModuleImports.addNamed(path, name, moduleName, {\n            nameHint: `_$${name}`\n        });\n        imports.set(`${moduleName}:${name}`, id);\n        return id;\n    } else {\n        let iden = imports.get(`${moduleName}:${name}`);\n        // the cloning is required to play well with babel-preset-env which is\n        // transpiling import as we add them and using the same identifier causes\n        // problems with the multiple identifiers of the same thing\n        return t__namespace.cloneNode(iden);\n    }\n}\nfunction jsxElementNameToString(node) {\n    if (t__namespace.isJSXMemberExpression(node)) return `${jsxElementNameToString(node.object)}.${node.property.name}`;\n    if (t__namespace.isJSXIdentifier(node) || t__namespace.isIdentifier(node)) return node.name;\n    return `${node.namespace.name}:${node.name.name}`;\n}\nfunction getTagName(tag) {\n    const jsxName = tag.openingElement.name;\n    return jsxElementNameToString(jsxName);\n}\nfunction isComponent(tagName) {\n    return tagName[0] && tagName[0].toLowerCase() !== tagName[0] || tagName.includes(\".\") || /[^a-zA-Z]/.test(tagName[0]);\n}\nfunction isDynamic(path, { checkMember, checkTags, checkCallExpressions = true, native }) {\n    const config = getConfig(path);\n    if (config.generate === \"ssr\" && native) {\n        checkMember = false;\n        checkCallExpressions = false;\n    }\n    const expr = path.node;\n    if (t__namespace.isFunction(expr)) return false;\n    if (expr.leadingComments && expr.leadingComments[0] && expr.leadingComments[0].value.trim() === config.staticMarker) {\n        expr.leadingComments.shift();\n        return false;\n    }\n    if (checkCallExpressions && (t__namespace.isCallExpression(expr) || t__namespace.isOptionalCallExpression(expr)) || checkMember && (t__namespace.isMemberExpression(expr) || t__namespace.isOptionalMemberExpression(expr) || t__namespace.isSpreadElement(expr) || t__namespace.isBinaryExpression(expr) && expr.operator === \"in\") || checkTags && (t__namespace.isJSXElement(expr) || t__namespace.isJSXFragment(expr))) return true;\n    let dynamic;\n    path.traverse({\n        Function (p) {\n            if (t__namespace.isObjectMethod(p.node) && p.node.computed) dynamic = isDynamic(p.get(\"key\"), {\n                checkMember,\n                checkTags,\n                checkCallExpressions,\n                native\n            });\n            p.skip();\n        },\n        CallExpression (p) {\n            checkCallExpressions && (dynamic = true) && p.stop();\n        },\n        OptionalCallExpression (p) {\n            checkCallExpressions && (dynamic = true) && p.stop();\n        },\n        MemberExpression (p) {\n            checkMember && (dynamic = true) && p.stop();\n        },\n        OptionalMemberExpression (p) {\n            checkMember && (dynamic = true) && p.stop();\n        },\n        SpreadElement (p) {\n            checkMember && (dynamic = true) && p.stop();\n        },\n        BinaryExpression (p) {\n            checkMember && p.node.operator === \"in\" && (dynamic = true) && p.stop();\n        },\n        JSXElement (p) {\n            checkTags ? (dynamic = true, p.stop()) : p.skip();\n        },\n        JSXFragment (p) {\n            checkTags ? (dynamic = true, p.stop()) : p.skip();\n        }\n    });\n    return dynamic;\n}\nfunction getStaticExpression(path) {\n    const node = path.node;\n    let value, type;\n    return t__namespace.isJSXExpressionContainer(node) && t__namespace.isJSXElement(path.parent) && !isComponent(getTagName(path.parent)) && !t__namespace.isSequenceExpression(node.expression) && (value = path.get(\"expression\").evaluate().value) !== undefined && ((type = typeof value) === \"string\" || type === \"number\") && value;\n}\n// remove unnecessary JSX Text nodes\nfunction filterChildren(children) {\n    return children.filter(({ node: child })=>!(t__namespace.isJSXExpressionContainer(child) && t__namespace.isJSXEmptyExpression(child.expression)) && (!t__namespace.isJSXText(child) || !/^[\\r\\n]\\s*$/.test(child.extra.raw)));\n}\nfunction checkLength(children) {\n    let i = 0;\n    children.forEach((path)=>{\n        const child = path.node;\n        !(t__namespace.isJSXExpressionContainer(child) && t__namespace.isJSXEmptyExpression(child.expression)) && (!t__namespace.isJSXText(child) || !/^\\s*$/.test(child.extra.raw) || /^ *$/.test(child.extra.raw)) && i++;\n    });\n    return i > 1;\n}\nfunction trimWhitespace(text) {\n    text = text.replace(/\\r/g, \"\");\n    if (/\\n/g.test(text)) text = text.split(\"\\n\").map((t, i)=>i ? t.replace(/^\\s*/g, \"\") : t).filter((s)=>!/^\\s*$/.test(s)).join(\" \");\n    return text.replace(/\\s+/g, \" \");\n}\nfunction toEventName(name) {\n    return name.slice(2).toLowerCase();\n}\nfunction toPropertyName(name) {\n    return name.toLowerCase().replace(/-([a-z])/g, (_, w)=>w.toUpperCase());\n}\nfunction wrappedByText(list, startIndex) {\n    let index = startIndex, wrapped;\n    while(--index >= 0){\n        const node = list[index];\n        if (!node) continue;\n        if (node.text) {\n            wrapped = true;\n            break;\n        }\n        if (node.id) return false;\n    }\n    if (!wrapped) return false;\n    index = startIndex;\n    while(++index < list.length){\n        const node = list[index];\n        if (!node) continue;\n        if (node.text) return true;\n        if (node.id) return false;\n    }\n    return false;\n}\nfunction transformCondition(path, inline, deep) {\n    const config = getConfig(path);\n    const expr = path.node;\n    const memo = registerImportMethod(path, config.memoWrapper);\n    let dTest, cond, id;\n    if (t__namespace.isConditionalExpression(expr) && (isDynamic(path.get(\"consequent\"), {\n        checkTags: true\n    }) || isDynamic(path.get(\"alternate\"), {\n        checkTags: true\n    }))) {\n        dTest = isDynamic(path.get(\"test\"), {\n            checkMember: true\n        });\n        if (dTest) {\n            cond = expr.test;\n            if (!t__namespace.isBinaryExpression(cond)) cond = t__namespace.unaryExpression(\"!\", t__namespace.unaryExpression(\"!\", cond, true), true);\n            id = inline ? t__namespace.callExpression(memo, [\n                t__namespace.arrowFunctionExpression([], cond)\n            ]) : path.scope.generateUidIdentifier(\"_c$\");\n            expr.test = t__namespace.callExpression(id, []);\n            if (t__namespace.isConditionalExpression(expr.consequent) || t__namespace.isLogicalExpression(expr.consequent)) expr.consequent = transformCondition(path.get(\"consequent\"), inline, true);\n            if (t__namespace.isConditionalExpression(expr.alternate) || t__namespace.isLogicalExpression(expr.alternate)) expr.alternate = transformCondition(path.get(\"alternate\"), inline, true);\n        }\n    } else if (t__namespace.isLogicalExpression(expr)) {\n        let nextPath = path;\n        // handle top-level or, ie cond && <A/> || <B/>\n        while(nextPath.node.operator !== \"&&\" && t__namespace.isLogicalExpression(nextPath.node.left))nextPath = nextPath.get(\"left\");\n        nextPath.node.operator === \"&&\" && isDynamic(nextPath.get(\"right\"), {\n            checkTags: true\n        }) && (dTest = isDynamic(nextPath.get(\"left\"), {\n            checkMember: true\n        }));\n        if (dTest) {\n            cond = nextPath.node.left;\n            if (!t__namespace.isBinaryExpression(cond)) cond = t__namespace.unaryExpression(\"!\", t__namespace.unaryExpression(\"!\", cond, true), true);\n            id = inline ? t__namespace.callExpression(memo, [\n                t__namespace.arrowFunctionExpression([], cond)\n            ]) : path.scope.generateUidIdentifier(\"_c$\");\n            nextPath.node.left = t__namespace.callExpression(id, []);\n        }\n    }\n    if (dTest && !inline) {\n        const statements = [\n            t__namespace.variableDeclaration(\"const\", [\n                t__namespace.variableDeclarator(id, config.memoWrapper ? t__namespace.callExpression(memo, [\n                    t__namespace.arrowFunctionExpression([], cond)\n                ]) : t__namespace.arrowFunctionExpression([], cond))\n            ]),\n            t__namespace.arrowFunctionExpression([], expr)\n        ];\n        return deep ? t__namespace.callExpression(t__namespace.arrowFunctionExpression([], t__namespace.blockStatement([\n            statements[0],\n            t__namespace.returnStatement(statements[1])\n        ])), []) : statements;\n    }\n    return deep ? expr : t__namespace.arrowFunctionExpression([], expr);\n}\nfunction escapeBackticks(value) {\n    return value.replace(/`/g, \"\\\\`\");\n}\nfunction escapeHTML(s, attr) {\n    if (typeof s !== \"string\") return s;\n    const delim = attr ? '\"' : \"<\";\n    const escDelim = attr ? \"&quot;\" : \"&lt;\";\n    let iDelim = s.indexOf(delim);\n    let iAmp = s.indexOf(\"&\");\n    if (iDelim < 0 && iAmp < 0) return s;\n    let left = 0, out = \"\";\n    while(iDelim >= 0 && iAmp >= 0)if (iDelim < iAmp) {\n        if (left < iDelim) out += s.substring(left, iDelim);\n        out += escDelim;\n        left = iDelim + 1;\n        iDelim = s.indexOf(delim, left);\n    } else {\n        if (left < iAmp) out += s.substring(left, iAmp);\n        out += \"&amp;\";\n        left = iAmp + 1;\n        iAmp = s.indexOf(\"&\", left);\n    }\n    if (iDelim >= 0) do {\n        if (left < iDelim) out += s.substring(left, iDelim);\n        out += escDelim;\n        left = iDelim + 1;\n        iDelim = s.indexOf(delim, left);\n    }while (iDelim >= 0);\n    else while(iAmp >= 0){\n        if (left < iAmp) out += s.substring(left, iAmp);\n        out += \"&amp;\";\n        left = iAmp + 1;\n        iAmp = s.indexOf(\"&\", left);\n    }\n    return left < s.length ? out + s.substring(left) : out;\n}\nfunction convertJSXIdentifier(node) {\n    if (t__namespace.isJSXIdentifier(node)) {\n        if (t__namespace.isValidIdentifier(node.name)) node.type = \"Identifier\";\n        else return t__namespace.stringLiteral(node.name);\n    } else if (t__namespace.isJSXMemberExpression(node)) return t__namespace.memberExpression(convertJSXIdentifier(node.object), convertJSXIdentifier(node.property));\n    else if (t__namespace.isJSXNamespacedName(node)) return t__namespace.stringLiteral(`${node.namespace.name}:${node.name.name}`);\n    return node;\n}\nfunction canNativeSpread(key, { checkNameSpaces } = {}) {\n    if (checkNameSpaces && key.includes(\":\") && nonSpreadNameSpaces.has(key.split(\":\")[0])) return false;\n    // TODO: figure out how to detect definitely function ref\n    if (key === \"ref\") return false;\n    return true;\n}\nconst InlineElements = [\n    \"a\",\n    \"abbr\",\n    \"acronym\",\n    \"b\",\n    \"bdi\",\n    \"bdo\",\n    \"big\",\n    \"br\",\n    \"button\",\n    \"canvas\",\n    \"cite\",\n    \"code\",\n    \"data\",\n    \"datalist\",\n    \"del\",\n    \"dfn\",\n    \"em\",\n    \"embed\",\n    \"i\",\n    \"iframe\",\n    \"img\",\n    \"input\",\n    \"ins\",\n    \"kbd\",\n    \"label\",\n    \"map\",\n    \"mark\",\n    \"meter\",\n    \"noscript\",\n    \"object\",\n    \"output\",\n    \"picture\",\n    \"progress\",\n    \"q\",\n    \"ruby\",\n    \"s\",\n    \"samp\",\n    \"script\",\n    \"select\",\n    \"slot\",\n    \"small\",\n    \"span\",\n    \"strong\",\n    \"sub\",\n    \"sup\",\n    \"svg\",\n    \"template\",\n    \"textarea\",\n    \"time\",\n    \"u\",\n    \"tt\",\n    \"var\",\n    \"video\"\n];\nconst BlockElements = [\n    \"address\",\n    \"article\",\n    \"aside\",\n    \"blockquote\",\n    \"dd\",\n    \"details\",\n    \"dialog\",\n    \"div\",\n    \"dl\",\n    \"dt\",\n    \"fieldset\",\n    \"figcaption\",\n    \"figure\",\n    \"footer\",\n    \"form\",\n    \"h1\",\n    \"h2\",\n    \"h3\",\n    \"h4\",\n    \"h5\",\n    \"h6\",\n    \"header\",\n    \"hgroup\",\n    \"hr\",\n    \"li\",\n    \"main\",\n    \"menu\",\n    \"nav\",\n    \"ol\",\n    \"p\",\n    \"pre\",\n    \"section\",\n    \"table\",\n    \"ul\"\n];\nconst alwaysClose = [\n    \"title\",\n    \"style\",\n    \"a\",\n    \"strong\",\n    \"small\",\n    \"b\",\n    \"u\",\n    \"i\",\n    \"em\",\n    \"s\",\n    \"code\",\n    \"object\",\n    \"table\",\n    \"button\",\n    \"textarea\",\n    \"select\",\n    \"iframe\",\n    \"script\",\n    \"template\",\n    \"fieldset\"\n];\nfunction transformElement$3(path, info) {\n    let tagName = getTagName(path.node), config = getConfig(path), wrapSVG = info.topLevel && tagName != \"svg\" && SVGElements.has(tagName), voidTag = VoidElements.indexOf(tagName) > -1, isCustomElement = tagName.indexOf(\"-\") > -1, results = {\n        template: `<${tagName}`,\n        declarations: [],\n        exprs: [],\n        dynamics: [],\n        postExprs: [],\n        isSVG: wrapSVG,\n        hasCustomElement: isCustomElement,\n        tagName,\n        renderer: \"dom\"\n    };\n    if (config.hydratable && (tagName === \"html\" || tagName === \"head\" || tagName === \"body\")) {\n        results.skipTemplate = true;\n        if (tagName === \"head\" && info.topLevel) {\n            const createComponent = registerImportMethod(path, \"createComponent\", getRendererConfig(path, \"dom\").moduleName);\n            const NoHydration = registerImportMethod(path, \"NoHydration\", getRendererConfig(path, \"dom\").moduleName);\n            results.exprs.push(t__namespace.expressionStatement(t__namespace.callExpression(createComponent, [\n                NoHydration,\n                t__namespace.objectExpression([])\n            ])));\n            return results;\n        }\n    }\n    if (wrapSVG) results.template = \"<svg>\" + results.template;\n    if (!info.skipId) results.id = path.scope.generateUidIdentifier(\"el$\");\n    transformAttributes$2(path, results);\n    if (config.contextToCustomElements && (tagName === \"slot\" || isCustomElement)) contextToCustomElement(path, results);\n    results.template += \">\";\n    if (!voidTag) {\n        // always close tags can still be skipped if they have no closing parents and are the last element\n        const toBeClosed = !info.lastElement || info.toBeClosed && (!config.omitNestedClosingTags || info.toBeClosed.has(tagName));\n        if (toBeClosed) {\n            results.toBeClosed = new Set(info.toBeClosed || alwaysClose);\n            results.toBeClosed.add(tagName);\n            if (InlineElements.includes(tagName)) BlockElements.forEach((i)=>results.toBeClosed.add(i));\n        } else results.toBeClosed = info.toBeClosed;\n        transformChildren$2(path, results, config);\n        if (toBeClosed) results.template += `</${tagName}>`;\n    }\n    if (info.topLevel && config.hydratable && results.hasHydratableEvent) {\n        let runHydrationEvents = registerImportMethod(path, \"runHydrationEvents\", getRendererConfig(path, \"dom\").moduleName);\n        results.postExprs.push(t__namespace.expressionStatement(t__namespace.callExpression(runHydrationEvents, [])));\n    }\n    if (wrapSVG) results.template += \"</svg>\";\n    return results;\n}\nfunction setAttr$2(path, elem, name, value, { isSVG, dynamic, prevId, isCE, tagName }) {\n    // pull out namespace\n    const config = getConfig(path);\n    let parts, namespace;\n    if ((parts = name.split(\":\")) && parts[1] && reservedNameSpaces.has(parts[0])) {\n        name = parts[1];\n        namespace = parts[0];\n    }\n    // TODO: consider moving to a helper\n    if (namespace === \"style\") {\n        if (t__namespace.isStringLiteral(value)) return t__namespace.callExpression(t__namespace.memberExpression(t__namespace.memberExpression(elem, t__namespace.identifier(\"style\")), t__namespace.identifier(\"setProperty\")), [\n            t__namespace.stringLiteral(name),\n            value\n        ]);\n        if (t__namespace.isNullLiteral(value) || t__namespace.isIdentifier(value, {\n            name: \"undefined\"\n        })) return t__namespace.callExpression(t__namespace.memberExpression(t__namespace.memberExpression(elem, t__namespace.identifier(\"style\")), t__namespace.identifier(\"removeProperty\")), [\n            t__namespace.stringLiteral(name)\n        ]);\n        return t__namespace.conditionalExpression(t__namespace.binaryExpression(\"!=\", value, t__namespace.nullLiteral()), t__namespace.callExpression(t__namespace.memberExpression(t__namespace.memberExpression(elem, t__namespace.identifier(\"style\")), t__namespace.identifier(\"setProperty\")), [\n            t__namespace.stringLiteral(name),\n            prevId ? prevId : value\n        ]), t__namespace.callExpression(t__namespace.memberExpression(t__namespace.memberExpression(elem, t__namespace.identifier(\"style\")), t__namespace.identifier(\"removeProperty\")), [\n            t__namespace.stringLiteral(name)\n        ]));\n    }\n    if (namespace === \"class\") return t__namespace.callExpression(t__namespace.memberExpression(t__namespace.memberExpression(elem, t__namespace.identifier(\"classList\")), t__namespace.identifier(\"toggle\")), [\n        t__namespace.stringLiteral(name),\n        dynamic ? value : t__namespace.unaryExpression(\"!\", t__namespace.unaryExpression(\"!\", value))\n    ]);\n    if (name === \"style\") return t__namespace.callExpression(registerImportMethod(path, \"style\", getRendererConfig(path, \"dom\").moduleName), prevId ? [\n        elem,\n        value,\n        prevId\n    ] : [\n        elem,\n        value\n    ]);\n    if (!isSVG && name === \"class\") return t__namespace.callExpression(registerImportMethod(path, \"className\", getRendererConfig(path, \"dom\").moduleName), [\n        elem,\n        value\n    ]);\n    if (name === \"classList\") return t__namespace.callExpression(registerImportMethod(path, \"classList\", getRendererConfig(path, \"dom\").moduleName), prevId ? [\n        elem,\n        value,\n        prevId\n    ] : [\n        elem,\n        value\n    ]);\n    if (dynamic && name === \"textContent\") {\n        if (config.hydratable) return t__namespace.callExpression(registerImportMethod(path, \"setProperty\"), [\n            elem,\n            t__namespace.stringLiteral(\"data\"),\n            value\n        ]);\n        return t__namespace.assignmentExpression(\"=\", t__namespace.memberExpression(elem, t__namespace.identifier(\"data\")), value);\n    }\n    const isChildProp = ChildProperties.has(name);\n    const isProp = Properties.has(name);\n    const alias = getPropAlias(name, tagName.toUpperCase());\n    if (namespace !== \"attr\" && (isChildProp || !isSVG && isProp || isCE || namespace === \"prop\")) {\n        if (isCE && !isChildProp && !isProp && namespace !== \"prop\") name = toPropertyName(name);\n        if (config.hydratable && namespace !== \"prop\") return t__namespace.callExpression(registerImportMethod(path, \"setProperty\"), [\n            elem,\n            t__namespace.stringLiteral(name),\n            value\n        ]);\n        return t__namespace.assignmentExpression(\"=\", t__namespace.memberExpression(elem, t__namespace.identifier(alias || name)), value);\n    }\n    let isNameSpaced = name.indexOf(\":\") > -1;\n    name = Aliases[name] || name;\n    !isSVG && (name = name.toLowerCase());\n    const ns = isNameSpaced && SVGNamespace[name.split(\":\")[0]];\n    if (ns) return t__namespace.callExpression(registerImportMethod(path, \"setAttributeNS\", getRendererConfig(path, \"dom\").moduleName), [\n        elem,\n        t__namespace.stringLiteral(ns),\n        t__namespace.stringLiteral(name),\n        value\n    ]);\n    else return t__namespace.callExpression(registerImportMethod(path, \"setAttribute\", getRendererConfig(path, \"dom\").moduleName), [\n        elem,\n        t__namespace.stringLiteral(name),\n        value\n    ]);\n}\nfunction detectResolvableEventHandler(attribute, handler) {\n    while(t__namespace.isIdentifier(handler)){\n        const lookup = attribute.scope.getBinding(handler.name);\n        if (lookup) {\n            if (t__namespace.isVariableDeclarator(lookup.path.node)) handler = lookup.path.node.init;\n            else if (t__namespace.isFunctionDeclaration(lookup.path.node)) return true;\n            else return false;\n        } else return false;\n    }\n    return t__namespace.isFunction(handler);\n}\nfunction transformAttributes$2(path, results) {\n    let elem = results.id, hasHydratableEvent = false, children, spreadExpr, attributes = path.get(\"openingElement\").get(\"attributes\");\n    const tagName = getTagName(path.node), isSVG = SVGElements.has(tagName), isCE = tagName.includes(\"-\"), hasChildren = path.node.children.length > 0, config = getConfig(path);\n    // preprocess spreads\n    if (attributes.some((attribute)=>t__namespace.isJSXSpreadAttribute(attribute.node))) {\n        [attributes, spreadExpr] = processSpreads$1(path, attributes, {\n            elem,\n            isSVG,\n            hasChildren,\n            wrapConditionals: config.wrapConditionals\n        });\n        path.get(\"openingElement\").set(\"attributes\", attributes.map((a)=>a.node));\n        //NOTE: can't be checked at compile time so add to compiled output\n        hasHydratableEvent = true;\n    }\n    // preprocess styles\n    const styleAttribute = path.get(\"openingElement\").get(\"attributes\").find((a)=>a.node.name && a.node.name.name === \"style\" && t__namespace.isJSXExpressionContainer(a.node.value) && t__namespace.isObjectExpression(a.node.value.expression) && !a.node.value.expression.properties.some((p)=>t__namespace.isSpreadElement(p)));\n    if (styleAttribute) {\n        let i = 0, leading = styleAttribute.node.value.expression.leadingComments;\n        styleAttribute.node.value.expression.properties.slice().forEach((p, index)=>{\n            if (!p.computed) {\n                if (leading) p.value.leadingComments = leading;\n                path.get(\"openingElement\").node.attributes.splice(styleAttribute.key + ++i, 0, t__namespace.JSXAttribute(t__namespace.JSXNamespacedName(t__namespace.JSXIdentifier(\"style\"), t__namespace.JSXIdentifier(t__namespace.isIdentifier(p.key) ? p.key.name : p.key.value)), t__namespace.JSXExpressionContainer(p.value)));\n                styleAttribute.node.value.expression.properties.splice(index - i - 1, 1);\n            }\n        });\n        if (!styleAttribute.node.value.expression.properties.length) path.get(\"openingElement\").node.attributes.splice(styleAttribute.key, 1);\n    }\n    // preprocess classList\n    attributes = path.get(\"openingElement\").get(\"attributes\");\n    const classListAttribute = attributes.find((a)=>a.node.name && a.node.name.name === \"classList\" && t__namespace.isJSXExpressionContainer(a.node.value) && t__namespace.isObjectExpression(a.node.value.expression) && !a.node.value.expression.properties.some((p)=>t__namespace.isSpreadElement(p) || p.computed || t__namespace.isStringLiteral(p.key) && (p.key.value.includes(\" \") || p.key.value.includes(\":\"))));\n    if (classListAttribute) {\n        let i = 0, leading = classListAttribute.node.value.expression.leadingComments, classListProperties = classListAttribute.get(\"value\").get(\"expression\").get(\"properties\");\n        classListProperties.slice().forEach((propPath, index)=>{\n            const p = propPath.node;\n            const { confident, value: computed } = propPath.get(\"value\").evaluate();\n            if (leading) p.value.leadingComments = leading;\n            if (!confident) path.get(\"openingElement\").node.attributes.splice(classListAttribute.key + ++i, 0, t__namespace.JSXAttribute(t__namespace.JSXNamespacedName(t__namespace.JSXIdentifier(\"class\"), t__namespace.JSXIdentifier(t__namespace.isIdentifier(p.key) ? p.key.name : p.key.value)), t__namespace.JSXExpressionContainer(p.value)));\n            else if (computed) path.get(\"openingElement\").node.attributes.splice(classListAttribute.key + ++i, 0, t__namespace.JSXAttribute(t__namespace.JSXIdentifier(\"class\"), t__namespace.stringLiteral(t__namespace.isIdentifier(p.key) ? p.key.name : p.key.value)));\n            classListProperties.splice(index - i - 1, 1);\n        });\n        if (!classListProperties.length) path.get(\"openingElement\").node.attributes.splice(classListAttribute.key, 1);\n    }\n    // combine class properties\n    attributes = path.get(\"openingElement\").get(\"attributes\");\n    const classAttributes = attributes.filter((a)=>a.node.name && (a.node.name.name === \"class\" || a.node.name.name === \"className\"));\n    if (classAttributes.length > 1) {\n        const first = classAttributes[0].node, values = [], quasis = [\n            t__namespace.TemplateElement({\n                raw: \"\"\n            })\n        ];\n        for(let i = 0; i < classAttributes.length; i++){\n            const attr = classAttributes[i].node, isLast = i === classAttributes.length - 1;\n            if (!t__namespace.isJSXExpressionContainer(attr.value)) {\n                const prev = quasis.pop();\n                quasis.push(t__namespace.TemplateElement({\n                    raw: (prev ? prev.value.raw : \"\") + `${attr.value.value}` + (isLast ? \"\" : \" \")\n                }));\n            } else {\n                values.push(t__namespace.logicalExpression(\"||\", attr.value.expression, t__namespace.stringLiteral(\"\")));\n                quasis.push(t__namespace.TemplateElement({\n                    raw: isLast ? \"\" : \" \"\n                }));\n            }\n            i && attributes.splice(attributes.indexOf(classAttributes[i]), 1);\n        }\n        if (values.length) first.value = t__namespace.JSXExpressionContainer(t__namespace.TemplateLiteral(quasis, values));\n        else first.value = t__namespace.stringLiteral(quasis[0].value.raw);\n    }\n    path.get(\"openingElement\").set(\"attributes\", attributes.map((a)=>a.node));\n    let needsSpacing = true;\n    path.get(\"openingElement\").get(\"attributes\").forEach((attribute)=>{\n        const node = attribute.node;\n        let value = node.value, key = t__namespace.isJSXNamespacedName(node.name) ? `${node.name.namespace.name}:${node.name.name.name}` : node.name.name, reservedNameSpace = t__namespace.isJSXNamespacedName(node.name) && reservedNameSpaces.has(node.name.namespace.name);\n        if (t__namespace.isJSXExpressionContainer(value) && !key.startsWith(\"use:\")) {\n            const evaluated = attribute.get(\"value\").get(\"expression\").evaluate().value;\n            let type;\n            if (evaluated !== undefined && ((type = typeof evaluated) === \"string\" || type === \"number\")) value = t__namespace.stringLiteral(String(evaluated));\n        }\n        if (t__namespace.isJSXNamespacedName(node.name) && reservedNameSpace && !t__namespace.isJSXExpressionContainer(value)) node.value = value = t__namespace.JSXExpressionContainer(value || t__namespace.JSXEmptyExpression());\n        if (t__namespace.isJSXExpressionContainer(value) && (reservedNameSpace || !(t__namespace.isStringLiteral(value.expression) || t__namespace.isNumericLiteral(value.expression)))) {\n            if (key === \"ref\") {\n                // Normalize expressions for non-null and type-as\n                while(t__namespace.isTSNonNullExpression(value.expression) || t__namespace.isTSAsExpression(value.expression))value.expression = value.expression.expression;\n                let binding, isFunction = t__namespace.isIdentifier(value.expression) && (binding = path.scope.getBinding(value.expression.name)) && binding.kind === \"const\";\n                if (!isFunction && t__namespace.isLVal(value.expression)) {\n                    const refIdentifier = path.scope.generateUidIdentifier(\"_ref$\");\n                    results.exprs.unshift(t__namespace.variableDeclaration(\"const\", [\n                        t__namespace.variableDeclarator(refIdentifier, value.expression)\n                    ]), t__namespace.expressionStatement(t__namespace.conditionalExpression(t__namespace.binaryExpression(\"===\", t__namespace.unaryExpression(\"typeof\", refIdentifier), t__namespace.stringLiteral(\"function\")), t__namespace.callExpression(registerImportMethod(path, \"use\", getRendererConfig(path, \"dom\").moduleName), [\n                        refIdentifier,\n                        elem\n                    ]), t__namespace.assignmentExpression(\"=\", value.expression, elem))));\n                } else if (isFunction || t__namespace.isFunction(value.expression)) results.exprs.unshift(t__namespace.expressionStatement(t__namespace.callExpression(registerImportMethod(path, \"use\", getRendererConfig(path, \"dom\").moduleName), [\n                    value.expression,\n                    elem\n                ])));\n                else if (t__namespace.isCallExpression(value.expression)) {\n                    const refIdentifier = path.scope.generateUidIdentifier(\"_ref$\");\n                    results.exprs.unshift(t__namespace.variableDeclaration(\"const\", [\n                        t__namespace.variableDeclarator(refIdentifier, value.expression)\n                    ]), t__namespace.expressionStatement(t__namespace.logicalExpression(\"&&\", t__namespace.binaryExpression(\"===\", t__namespace.unaryExpression(\"typeof\", refIdentifier), t__namespace.stringLiteral(\"function\")), t__namespace.callExpression(registerImportMethod(path, \"use\", getRendererConfig(path, \"dom\").moduleName), [\n                        refIdentifier,\n                        elem\n                    ]))));\n                }\n            } else if (key.startsWith(\"use:\")) {\n                // Some trick to treat JSXIdentifier as Identifier\n                node.name.name.type = \"Identifier\";\n                results.exprs.unshift(t__namespace.expressionStatement(t__namespace.callExpression(registerImportMethod(path, \"use\", getRendererConfig(path, \"dom\").moduleName), [\n                    node.name.name,\n                    elem,\n                    t__namespace.arrowFunctionExpression([], t__namespace.isJSXEmptyExpression(value.expression) ? t__namespace.booleanLiteral(true) : value.expression)\n                ])));\n            } else if (key === \"children\") children = value;\n            else if (key.startsWith(\"on\")) {\n                const ev = toEventName(key);\n                if (key.startsWith(\"on:\") || key.startsWith(\"oncapture:\")) {\n                    const listenerOptions = [\n                        t__namespace.stringLiteral(key.split(\":\")[1]),\n                        value.expression\n                    ];\n                    results.exprs.push(t__namespace.expressionStatement(t__namespace.callExpression(t__namespace.memberExpression(elem, t__namespace.identifier(\"addEventListener\")), key.startsWith(\"oncapture:\") ? listenerOptions.concat(t__namespace.booleanLiteral(true)) : listenerOptions)));\n                } else if (config.delegateEvents && (DelegatedEvents.has(ev) || config.delegatedEvents.indexOf(ev) !== -1)) {\n                    // can only hydrate delegated events\n                    hasHydratableEvent = true;\n                    const events = attribute.scope.getProgramParent().data.events || (attribute.scope.getProgramParent().data.events = new Set());\n                    events.add(ev);\n                    let handler = value.expression;\n                    const resolveable = detectResolvableEventHandler(attribute, handler);\n                    if (t__namespace.isArrayExpression(handler)) {\n                        if (handler.elements.length > 1) results.exprs.unshift(t__namespace.expressionStatement(t__namespace.assignmentExpression(\"=\", t__namespace.memberExpression(elem, t__namespace.identifier(`$$${ev}Data`)), handler.elements[1])));\n                        handler = handler.elements[0];\n                        results.exprs.unshift(t__namespace.expressionStatement(t__namespace.assignmentExpression(\"=\", t__namespace.memberExpression(elem, t__namespace.identifier(`$$${ev}`)), handler)));\n                    } else if (t__namespace.isFunction(handler) || resolveable) results.exprs.unshift(t__namespace.expressionStatement(t__namespace.assignmentExpression(\"=\", t__namespace.memberExpression(elem, t__namespace.identifier(`$$${ev}`)), handler)));\n                    else results.exprs.unshift(t__namespace.expressionStatement(t__namespace.callExpression(registerImportMethod(path, \"addEventListener\", getRendererConfig(path, \"dom\").moduleName), [\n                        elem,\n                        t__namespace.stringLiteral(ev),\n                        handler,\n                        t__namespace.booleanLiteral(true)\n                    ])));\n                } else {\n                    let handler = value.expression;\n                    const resolveable = detectResolvableEventHandler(attribute, handler);\n                    if (t__namespace.isArrayExpression(handler)) {\n                        if (handler.elements.length > 1) handler = t__namespace.arrowFunctionExpression([\n                            t__namespace.identifier(\"e\")\n                        ], t__namespace.callExpression(handler.elements[0], [\n                            handler.elements[1],\n                            t__namespace.identifier(\"e\")\n                        ]));\n                        else handler = handler.elements[0];\n                        results.exprs.unshift(t__namespace.expressionStatement(t__namespace.callExpression(t__namespace.memberExpression(elem, t__namespace.identifier(\"addEventListener\")), [\n                            t__namespace.stringLiteral(ev),\n                            handler\n                        ])));\n                    } else if (t__namespace.isFunction(handler) || resolveable) results.exprs.unshift(t__namespace.expressionStatement(t__namespace.callExpression(t__namespace.memberExpression(elem, t__namespace.identifier(\"addEventListener\")), [\n                        t__namespace.stringLiteral(ev),\n                        handler\n                    ])));\n                    else results.exprs.unshift(t__namespace.expressionStatement(t__namespace.callExpression(registerImportMethod(path, \"addEventListener\", getRendererConfig(path, \"dom\").moduleName), [\n                        elem,\n                        t__namespace.stringLiteral(ev),\n                        handler\n                    ])));\n                }\n            } else if (config.effectWrapper && (isDynamic(attribute.get(\"value\").get(\"expression\"), {\n                checkMember: true\n            }) || (key === \"classList\" || key === \"style\") && !attribute.get(\"value\").get(\"expression\").evaluate().confident)) {\n                let nextElem = elem;\n                if (key === \"value\" || key === \"checked\") {\n                    const effectWrapperId = registerImportMethod(path, config.effectWrapper);\n                    results.postExprs.push(t__namespace.expressionStatement(t__namespace.callExpression(effectWrapperId, [\n                        t__namespace.arrowFunctionExpression([], setAttr$2(path, elem, key, value.expression, {\n                            tagName,\n                            isSVG,\n                            isCE\n                        }))\n                    ])));\n                    return;\n                }\n                if (key === \"textContent\") {\n                    nextElem = attribute.scope.generateUidIdentifier(\"el$\");\n                    children = t__namespace.JSXText(\" \");\n                    children.extra = {\n                        raw: \" \",\n                        rawValue: \" \"\n                    };\n                    results.declarations.push(t__namespace.variableDeclarator(nextElem, t__namespace.memberExpression(elem, t__namespace.identifier(\"firstChild\"))));\n                }\n                results.dynamics.push({\n                    elem: nextElem,\n                    key,\n                    value: value.expression,\n                    isSVG,\n                    isCE,\n                    tagName\n                });\n            } else results.exprs.push(t__namespace.expressionStatement(setAttr$2(attribute, elem, key, value.expression, {\n                isSVG,\n                isCE,\n                tagName\n            })));\n        } else {\n            if (config.hydratable && key === \"$ServerOnly\") {\n                results.skipTemplate = true;\n                return;\n            }\n            if (t__namespace.isJSXExpressionContainer(value)) value = value.expression;\n            key = Aliases[key] || key;\n            if (value && ChildProperties.has(key)) results.exprs.push(t__namespace.expressionStatement(setAttr$2(attribute, elem, key, value, {\n                isSVG,\n                isCE,\n                tagName\n            })));\n            else {\n                !isSVG && (key = key.toLowerCase());\n                results.template += `${needsSpacing ? \" \" : \"\"}${key}`;\n                if (!value) {\n                    needsSpacing = true;\n                    return;\n                }\n                let text = value.value;\n                let needsQuoting = false;\n                if (key === \"style\" || key === \"class\") {\n                    text = trimWhitespace(text);\n                    if (key === \"style\") text = text.replace(/; /g, \";\").replace(/: /g, \":\");\n                }\n                if (!text.length) {\n                    needsSpacing = false;\n                    results.template += `=\"\"`;\n                    return;\n                }\n                for(let i = 0, len = text.length; i < len; i++){\n                    let char = text[i];\n                    if (char === \"'\" || char === '\"' || char === \" \" || char === \"\t\" || char === \"\\n\" || char === \"\\r\" || char === \"`\" || char === \"=\" || char === \"<\" || char === \">\") needsQuoting = true;\n                }\n                if (needsQuoting) {\n                    needsSpacing = false;\n                    results.template += `=\"${escapeBackticks(escapeHTML(text, true))}\"`;\n                } else {\n                    needsSpacing = true;\n                    results.template += `=${escapeBackticks(escapeHTML(text, true))}`;\n                }\n            }\n        }\n    });\n    if (!hasChildren && children) path.node.children.push(children);\n    if (spreadExpr) results.exprs.push(spreadExpr);\n    results.hasHydratableEvent = results.hasHydratableEvent || hasHydratableEvent;\n}\nfunction findLastElement(children, hydratable) {\n    let lastElement = -1, tagName;\n    for(let i = children.length - 1; i >= 0; i--){\n        const node = children[i].node;\n        if (hydratable || t__namespace.isJSXText(node) || getStaticExpression(children[i]) !== false || t__namespace.isJSXElement(node) && (tagName = getTagName(node)) && !isComponent(tagName)) {\n            lastElement = i;\n            break;\n        }\n    }\n    return lastElement;\n}\nfunction transformChildren$2(path, results, config) {\n    let tempPath = results.id && results.id.name, tagName = getTagName(path.node), nextPlaceholder, i = 0;\n    const filteredChildren = filterChildren(path.get(\"children\")), lastElement = findLastElement(filteredChildren, config.hydratable), childNodes = filteredChildren.reduce((memo, child, index)=>{\n        if (child.isJSXFragment()) throw new Error(`Fragments can only be used top level in JSX. Not used under a <${tagName}>.`);\n        const transformed = transformNode(child, {\n            toBeClosed: results.toBeClosed,\n            lastElement: index === lastElement,\n            skipId: !results.id || !detectExpressions(filteredChildren, index, config)\n        });\n        if (!transformed) return memo;\n        const i = memo.length;\n        if (transformed.text && i && memo[i - 1].text) memo[i - 1].template += transformed.template;\n        else memo.push(transformed);\n        return memo;\n    }, []);\n    childNodes.forEach((child, index)=>{\n        if (!child) return;\n        if (child.tagName && child.renderer !== \"dom\") throw new Error(`<${child.tagName}> is not supported in <${tagName}>.\n      Wrap the usage with a component that would render this element, eg. Canvas`);\n        results.template += child.template;\n        if (child.id) {\n            if (child.tagName === \"head\") {\n                if (config.hydratable) {\n                    const createComponent = registerImportMethod(path, \"createComponent\", getRendererConfig(path, \"dom\").moduleName);\n                    const NoHydration = registerImportMethod(path, \"NoHydration\", getRendererConfig(path, \"dom\").moduleName);\n                    results.exprs.push(t__namespace.expressionStatement(t__namespace.callExpression(createComponent, [\n                        NoHydration,\n                        t__namespace.objectExpression([])\n                    ])));\n                }\n                return;\n            }\n            let getNextMatch;\n            if (config.hydratable && tagName === \"html\") getNextMatch = registerImportMethod(path, \"getNextMatch\", getRendererConfig(path, \"dom\").moduleName);\n            const walk = t__namespace.memberExpression(t__namespace.identifier(tempPath), t__namespace.identifier(i === 0 ? \"firstChild\" : \"nextSibling\"));\n            results.declarations.push(t__namespace.variableDeclarator(child.id, config.hydratable && tagName === \"html\" ? t__namespace.callExpression(getNextMatch, [\n                walk,\n                t__namespace.stringLiteral(child.tagName)\n            ]) : walk));\n            results.declarations.push(...child.declarations);\n            results.exprs.push(...child.exprs);\n            results.dynamics.push(...child.dynamics);\n            results.postExprs.push(...child.postExprs);\n            results.hasHydratableEvent = results.hasHydratableEvent || child.hasHydratableEvent;\n            results.hasCustomElement = results.hasCustomElement || child.hasCustomElement;\n            tempPath = child.id.name;\n            nextPlaceholder = null;\n            i++;\n        } else if (child.exprs.length) {\n            let insert = registerImportMethod(path, \"insert\", getRendererConfig(path, \"dom\").moduleName);\n            const multi = checkLength(filteredChildren), markers = config.hydratable && multi;\n            // boxed by textNodes\n            if (markers || wrappedByText(childNodes, index)) {\n                let exprId, contentId;\n                if (markers) tempPath = createPlaceholder(path, results, tempPath, i++, \"$\")[0].name;\n                if (nextPlaceholder) exprId = nextPlaceholder;\n                else [exprId, contentId] = createPlaceholder(path, results, tempPath, i++, markers ? \"/\" : \"\");\n                if (!markers) nextPlaceholder = exprId;\n                results.exprs.push(t__namespace.expressionStatement(t__namespace.callExpression(insert, contentId ? [\n                    results.id,\n                    child.exprs[0],\n                    exprId,\n                    contentId\n                ] : [\n                    results.id,\n                    child.exprs[0],\n                    exprId\n                ])));\n                tempPath = exprId.name;\n            } else if (multi) results.exprs.push(t__namespace.expressionStatement(t__namespace.callExpression(insert, [\n                results.id,\n                child.exprs[0],\n                nextChild$1(childNodes, index) || t__namespace.nullLiteral()\n            ])));\n            else results.exprs.push(t__namespace.expressionStatement(t__namespace.callExpression(insert, [\n                results.id,\n                child.exprs[0]\n            ])));\n        } else nextPlaceholder = null;\n    });\n}\nfunction createPlaceholder(path, results, tempPath, i, char) {\n    const exprId = path.scope.generateUidIdentifier(\"el$\"), config = getConfig(path);\n    let contentId;\n    results.template += `<!${char}>`;\n    if (config.hydratable && char === \"/\") {\n        contentId = path.scope.generateUidIdentifier(\"co$\");\n        results.declarations.push(t__namespace.variableDeclarator(t__namespace.arrayPattern([\n            exprId,\n            contentId\n        ]), t__namespace.callExpression(registerImportMethod(path, \"getNextMarker\", getRendererConfig(path, \"dom\").moduleName), [\n            t__namespace.memberExpression(t__namespace.identifier(tempPath), t__namespace.identifier(\"nextSibling\"))\n        ])));\n    } else results.declarations.push(t__namespace.variableDeclarator(exprId, t__namespace.memberExpression(t__namespace.identifier(tempPath), t__namespace.identifier(i === 0 ? \"firstChild\" : \"nextSibling\"))));\n    return [\n        exprId,\n        contentId\n    ];\n}\nfunction nextChild$1(children, index) {\n    return children[index + 1] && (children[index + 1].id || nextChild$1(children, index + 1));\n}\n// reduce unnecessary refs\nfunction detectExpressions(children, index, config) {\n    if (children[index - 1]) {\n        const node = children[index - 1].node;\n        if (t__namespace.isJSXExpressionContainer(node) && !t__namespace.isJSXEmptyExpression(node.expression) && getStaticExpression(children[index - 1]) === false) return true;\n        let tagName;\n        if (t__namespace.isJSXElement(node) && (tagName = getTagName(node)) && isComponent(tagName)) return true;\n    }\n    for(let i = index; i < children.length; i++){\n        const child = children[i].node;\n        if (t__namespace.isJSXExpressionContainer(child)) {\n            if (!t__namespace.isJSXEmptyExpression(child.expression) && getStaticExpression(children[i]) === false) return true;\n        } else if (t__namespace.isJSXElement(child)) {\n            const tagName = getTagName(child);\n            if (isComponent(tagName)) return true;\n            if (config.contextToCustomElements && (tagName === \"slot\" || tagName.indexOf(\"-\") > -1)) return true;\n            if (child.openingElement.attributes.some((attr)=>t__namespace.isJSXSpreadAttribute(attr) || [\n                    \"textContent\",\n                    \"innerHTML\",\n                    \"innerText\"\n                ].includes(attr.name.name) || attr.name.namespace && attr.name.namespace.name === \"use\" || t__namespace.isJSXExpressionContainer(attr.value) && !(t__namespace.isStringLiteral(attr.value.expression) || t__namespace.isNumericLiteral(attr.value.expression)))) return true;\n            const nextChildren = filterChildren(children[i].get(\"children\"));\n            if (nextChildren.length) {\n                if (detectExpressions(nextChildren, 0, config)) return true;\n            }\n        }\n    }\n}\nfunction contextToCustomElement(path, results) {\n    results.exprs.push(t__namespace.expressionStatement(t__namespace.assignmentExpression(\"=\", t__namespace.memberExpression(results.id, t__namespace.identifier(\"_$owner\")), t__namespace.callExpression(registerImportMethod(path, \"getOwner\", getRendererConfig(path, \"dom\").moduleName), []))));\n}\nfunction processSpreads$1(path, attributes, { elem, isSVG, hasChildren, wrapConditionals }) {\n    // TODO: skip but collect the names of any properties after the last spread to not overwrite them\n    const filteredAttributes = [];\n    const spreadArgs = [];\n    let runningObject = [];\n    let dynamicSpread = false;\n    let firstSpread = false;\n    attributes.forEach((attribute)=>{\n        const node = attribute.node;\n        const key = !t__namespace.isJSXSpreadAttribute(node) && (t__namespace.isJSXNamespacedName(node.name) ? `${node.name.namespace.name}:${node.name.name.name}` : node.name.name);\n        if (t__namespace.isJSXSpreadAttribute(node)) {\n            firstSpread = true;\n            if (runningObject.length) {\n                spreadArgs.push(t__namespace.objectExpression(runningObject));\n                runningObject = [];\n            }\n            spreadArgs.push(isDynamic(attribute.get(\"argument\"), {\n                checkMember: true\n            }) && (dynamicSpread = true) ? t__namespace.isCallExpression(node.argument) && !node.argument.arguments.length && !t__namespace.isCallExpression(node.argument.callee) && !t__namespace.isMemberExpression(node.argument.callee) ? node.argument.callee : t__namespace.arrowFunctionExpression([], node.argument) : node.argument);\n        } else if ((firstSpread || t__namespace.isJSXExpressionContainer(node.value) && isDynamic(attribute.get(\"value\").get(\"expression\"), {\n            checkMember: true\n        })) && canNativeSpread(key, {\n            checkNameSpaces: true\n        })) {\n            const isContainer = t__namespace.isJSXExpressionContainer(node.value);\n            const dynamic = isContainer && isDynamic(attribute.get(\"value\").get(\"expression\"), {\n                checkMember: true\n            });\n            if (dynamic) {\n                const id = convertJSXIdentifier(node.name);\n                let expr = wrapConditionals && (t__namespace.isLogicalExpression(node.value.expression) || t__namespace.isConditionalExpression(node.value.expression)) ? transformCondition(attribute.get(\"value\").get(\"expression\"), true) : t__namespace.arrowFunctionExpression([], node.value.expression);\n                runningObject.push(t__namespace.objectMethod(\"get\", id, [], t__namespace.blockStatement([\n                    t__namespace.returnStatement(expr.body)\n                ]), !t__namespace.isValidIdentifier(key)));\n            } else runningObject.push(t__namespace.objectProperty(t__namespace.stringLiteral(key), isContainer ? node.value.expression : node.value || (Properties.has(key) ? t__namespace.booleanLiteral(true) : t__namespace.stringLiteral(\"\"))));\n        } else filteredAttributes.push(attribute);\n    });\n    if (runningObject.length) spreadArgs.push(t__namespace.objectExpression(runningObject));\n    const props = spreadArgs.length === 1 && !dynamicSpread ? spreadArgs[0] : t__namespace.callExpression(registerImportMethod(path, \"mergeProps\"), spreadArgs);\n    return [\n        filteredAttributes,\n        t__namespace.expressionStatement(t__namespace.callExpression(registerImportMethod(path, \"spread\", getRendererConfig(path, \"dom\").moduleName), [\n            elem,\n            props,\n            t__namespace.booleanLiteral(isSVG),\n            t__namespace.booleanLiteral(hasChildren)\n        ]))\n    ];\n}\nfunction createTemplate$2(path, result, wrap) {\n    const config = getConfig(path);\n    if (result.id) {\n        registerTemplate(path, result);\n        if (!(result.exprs.length || result.dynamics.length || result.postExprs.length) && result.decl.declarations.length === 1) return result.decl.declarations[0].init;\n        else return t__namespace.callExpression(t__namespace.arrowFunctionExpression([], t__namespace.blockStatement([\n            result.decl,\n            ...result.exprs.concat(wrapDynamics$1(path, result.dynamics) || [], result.postExprs || []),\n            t__namespace.returnStatement(result.id)\n        ])), []);\n    }\n    if (wrap && result.dynamic && config.memoWrapper) return t__namespace.callExpression(registerImportMethod(path, config.memoWrapper), [\n        result.exprs[0]\n    ]);\n    return result.exprs[0];\n}\nfunction appendTemplates$1(path, templates) {\n    const declarators = templates.map((template)=>{\n        const tmpl = {\n            cooked: template.template,\n            raw: template.template\n        };\n        return t__namespace.variableDeclarator(template.id, t__namespace.addComment(t__namespace.callExpression(registerImportMethod(path, \"template\", getRendererConfig(path, \"dom\").moduleName), [\n            t__namespace.templateLiteral([\n                t__namespace.templateElement(tmpl, true)\n            ], [])\n        ].concat(template.isSVG || template.isCE ? [\n            t__namespace.booleanLiteral(template.isCE),\n            t__namespace.booleanLiteral(template.isSVG)\n        ] : [])), \"leading\", \"#__PURE__\"));\n    });\n    path.node.body.unshift(t__namespace.variableDeclaration(\"const\", declarators));\n}\nfunction registerTemplate(path, results) {\n    const { hydratable } = getConfig(path);\n    let decl;\n    if (results.template.length) {\n        let templateDef, templateId;\n        if (!results.skipTemplate) {\n            const templates = path.scope.getProgramParent().data.templates || (path.scope.getProgramParent().data.templates = []);\n            if (templateDef = templates.find((t)=>t.template === results.template)) templateId = templateDef.id;\n            else {\n                templateId = path.scope.generateUidIdentifier(\"tmpl$\");\n                templates.push({\n                    id: templateId,\n                    template: results.template,\n                    isSVG: results.isSVG,\n                    isCE: results.hasCustomElement,\n                    renderer: \"dom\"\n                });\n            }\n        }\n        decl = t__namespace.variableDeclarator(results.id, hydratable ? t__namespace.callExpression(registerImportMethod(path, \"getNextElement\", getRendererConfig(path, \"dom\").moduleName), templateId ? [\n            templateId\n        ] : []) : t__namespace.callExpression(templateId, []));\n    }\n    results.declarations.unshift(decl);\n    results.decl = t__namespace.variableDeclaration(\"const\", results.declarations);\n}\nfunction wrapDynamics$1(path, dynamics) {\n    if (!dynamics.length) return;\n    const config = getConfig(path);\n    const effectWrapperId = registerImportMethod(path, config.effectWrapper);\n    if (dynamics.length === 1) {\n        const prevValue = dynamics[0].key === \"classList\" || dynamics[0].key === \"style\" ? t__namespace.identifier(\"_$p\") : undefined;\n        if (dynamics[0].key.startsWith(\"class:\") && !t__namespace.isBooleanLiteral(dynamics[0].value) && !t__namespace.isUnaryExpression(dynamics[0].value)) dynamics[0].value = t__namespace.unaryExpression(\"!\", t__namespace.unaryExpression(\"!\", dynamics[0].value));\n        return t__namespace.expressionStatement(t__namespace.callExpression(effectWrapperId, [\n            t__namespace.arrowFunctionExpression(prevValue ? [\n                prevValue\n            ] : [], setAttr$2(path, dynamics[0].elem, dynamics[0].key, dynamics[0].value, {\n                isSVG: dynamics[0].isSVG,\n                isCE: dynamics[0].isCE,\n                tagName: dynamics[0].tagName,\n                dynamic: true,\n                prevId: prevValue\n            }))\n        ]));\n    }\n    const declarations = [], statements = [], identifiers = [], prevId = t__namespace.identifier(\"_p$\");\n    dynamics.forEach(({ elem, key, value, isSVG, isCE, tagName })=>{\n        const identifier = path.scope.generateUidIdentifier(\"v$\");\n        if (key.startsWith(\"class:\") && !t__namespace.isBooleanLiteral(value) && !t__namespace.isUnaryExpression(value)) value = t__namespace.unaryExpression(\"!\", t__namespace.unaryExpression(\"!\", value));\n        identifiers.push(identifier);\n        declarations.push(t__namespace.variableDeclarator(identifier, value));\n        if (key === \"classList\" || key === \"style\") {\n            const prev = t__namespace.memberExpression(prevId, identifier);\n            statements.push(t__namespace.expressionStatement(t__namespace.assignmentExpression(\"=\", prev, setAttr$2(path, elem, key, identifier, {\n                isSVG,\n                isCE,\n                tagName,\n                dynamic: true,\n                prevId: prev\n            }))));\n        } else {\n            const prev = key.startsWith(\"style:\") ? identifier : undefined;\n            statements.push(t__namespace.expressionStatement(t__namespace.logicalExpression(\"&&\", t__namespace.binaryExpression(\"!==\", identifier, t__namespace.memberExpression(prevId, identifier)), setAttr$2(path, elem, key, t__namespace.assignmentExpression(\"=\", t__namespace.memberExpression(prevId, identifier), identifier), {\n                isSVG,\n                isCE,\n                tagName,\n                dynamic: true,\n                prevId: prev\n            }))));\n        }\n    });\n    return t__namespace.expressionStatement(t__namespace.callExpression(effectWrapperId, [\n        t__namespace.arrowFunctionExpression([\n            prevId\n        ], t__namespace.blockStatement([\n            t__namespace.variableDeclaration(\"const\", declarations),\n            ...statements,\n            t__namespace.returnStatement(prevId)\n        ])),\n        t__namespace.objectExpression(identifiers.map((id)=>t__namespace.objectProperty(id, t__namespace.identifier(\"undefined\"))))\n    ]));\n}\nfunction createTemplate$1(path, result) {\n    if (!result.template) return result.exprs[0];\n    let template, id;\n    if (!Array.isArray(result.template)) template = t__namespace.stringLiteral(result.template);\n    else if (result.template.length === 1) template = t__namespace.stringLiteral(result.template[0]);\n    else {\n        const strings = result.template.map((tmpl)=>t__namespace.stringLiteral(tmpl));\n        template = t__namespace.arrayExpression(strings);\n    }\n    const templates = path.scope.getProgramParent().data.templates || (path.scope.getProgramParent().data.templates = []);\n    const found = templates.find((tmp)=>{\n        if (t__namespace.isArrayExpression(tmp.template) && t__namespace.isArrayExpression(template)) return tmp.template.elements.every((el, i)=>template.elements[i] && el.value === template.elements[i].value);\n        return tmp.template.value === template.value;\n    });\n    if (!found) {\n        id = path.scope.generateUidIdentifier(\"tmpl$\");\n        templates.push({\n            id,\n            template,\n            renderer: \"ssr\"\n        });\n    } else id = found.id;\n    if (result.wontEscape) {\n        if (!Array.isArray(result.template) || result.template.length === 1) return id;\n        else if (Array.isArray(result.template) && result.template.length === 2 && result.templateValues[0].type === \"CallExpression\" && result.templateValues[0].callee.name === \"_$ssrHydrationKey\") // remove unnecessary ssr call when only hydration key is used\n        return t__namespace.binaryExpression(\"+\", t__namespace.binaryExpression(\"+\", t__namespace.memberExpression(id, t__namespace.numericLiteral(0), true), result.templateValues[0]), t__namespace.memberExpression(id, t__namespace.numericLiteral(1), true));\n    }\n    return t__namespace.callExpression(registerImportMethod(path, \"ssr\"), Array.isArray(result.template) && result.template.length > 1 ? [\n        id,\n        ...result.templateValues\n    ] : [\n        id\n    ]);\n}\nfunction appendTemplates(path, templates) {\n    const declarators = templates.map((template)=>{\n        return t__namespace.variableDeclarator(template.id, template.template);\n    });\n    path.node.body.unshift(t__namespace.variableDeclaration(\"const\", declarators));\n}\nfunction appendToTemplate(template, value) {\n    let array;\n    if (Array.isArray(value)) [value, ...array] = value;\n    template[template.length - 1] += value;\n    if (array && array.length) template.push.apply(template, array);\n}\nfunction transformElement$2(path, info) {\n    const config = getConfig(path);\n    // contains spread attributes\n    if (path.node.openingElement.attributes.some((a)=>t__namespace.isJSXSpreadAttribute(a))) return createElement(path, {\n        ...info,\n        ...config\n    });\n    const tagName = getTagName(path.node), voidTag = VoidElements.indexOf(tagName) > -1, results = {\n        template: [\n            `<${tagName}`\n        ],\n        templateValues: [],\n        declarations: [],\n        exprs: [],\n        dynamics: [],\n        tagName,\n        wontEscape: path.node.wontEscape,\n        renderer: \"ssr\"\n    };\n    if (tagName === \"script\" || tagName === \"style\") path.doNotEscape = true;\n    if (info.topLevel && config.hydratable) {\n        if (tagName === \"head\") {\n            registerImportMethod(path, \"NoHydration\");\n            registerImportMethod(path, \"createComponent\");\n            const child = transformElement$2(path, {\n                ...info,\n                topLevel: false\n            });\n            results.template = \"\";\n            results.exprs.push(t__namespace.callExpression(t__namespace.identifier(\"_$createComponent\"), [\n                t__namespace.identifier(\"_$NoHydration\"),\n                t__namespace.objectExpression([\n                    t__namespace.objectMethod(\"get\", t__namespace.identifier(\"children\"), [], t__namespace.blockStatement([\n                        t__namespace.returnStatement(createTemplate$1(path, child))\n                    ]))\n                ])\n            ]));\n            return results;\n        }\n        results.template.push(\"\");\n        results.templateValues.push(t__namespace.callExpression(registerImportMethod(path, \"ssrHydrationKey\"), []));\n    }\n    transformAttributes$1(path, results, {\n        ...config,\n        ...info\n    });\n    appendToTemplate(results.template, \">\");\n    if (!voidTag) {\n        transformChildren$1(path, results, {\n            ...config,\n            ...info\n        });\n        appendToTemplate(results.template, `</${tagName}>`);\n    }\n    return results;\n}\nfunction toAttribute(key, isSVG) {\n    key = Aliases[key] || key;\n    !isSVG && (key = key.toLowerCase());\n    return key;\n}\nfunction setAttr$1(attribute, results, name, value, isSVG) {\n    // strip out namespaces for now, everything at this point is an attribute\n    let parts;\n    if ((parts = name.split(\":\")) && parts[1] && reservedNameSpaces.has(parts[0])) {\n        name = parts[1];\n        parts[0];\n    }\n    name = toAttribute(name, isSVG);\n    const attr = t__namespace.callExpression(registerImportMethod(attribute, \"ssrAttribute\"), [\n        t__namespace.stringLiteral(name),\n        value,\n        t__namespace.booleanLiteral(false)\n    ]);\n    if (results.template[results.template.length - 1].length) {\n        results.template.push(\"\");\n        results.templateValues.push(attr);\n    } else {\n        const last = results.templateValues.length - 1;\n        results.templateValues[last] = t__namespace.binaryExpression(\"+\", results.templateValues[last], attr);\n    }\n}\nfunction escapeExpression(path, expression, attr, escapeLiterals) {\n    if (t__namespace.isStringLiteral(expression) || t__namespace.isNumericLiteral(expression) || t__namespace.isTemplateLiteral(expression) && expression.expressions.length === 0) {\n        if (escapeLiterals) {\n            if (t__namespace.isStringLiteral(expression)) return t__namespace.stringLiteral(escapeHTML(expression.value, attr));\n            else if (t__namespace.isTemplateLiteral(expression)) return t__namespace.stringLiteral(escapeHTML(expression.quasis[0].value.raw, attr));\n        }\n        return expression;\n    } else if (t__namespace.isFunction(expression)) {\n        if (t__namespace.isBlockStatement(expression.body)) expression.body.body = expression.body.body.map((e)=>{\n            if (t__namespace.isReturnStatement(e)) e.argument = escapeExpression(path, e.argument, attr, escapeLiterals);\n            return e;\n        });\n        else expression.body = escapeExpression(path, expression.body, attr, escapeLiterals);\n        return expression;\n    } else if (t__namespace.isTemplateLiteral(expression)) {\n        expression.expressions = expression.expressions.map((e)=>escapeExpression(path, e, attr, escapeLiterals));\n        return expression;\n    } else if (t__namespace.isUnaryExpression(expression)) return expression;\n    else if (t__namespace.isBinaryExpression(expression)) {\n        expression.left = escapeExpression(path, expression.left, attr, escapeLiterals);\n        expression.right = escapeExpression(path, expression.right, attr, escapeLiterals);\n        return expression;\n    } else if (t__namespace.isConditionalExpression(expression)) {\n        expression.consequent = escapeExpression(path, expression.consequent, attr, escapeLiterals);\n        expression.alternate = escapeExpression(path, expression.alternate, attr, escapeLiterals);\n        return expression;\n    } else if (t__namespace.isLogicalExpression(expression)) {\n        expression.right = escapeExpression(path, expression.right, attr, escapeLiterals);\n        if (expression.operator !== \"&&\") expression.left = escapeExpression(path, expression.left, attr, escapeLiterals);\n        return expression;\n    } else if (t__namespace.isCallExpression(expression) && t__namespace.isFunction(expression.callee)) {\n        if (t__namespace.isBlockStatement(expression.callee.body)) expression.callee.body.body = expression.callee.body.body.map((e)=>{\n            if (t__namespace.isReturnStatement(e)) e.argument = escapeExpression(path, e.argument, attr, escapeLiterals);\n            return e;\n        });\n        else expression.callee.body = escapeExpression(path, expression.callee.body, attr, escapeLiterals);\n        return expression;\n    } else if (t__namespace.isJSXElement(expression) && !isComponent(getTagName(expression))) {\n        expression.wontEscape = true;\n        return expression;\n    }\n    return t__namespace.callExpression(registerImportMethod(path, \"escape\"), [\n        expression\n    ].concat(attr ? [\n        t__namespace.booleanLiteral(true)\n    ] : []));\n}\nfunction transformToObject(attrName, attributes, selectedAttributes) {\n    const properties = [];\n    const existingAttribute = attributes.find((a)=>a.node.name.name === attrName);\n    for(let i = 0; i < selectedAttributes.length; i++){\n        const attr = selectedAttributes[i].node;\n        const computed = !t__namespace.isValidIdentifier(attr.name.name.name);\n        if (!computed) attr.name.name.type = \"Identifier\";\n        properties.push(t__namespace.objectProperty(computed ? t__namespace.stringLiteral(attr.name.name.name) : attr.name.name, t__namespace.isJSXExpressionContainer(attr.value) ? attr.value.expression : attr.value));\n        (existingAttribute || i) && attributes.splice(selectedAttributes[i].key, 1);\n    }\n    if (existingAttribute && t__namespace.isJSXExpressionContainer(existingAttribute.node.value) && t__namespace.isObjectExpression(existingAttribute.node.value.expression)) existingAttribute.node.value.expression.properties.push(...properties);\n    else selectedAttributes[0].node = t__namespace.jsxAttribute(t__namespace.jsxIdentifier(attrName), t__namespace.jsxExpressionContainer(t__namespace.objectExpression(properties)));\n}\nfunction normalizeAttributes(path) {\n    const attributes = path.get(\"openingElement\").get(\"attributes\"), styleAttributes = attributes.filter((a)=>t__namespace.isJSXNamespacedName(a.node.name) && a.node.name.namespace.name === \"style\"), classNamespaceAttributes = attributes.filter((a)=>t__namespace.isJSXNamespacedName(a.node.name) && a.node.name.namespace.name === \"class\");\n    if (classNamespaceAttributes.length) transformToObject(\"classList\", attributes, classNamespaceAttributes);\n    const classAttributes = attributes.filter((a)=>a.node.name && (a.node.name.name === \"class\" || a.node.name.name === \"className\" || a.node.name.name === \"classList\"));\n    // combine class propertoes\n    if (classAttributes.length > 1) {\n        const first = classAttributes[0].node, values = [], quasis = [\n            t__namespace.TemplateElement({\n                raw: \"\"\n            })\n        ];\n        for(let i = 0; i < classAttributes.length; i++){\n            const attr = classAttributes[i].node, isLast = i === classAttributes.length - 1;\n            if (!t__namespace.isJSXExpressionContainer(attr.value)) {\n                const prev = quasis.pop();\n                quasis.push(t__namespace.TemplateElement({\n                    raw: (prev ? prev.value.raw : \"\") + (i ? \" \" : \"\") + `${attr.value.value}` + (isLast ? \"\" : \" \")\n                }));\n            } else {\n                let expr = attr.value.expression;\n                if (attr.name.name === \"classList\") {\n                    if (t__namespace.isObjectExpression(expr) && !expr.properties.some((p)=>t__namespace.isSpreadElement(p))) {\n                        transformClasslistObject(path, expr, values, quasis);\n                        i && attributes.splice(attributes.indexOf(classAttributes[i]), 1);\n                        continue;\n                    }\n                    expr = t__namespace.callExpression(registerImportMethod(path, \"ssrClassList\"), [\n                        expr\n                    ]);\n                }\n                values.push(t__namespace.logicalExpression(\"||\", expr, t__namespace.stringLiteral(\"\")));\n                quasis.push(t__namespace.TemplateElement({\n                    raw: isLast ? \"\" : \" \"\n                }));\n            }\n            i && attributes.splice(attributes.indexOf(classAttributes[i]), 1);\n        }\n        first.name = t__namespace.JSXIdentifier(\"class\");\n        first.value = t__namespace.JSXExpressionContainer(t__namespace.TemplateLiteral(quasis, values));\n    }\n    if (styleAttributes.length) transformToObject(\"style\", attributes, styleAttributes);\n    return attributes;\n}\nfunction transformAttributes$1(path, results, info) {\n    const tagName = getTagName(path.node), isSVG = SVGElements.has(tagName), hasChildren = path.node.children.length > 0, attributes = normalizeAttributes(path);\n    let children;\n    attributes.forEach((attribute)=>{\n        const node = attribute.node;\n        let value = node.value, key = t__namespace.isJSXNamespacedName(node.name) ? `${node.name.namespace.name}:${node.name.name.name}` : node.name.name, reservedNameSpace = t__namespace.isJSXNamespacedName(node.name) && reservedNameSpaces.has(node.name.namespace.name);\n        if ((t__namespace.isJSXNamespacedName(node.name) && reservedNameSpace || ChildProperties.has(key)) && !t__namespace.isJSXExpressionContainer(value)) node.value = value = t__namespace.JSXExpressionContainer(value || t__namespace.JSXEmptyExpression());\n        if (t__namespace.isJSXExpressionContainer(value) && (reservedNameSpace || ChildProperties.has(key) || !(t__namespace.isStringLiteral(value.expression) || t__namespace.isNumericLiteral(value.expression) || t__namespace.isBooleanLiteral(value.expression)))) {\n            if (key === \"ref\" || key.startsWith(\"use:\") || key.startsWith(\"prop:\") || key.startsWith(\"on\")) return;\n            else if (ChildProperties.has(key)) {\n                if (info.hydratable && key === \"textContent\" && value && value.expression) value.expression = t__namespace.logicalExpression(\"||\", value.expression, t__namespace.stringLiteral(\" \"));\n                if (key === \"innerHTML\") path.doNotEscape = true;\n                children = value;\n            } else {\n                let doEscape = true;\n                if (BooleanAttributes.has(key)) {\n                    results.template.push(\"\");\n                    const fn = t__namespace.callExpression(registerImportMethod(attribute, \"ssrAttribute\"), [\n                        t__namespace.stringLiteral(key),\n                        value.expression,\n                        t__namespace.booleanLiteral(true)\n                    ]);\n                    results.templateValues.push(fn);\n                    return;\n                }\n                if (key === \"style\") {\n                    if (t__namespace.isJSXExpressionContainer(value) && t__namespace.isObjectExpression(value.expression) && !value.expression.properties.some((p)=>t__namespace.isSpreadElement(p))) {\n                        const props = value.expression.properties.map((p, i)=>t__namespace.binaryExpression(\"+\", t__namespace.stringLiteral((i ? \";\" : \"\") + (t__namespace.isIdentifier(p.key) ? p.key.name : p.key.value) + \":\"), escapeExpression(path, p.value, true, true)));\n                        let res = props[0];\n                        for(let i = 1; i < props.length; i++)res = t__namespace.binaryExpression(\"+\", res, props[i]);\n                        value.expression = res;\n                    } else value.expression = t__namespace.callExpression(registerImportMethod(path, \"ssrStyle\"), [\n                        value.expression\n                    ]);\n                    doEscape = false;\n                }\n                if (key === \"classList\") {\n                    if (t__namespace.isObjectExpression(value.expression) && !value.expression.properties.some((p)=>t__namespace.isSpreadElement(p))) {\n                        const values = [], quasis = [\n                            t__namespace.TemplateElement({\n                                raw: \"\"\n                            })\n                        ];\n                        transformClasslistObject(path, value.expression, values, quasis);\n                        if (!values.length) value.expression = t__namespace.stringLiteral(quasis[0].value.raw);\n                        else if (values.length === 1 && !quasis[0].value.raw && !quasis[1].value.raw) value.expression = values[0];\n                        else value.expression = t__namespace.templateLiteral(quasis, values);\n                    } else value.expression = t__namespace.callExpression(registerImportMethod(path, \"ssrClassList\"), [\n                        value.expression\n                    ]);\n                    key = \"class\";\n                    doEscape = false;\n                }\n                if (doEscape) value.expression = escapeExpression(path, value.expression, true);\n                if (!doEscape || t__namespace.isLiteral(value.expression)) {\n                    key = toAttribute(key, isSVG);\n                    appendToTemplate(results.template, ` ${key}=\"`);\n                    results.template.push(`\"`);\n                    results.templateValues.push(value.expression);\n                } else setAttr$1(attribute, results, key, value.expression, isSVG);\n            }\n        } else {\n            if (key === \"$ServerOnly\") return;\n            if (t__namespace.isJSXExpressionContainer(value)) value = value.expression;\n            key = toAttribute(key, isSVG);\n            const isBoolean = BooleanAttributes.has(key);\n            if (isBoolean && value && value.value !== \"\" && !value.value) return;\n            appendToTemplate(results.template, ` ${key}`);\n            if (!value) return;\n            let text = isBoolean ? \"\" : value.value;\n            if (key === \"style\" || key === \"class\") {\n                text = trimWhitespace(text);\n                if (key === \"style\") text = text.replace(/; /g, \";\").replace(/: /g, \":\");\n            }\n            appendToTemplate(results.template, `=\"${escapeHTML(text, true)}\"`);\n        }\n    });\n    if (!hasChildren && children) path.node.children.push(children);\n}\nfunction transformClasslistObject(path, expr, values, quasis) {\n    expr.properties.forEach((prop, i)=>{\n        const isLast = expr.properties.length - 1 === i;\n        let key = prop.key;\n        if (t__namespace.isIdentifier(prop.key) && !prop.computed) key = t__namespace.stringLiteral(key.name);\n        else if (prop.computed) key = t__namespace.callExpression(registerImportMethod(path, \"escape\"), [\n            prop.key,\n            t__namespace.booleanLiteral(true)\n        ]);\n        else key = t__namespace.stringLiteral(escapeHTML(prop.key.value));\n        if (t__namespace.isBooleanLiteral(prop.value)) {\n            if (prop.value.value === true) {\n                if (!prop.computed) {\n                    const prev = quasis.pop();\n                    quasis.push(t__namespace.TemplateElement({\n                        raw: (prev ? prev.value.raw : \"\") + (i ? \" \" : \"\") + `${key.value}` + (isLast ? \"\" : \" \")\n                    }));\n                } else {\n                    values.push(key);\n                    quasis.push(t__namespace.TemplateElement({\n                        raw: isLast ? \"\" : \" \"\n                    }));\n                }\n            }\n        } else {\n            values.push(t__namespace.conditionalExpression(prop.value, key, t__namespace.stringLiteral(\"\")));\n            quasis.push(t__namespace.TemplateElement({\n                raw: isLast ? \"\" : \" \"\n            }));\n        }\n    });\n}\nfunction transformChildren$1(path, results, { hydratable }) {\n    const doNotEscape = path.doNotEscape;\n    const filteredChildren = filterChildren(path.get(\"children\"));\n    const multi = checkLength(filteredChildren), markers = hydratable && multi;\n    filteredChildren.forEach((node)=>{\n        if (t__namespace.isJSXElement(node.node) && getTagName(node.node) === \"head\") {\n            const child = transformNode(node, {\n                doNotEscape,\n                hydratable: false\n            });\n            registerImportMethod(path, \"NoHydration\");\n            registerImportMethod(path, \"createComponent\");\n            results.template.push(\"\");\n            results.templateValues.push(t__namespace.callExpression(t__namespace.identifier(\"_$createComponent\"), [\n                t__namespace.identifier(\"_$NoHydration\"),\n                t__namespace.objectExpression([\n                    t__namespace.objectMethod(\"get\", t__namespace.identifier(\"children\"), [], t__namespace.blockStatement([\n                        t__namespace.returnStatement(createTemplate$1(path, child))\n                    ]))\n                ])\n            ]));\n            return;\n        }\n        const child = transformNode(node, {\n            doNotEscape\n        });\n        if (!child) return;\n        appendToTemplate(results.template, child.template);\n        results.templateValues.push.apply(results.templateValues, child.templateValues || []);\n        if (child.exprs.length) {\n            if (!doNotEscape && !child.spreadElement) child.exprs[0] = escapeExpression(path, child.exprs[0]);\n            // boxed by textNodes\n            if (markers && !child.spreadElement) {\n                appendToTemplate(results.template, `<!--$-->`);\n                results.template.push(\"\");\n                results.templateValues.push(child.exprs[0]);\n                appendToTemplate(results.template, `<!--/-->`);\n            } else {\n                results.template.push(\"\");\n                results.templateValues.push(child.exprs[0]);\n            }\n        }\n    });\n}\nfunction createElement(path, { topLevel, hydratable }) {\n    const tagName = getTagName(path.node), config = getConfig(path), attributes = normalizeAttributes(path);\n    const filteredChildren = filterChildren(path.get(\"children\")), multi = checkLength(filteredChildren), markers = hydratable && multi, childNodes = filteredChildren.reduce((memo, path)=>{\n        if (t__namespace.isJSXText(path.node)) {\n            const v = htmlEntities.decode(trimWhitespace(path.node.extra.raw));\n            if (v.length) memo.push(t__namespace.stringLiteral(v));\n        } else {\n            const child = transformNode(path);\n            if (markers && child.exprs.length && !child.spreadElement) memo.push(t__namespace.stringLiteral(\"<!--$-->\"));\n            if (child.exprs.length && !child.spreadElement) child.exprs[0] = escapeExpression(path, child.exprs[0]);\n            memo.push(getCreateTemplate(config, path, child)(path, child, true));\n            if (markers && child.exprs.length && !child.spreadElement) memo.push(t__namespace.stringLiteral(\"<!--/-->\"));\n        }\n        return memo;\n    }, []);\n    let props;\n    if (attributes.length === 1) props = [\n        attributes[0].node.argument\n    ];\n    else {\n        props = [];\n        let runningObject = [], dynamicSpread = false, hasChildren = path.node.children.length > 0;\n        attributes.forEach((attribute)=>{\n            const node = attribute.node;\n            if (t__namespace.isJSXSpreadAttribute(node)) {\n                if (runningObject.length) {\n                    props.push(t__namespace.objectExpression(runningObject));\n                    runningObject = [];\n                }\n                props.push(isDynamic(attribute.get(\"argument\"), {\n                    checkMember: true\n                }) && (dynamicSpread = true) ? t__namespace.isCallExpression(node.argument) && !node.argument.arguments.length && !t__namespace.isCallExpression(node.argument.callee) && !t__namespace.isMemberExpression(node.argument.callee) ? node.argument.callee : t__namespace.arrowFunctionExpression([], node.argument) : node.argument);\n            } else {\n                const value = node.value || t__namespace.booleanLiteral(true), id = convertJSXIdentifier(node.name), key = t__namespace.isJSXNamespacedName(node.name) ? `${node.name.namespace.name}:${node.name.name.name}` : node.name.name;\n                if (hasChildren && key === \"children\") return;\n                if (key === \"ref\" || key.startsWith(\"use:\") || key.startsWith(\"prop:\") || key.startsWith(\"on\")) return;\n                if (t__namespace.isJSXExpressionContainer(value)) {\n                    if (isDynamic(attribute.get(\"value\").get(\"expression\"), {\n                        checkMember: true,\n                        checkTags: true\n                    })) {\n                        let expr = t__namespace.arrowFunctionExpression([], value.expression);\n                        runningObject.push(t__namespace.objectMethod(\"get\", id, [], t__namespace.blockStatement([\n                            t__namespace.returnStatement(expr.body)\n                        ]), !t__namespace.isValidIdentifier(key)));\n                    } else runningObject.push(t__namespace.objectProperty(id, value.expression));\n                } else runningObject.push(t__namespace.objectProperty(id, value));\n            }\n        });\n        if (runningObject.length || !props.length) props.push(t__namespace.objectExpression(runningObject));\n        if (props.length > 1 || dynamicSpread) props = [\n            t__namespace.callExpression(registerImportMethod(path, \"mergeProps\"), props)\n        ];\n    }\n    const exprs = [\n        t__namespace.callExpression(registerImportMethod(path, \"ssrElement\"), [\n            t__namespace.stringLiteral(tagName),\n            props[0],\n            childNodes.length ? hydratable ? t__namespace.arrowFunctionExpression([], childNodes.length === 1 ? childNodes[0] : t__namespace.arrayExpression(childNodes)) : childNodes.length === 1 ? childNodes[0] : t__namespace.arrayExpression(childNodes) : t__namespace.identifier(\"undefined\"),\n            t__namespace.booleanLiteral(Boolean(topLevel && config.hydratable))\n        ])\n    ];\n    return {\n        exprs,\n        template: \"\",\n        spreadElement: true\n    };\n}\nfunction transformElement$1(path, info) {\n    let tagName = getTagName(path.node), results = {\n        id: path.scope.generateUidIdentifier(\"el$\"),\n        declarations: [],\n        exprs: [],\n        dynamics: [],\n        postExprs: [],\n        tagName,\n        renderer: \"universal\"\n    };\n    results.declarations.push(t__namespace.variableDeclarator(results.id, t__namespace.callExpression(registerImportMethod(path, \"createElement\", getRendererConfig(path, \"universal\").moduleName), [\n        t__namespace.stringLiteral(tagName)\n    ])));\n    transformAttributes(path, results);\n    transformChildren(path, results);\n    return results;\n}\nfunction transformAttributes(path, results) {\n    let children, spreadExpr;\n    let attributes = path.get(\"openingElement\").get(\"attributes\");\n    const elem = results.id, hasChildren = path.node.children.length > 0, config = getConfig(path);\n    // preprocess spreads\n    if (attributes.some((attribute)=>t__namespace.isJSXSpreadAttribute(attribute.node))) {\n        [attributes, spreadExpr] = processSpreads(path, attributes, {\n            elem,\n            hasChildren,\n            wrapConditionals: config.wrapConditionals\n        });\n        path.get(\"openingElement\").set(\"attributes\", attributes.map((a)=>a.node));\n    }\n    path.get(\"openingElement\").get(\"attributes\").forEach((attribute)=>{\n        const node = attribute.node;\n        let value = node.value, key = t__namespace.isJSXNamespacedName(node.name) ? `${node.name.namespace.name}:${node.name.name.name}` : node.name.name, reservedNameSpace = t__namespace.isJSXNamespacedName(node.name) && node.name.namespace.name === \"use\";\n        if (t__namespace.isJSXNamespacedName(node.name) && reservedNameSpace && !t__namespace.isJSXExpressionContainer(value)) node.value = value = t__namespace.JSXExpressionContainer(value || t__namespace.JSXEmptyExpression());\n        if (t__namespace.isJSXExpressionContainer(value)) {\n            if (key === \"ref\") {\n                // Normalize expressions for non-null and type-as\n                while(t__namespace.isTSNonNullExpression(value.expression) || t__namespace.isTSAsExpression(value.expression))value.expression = value.expression.expression;\n                if (t__namespace.isLVal(value.expression)) {\n                    const refIdentifier = path.scope.generateUidIdentifier(\"_ref$\");\n                    results.exprs.unshift(t__namespace.variableDeclaration(\"const\", [\n                        t__namespace.variableDeclarator(refIdentifier, value.expression)\n                    ]), t__namespace.expressionStatement(t__namespace.conditionalExpression(t__namespace.binaryExpression(\"===\", t__namespace.unaryExpression(\"typeof\", refIdentifier), t__namespace.stringLiteral(\"function\")), t__namespace.callExpression(registerImportMethod(path, \"use\", getRendererConfig(path, \"universal\").moduleName), [\n                        refIdentifier,\n                        elem\n                    ]), t__namespace.assignmentExpression(\"=\", value.expression, elem))));\n                } else if (t__namespace.isFunction(value.expression)) results.exprs.unshift(t__namespace.expressionStatement(t__namespace.callExpression(registerImportMethod(path, \"use\", getRendererConfig(path, \"universal\").moduleName), [\n                    value.expression,\n                    elem\n                ])));\n                else if (t__namespace.isCallExpression(value.expression)) {\n                    const refIdentifier = path.scope.generateUidIdentifier(\"_ref$\");\n                    results.exprs.unshift(t__namespace.variableDeclaration(\"const\", [\n                        t__namespace.variableDeclarator(refIdentifier, value.expression)\n                    ]), t__namespace.expressionStatement(t__namespace.logicalExpression(\"&&\", t__namespace.binaryExpression(\"===\", t__namespace.unaryExpression(\"typeof\", refIdentifier), t__namespace.stringLiteral(\"function\")), t__namespace.callExpression(registerImportMethod(path, \"use\", getRendererConfig(path, \"universal\").moduleName), [\n                        refIdentifier,\n                        elem\n                    ]))));\n                }\n            } else if (key.startsWith(\"use:\")) {\n                // Some trick to treat JSXIdentifier as Identifier\n                node.name.name.type = \"Identifier\";\n                results.exprs.unshift(t__namespace.expressionStatement(t__namespace.callExpression(registerImportMethod(path, \"use\", getRendererConfig(path, \"universal\").moduleName), [\n                    node.name.name,\n                    elem,\n                    t__namespace.arrowFunctionExpression([], t__namespace.isJSXEmptyExpression(value.expression) ? t__namespace.booleanLiteral(true) : value.expression)\n                ])));\n            } else if (key === \"children\") children = value;\n            else if (config.effectWrapper && isDynamic(attribute.get(\"value\").get(\"expression\"), {\n                checkMember: true\n            })) results.dynamics.push({\n                elem,\n                key,\n                value: value.expression\n            });\n            else results.exprs.push(t__namespace.expressionStatement(setAttr(attribute, elem, key, value.expression)));\n        } else results.exprs.push(t__namespace.expressionStatement(setAttr(attribute, elem, key, value)));\n    });\n    if (spreadExpr) results.exprs.push(spreadExpr);\n    if (!hasChildren && children) path.node.children.push(children);\n}\nfunction setAttr(path, elem, name, value, { prevId } = {}) {\n    if (!value) value = t__namespace.booleanLiteral(true);\n    return t__namespace.callExpression(registerImportMethod(path, \"setProp\", getRendererConfig(path, \"universal\").moduleName), prevId ? [\n        elem,\n        t__namespace.stringLiteral(name),\n        value,\n        prevId\n    ] : [\n        elem,\n        t__namespace.stringLiteral(name),\n        value\n    ]);\n}\nfunction transformChildren(path, results) {\n    const filteredChildren = filterChildren(path.get(\"children\")), multi = checkLength(filteredChildren), childNodes = filteredChildren.map(transformNode).reduce((memo, child)=>{\n        if (!child) return memo;\n        const i = memo.length;\n        if (child.text && i && memo[i - 1].text) memo[i - 1].template += child.template;\n        else memo.push(child);\n        return memo;\n    }, []);\n    const appends = [];\n    childNodes.forEach((child, index)=>{\n        if (!child) return;\n        if (child.tagName && child.renderer !== \"universal\") throw new Error(`<${child.tagName}> is not supported in <${getTagName(path.node)}>.\n        Wrap the usage with a component that would render this element, eg. Canvas`);\n        if (child.id) {\n            let insertNode = registerImportMethod(path, \"insertNode\", getRendererConfig(path, \"universal\").moduleName);\n            let insert = child.id;\n            if (child.text) {\n                let createTextNode = registerImportMethod(path, \"createTextNode\", getRendererConfig(path, \"universal\").moduleName);\n                if (multi) results.declarations.push(t__namespace.variableDeclarator(child.id, t__namespace.callExpression(createTextNode, [\n                    t__namespace.templateLiteral([\n                        t__namespace.templateElement({\n                            raw: child.template\n                        })\n                    ], [])\n                ])));\n                else insert = t__namespace.callExpression(createTextNode, [\n                    t__namespace.templateLiteral([\n                        t__namespace.templateElement({\n                            raw: child.template\n                        })\n                    ], [])\n                ]);\n            }\n            appends.push(t__namespace.expressionStatement(t__namespace.callExpression(insertNode, [\n                results.id,\n                insert\n            ])));\n            results.declarations.push(...child.declarations);\n            results.exprs.push(...child.exprs);\n            results.dynamics.push(...child.dynamics);\n        } else if (child.exprs.length) {\n            let insert = registerImportMethod(path, \"insert\", getRendererConfig(path, \"universal\").moduleName);\n            if (multi) results.exprs.push(t__namespace.expressionStatement(t__namespace.callExpression(insert, [\n                results.id,\n                child.exprs[0],\n                nextChild(childNodes, index) || t__namespace.nullLiteral()\n            ])));\n            else results.exprs.push(t__namespace.expressionStatement(t__namespace.callExpression(insert, [\n                results.id,\n                child.exprs[0]\n            ])));\n        }\n    });\n    results.exprs.unshift(...appends);\n}\nfunction nextChild(children, index) {\n    return children[index + 1] && (children[index + 1].id || nextChild(children, index + 1));\n}\nfunction processSpreads(path, attributes, { elem, hasChildren, wrapConditionals }) {\n    // TODO: skip but collect the names of any properties after the last spread to not overwrite them\n    const filteredAttributes = [];\n    const spreadArgs = [];\n    let runningObject = [];\n    let dynamicSpread = false;\n    let firstSpread = false;\n    attributes.forEach((attribute)=>{\n        const node = attribute.node;\n        const key = !t__namespace.isJSXSpreadAttribute(node) && (t__namespace.isJSXNamespacedName(node.name) ? `${node.name.namespace.name}:${node.name.name.name}` : node.name.name);\n        if (t__namespace.isJSXSpreadAttribute(node)) {\n            firstSpread = true;\n            if (runningObject.length) {\n                spreadArgs.push(t__namespace.objectExpression(runningObject));\n                runningObject = [];\n            }\n            spreadArgs.push(isDynamic(attribute.get(\"argument\"), {\n                checkMember: true\n            }) && (dynamicSpread = true) ? t__namespace.isCallExpression(node.argument) && !node.argument.arguments.length && !t__namespace.isCallExpression(node.argument.callee) && !t__namespace.isMemberExpression(node.argument.callee) ? node.argument.callee : t__namespace.arrowFunctionExpression([], node.argument) : node.argument);\n        } else if ((firstSpread || t__namespace.isJSXExpressionContainer(node.value) && isDynamic(attribute.get(\"value\").get(\"expression\"), {\n            checkMember: true\n        })) && canNativeSpread(key, {\n            checkNameSpaces: true\n        })) {\n            const isContainer = t__namespace.isJSXExpressionContainer(node.value);\n            const dynamic = isContainer && isDynamic(attribute.get(\"value\").get(\"expression\"), {\n                checkMember: true\n            });\n            if (dynamic) {\n                const id = convertJSXIdentifier(node.name);\n                let expr = wrapConditionals && (t__namespace.isLogicalExpression(node.value.expression) || t__namespace.isConditionalExpression(node.value.expression)) ? transformCondition(attribute.get(\"value\").get(\"expression\"), true) : t__namespace.arrowFunctionExpression([], node.value.expression);\n                runningObject.push(t__namespace.objectMethod(\"get\", id, [], t__namespace.blockStatement([\n                    t__namespace.returnStatement(expr.body)\n                ]), !t__namespace.isValidIdentifier(key)));\n            } else runningObject.push(t__namespace.objectProperty(t__namespace.stringLiteral(key), isContainer ? node.value.expression : node.value || t__namespace.booleanLiteral(true)));\n        } else filteredAttributes.push(attribute);\n    });\n    if (runningObject.length) spreadArgs.push(t__namespace.objectExpression(runningObject));\n    const props = spreadArgs.length === 1 && !dynamicSpread ? spreadArgs[0] : t__namespace.callExpression(registerImportMethod(path, \"mergeProps\"), spreadArgs);\n    return [\n        filteredAttributes,\n        t__namespace.expressionStatement(t__namespace.callExpression(registerImportMethod(path, \"spread\", getRendererConfig(path, \"universal\").moduleName), [\n            elem,\n            props,\n            t__namespace.booleanLiteral(hasChildren)\n        ]))\n    ];\n}\nfunction createTemplate(path, result, wrap) {\n    const config = getConfig(path);\n    if (result.id) {\n        result.decl = t__namespace.variableDeclaration(\"const\", result.declarations);\n        if (!(result.exprs.length || result.dynamics.length || result.postExprs.length) && result.decl.declarations.length === 1) return result.decl.declarations[0].init;\n        else return t__namespace.callExpression(t__namespace.arrowFunctionExpression([], t__namespace.blockStatement([\n            result.decl,\n            ...result.exprs.concat(wrapDynamics(path, result.dynamics) || [], result.postExprs || []),\n            t__namespace.returnStatement(result.id)\n        ])), []);\n    }\n    if (wrap && result.dynamic && config.memoWrapper) return t__namespace.callExpression(registerImportMethod(path, config.memoWrapper), [\n        result.exprs[0]\n    ]);\n    return result.exprs[0];\n}\nfunction wrapDynamics(path, dynamics) {\n    if (!dynamics.length) return;\n    const config = getConfig(path);\n    const effectWrapperId = registerImportMethod(path, config.effectWrapper);\n    if (dynamics.length === 1) {\n        const prevValue = t__namespace.identifier(\"_$p\");\n        return t__namespace.expressionStatement(t__namespace.callExpression(effectWrapperId, [\n            t__namespace.arrowFunctionExpression([\n                prevValue\n            ], setAttr(path, dynamics[0].elem, dynamics[0].key, dynamics[0].value, {\n                dynamic: true,\n                prevId: prevValue\n            }))\n        ]));\n    }\n    const declarations = [], statements = [], identifiers = [], prevId = t__namespace.identifier(\"_p$\");\n    dynamics.forEach(({ elem, key, value })=>{\n        const identifier = path.scope.generateUidIdentifier(\"v$\");\n        identifiers.push(identifier);\n        declarations.push(t__namespace.variableDeclarator(identifier, value));\n        const prev = t__namespace.memberExpression(prevId, identifier);\n        statements.push(t__namespace.expressionStatement(t__namespace.logicalExpression(\"&&\", t__namespace.binaryExpression(\"!==\", identifier, t__namespace.memberExpression(prevId, identifier)), t__namespace.assignmentExpression(\"=\", t__namespace.memberExpression(prevId, identifier), setAttr(path, elem, key, identifier, {\n            dynamic: true,\n            prevId: prev\n        })))));\n    });\n    return t__namespace.expressionStatement(t__namespace.callExpression(effectWrapperId, [\n        t__namespace.arrowFunctionExpression([\n            prevId\n        ], t__namespace.blockStatement([\n            t__namespace.variableDeclaration(\"const\", declarations),\n            ...statements,\n            t__namespace.returnStatement(prevId)\n        ])),\n        t__namespace.objectExpression(identifiers.map((id)=>t__namespace.objectProperty(id, t__namespace.identifier(\"undefined\"))))\n    ]));\n}\nfunction convertComponentIdentifier(node) {\n    if (t__namespace.isJSXIdentifier(node)) {\n        if (t__namespace.isValidIdentifier(node.name)) node.type = \"Identifier\";\n        else return t__namespace.stringLiteral(node.name);\n    } else if (t__namespace.isJSXMemberExpression(node)) {\n        const prop = convertComponentIdentifier(node.property);\n        const computed = t__namespace.isStringLiteral(prop);\n        return t__namespace.memberExpression(convertComponentIdentifier(node.object), prop, computed);\n    }\n    return node;\n}\nfunction transformComponent(path) {\n    let exprs = [], config = getConfig(path), tagId = convertComponentIdentifier(path.node.openingElement.name), props = [], runningObject = [], dynamicSpread = false, hasChildren = path.node.children.length > 0;\n    if (config.builtIns.indexOf(tagId.name) > -1 && !path.scope.hasBinding(tagId.name)) {\n        const newTagId = registerImportMethod(path, tagId.name);\n        tagId.name = newTagId.name;\n    }\n    path.get(\"openingElement\").get(\"attributes\").forEach((attribute)=>{\n        const node = attribute.node;\n        if (t__namespace.isJSXSpreadAttribute(node)) {\n            if (runningObject.length) {\n                props.push(t__namespace.objectExpression(runningObject));\n                runningObject = [];\n            }\n            props.push(isDynamic(attribute.get(\"argument\"), {\n                checkMember: true\n            }) && (dynamicSpread = true) ? t__namespace.isCallExpression(node.argument) && !node.argument.arguments.length && !t__namespace.isCallExpression(node.argument.callee) && !t__namespace.isMemberExpression(node.argument.callee) ? node.argument.callee : t__namespace.arrowFunctionExpression([], node.argument) : node.argument);\n        } else {\n            // handle weird babel bug around HTML entities\n            const value = (t__namespace.isStringLiteral(node.value) ? t__namespace.stringLiteral(node.value.value) : node.value) || t__namespace.booleanLiteral(true), id = convertJSXIdentifier(node.name), key = id.name;\n            if (hasChildren && key === \"children\") return;\n            if (t__namespace.isJSXExpressionContainer(value)) {\n                if (key === \"ref\") {\n                    if (config.generate === \"ssr\") return;\n                    // Normalize expressions for non-null and type-as\n                    while(t__namespace.isTSNonNullExpression(value.expression) || t__namespace.isTSAsExpression(value.expression) || t__namespace.isTSSatisfiesExpression(value.expression))value.expression = value.expression.expression;\n                    let binding, isFunction = t__namespace.isIdentifier(value.expression) && (binding = path.scope.getBinding(value.expression.name)) && binding.kind === \"const\";\n                    if (!isFunction && t__namespace.isLVal(value.expression)) {\n                        const refIdentifier = path.scope.generateUidIdentifier(\"_ref$\");\n                        runningObject.push(t__namespace.objectMethod(\"method\", t__namespace.identifier(\"ref\"), [\n                            t__namespace.identifier(\"r$\")\n                        ], t__namespace.blockStatement([\n                            t__namespace.variableDeclaration(\"const\", [\n                                t__namespace.variableDeclarator(refIdentifier, value.expression)\n                            ]),\n                            t__namespace.expressionStatement(t__namespace.conditionalExpression(t__namespace.binaryExpression(\"===\", t__namespace.unaryExpression(\"typeof\", refIdentifier), t__namespace.stringLiteral(\"function\")), t__namespace.callExpression(refIdentifier, [\n                                t__namespace.identifier(\"r$\")\n                            ]), t__namespace.assignmentExpression(\"=\", value.expression, t__namespace.identifier(\"r$\"))))\n                        ])));\n                    } else if (isFunction || t__namespace.isFunction(value.expression)) runningObject.push(t__namespace.objectProperty(t__namespace.identifier(\"ref\"), value.expression));\n                    else if (t__namespace.isCallExpression(value.expression)) {\n                        const refIdentifier = path.scope.generateUidIdentifier(\"_ref$\");\n                        runningObject.push(t__namespace.objectMethod(\"method\", t__namespace.identifier(\"ref\"), [\n                            t__namespace.identifier(\"r$\")\n                        ], t__namespace.blockStatement([\n                            t__namespace.variableDeclaration(\"const\", [\n                                t__namespace.variableDeclarator(refIdentifier, value.expression)\n                            ]),\n                            t__namespace.expressionStatement(t__namespace.logicalExpression(\"&&\", t__namespace.binaryExpression(\"===\", t__namespace.unaryExpression(\"typeof\", refIdentifier), t__namespace.stringLiteral(\"function\")), t__namespace.callExpression(refIdentifier, [\n                                t__namespace.identifier(\"r$\")\n                            ])))\n                        ])));\n                    }\n                } else if (isDynamic(attribute.get(\"value\").get(\"expression\"), {\n                    checkMember: true,\n                    checkTags: true\n                })) {\n                    if (config.wrapConditionals && config.generate !== \"ssr\" && (t__namespace.isLogicalExpression(value.expression) || t__namespace.isConditionalExpression(value.expression))) {\n                        const expr = transformCondition(attribute.get(\"value\").get(\"expression\"), true);\n                        runningObject.push(t__namespace.objectMethod(\"get\", id, [], t__namespace.blockStatement([\n                            t__namespace.returnStatement(expr.body)\n                        ]), !t__namespace.isValidIdentifier(key)));\n                    } else if (t__namespace.isCallExpression(value.expression) && t__namespace.isArrowFunctionExpression(value.expression.callee)) {\n                        const callee = value.expression.callee;\n                        const body = t__namespace.isBlockStatement(callee.body) ? callee.body : t__namespace.blockStatement([\n                            t__namespace.returnStatement(callee.body)\n                        ]);\n                        runningObject.push(t__namespace.objectMethod(\"get\", id, [], body, !t__namespace.isValidIdentifier(key)));\n                    } else runningObject.push(t__namespace.objectMethod(\"get\", id, [], t__namespace.blockStatement([\n                        t__namespace.returnStatement(value.expression)\n                    ]), !t__namespace.isValidIdentifier(key)));\n                } else runningObject.push(t__namespace.objectProperty(id, value.expression));\n            } else runningObject.push(t__namespace.objectProperty(id, value));\n        }\n    });\n    const childResult = transformComponentChildren(path.get(\"children\"), config);\n    if (childResult && childResult[0]) {\n        if (childResult[1]) {\n            const body = t__namespace.isCallExpression(childResult[0]) && t__namespace.isFunction(childResult[0].arguments[0]) ? childResult[0].arguments[0].body : childResult[0].body ? childResult[0].body : childResult[0];\n            runningObject.push(t__namespace.objectMethod(\"get\", t__namespace.identifier(\"children\"), [], t__namespace.isExpression(body) ? t__namespace.blockStatement([\n                t__namespace.returnStatement(body)\n            ]) : body));\n        } else runningObject.push(t__namespace.objectProperty(t__namespace.identifier(\"children\"), childResult[0]));\n    }\n    if (runningObject.length || !props.length) props.push(t__namespace.objectExpression(runningObject));\n    if (props.length > 1 || dynamicSpread) props = [\n        t__namespace.callExpression(registerImportMethod(path, \"mergeProps\"), props)\n    ];\n    const componentArgs = [\n        tagId,\n        props[0]\n    ];\n    exprs.push(t__namespace.callExpression(registerImportMethod(path, \"createComponent\"), componentArgs));\n    // handle hoisting conditionals\n    if (exprs.length > 1) {\n        const ret = exprs.pop();\n        exprs = [\n            t__namespace.callExpression(t__namespace.arrowFunctionExpression([], t__namespace.blockStatement([\n                ...exprs,\n                t__namespace.returnStatement(ret)\n            ])), [])\n        ];\n    }\n    return {\n        exprs,\n        template: \"\",\n        component: true\n    };\n}\nfunction transformComponentChildren(children, config) {\n    const filteredChildren = filterChildren(children);\n    if (!filteredChildren.length) return;\n    let dynamic = false;\n    let pathNodes = [];\n    let transformedChildren = filteredChildren.reduce((memo, path)=>{\n        if (t__namespace.isJSXText(path.node)) {\n            const v = htmlEntities.decode(trimWhitespace(path.node.extra.raw));\n            if (v.length) {\n                pathNodes.push(path.node);\n                memo.push(t__namespace.stringLiteral(v));\n            }\n        } else {\n            const child = transformNode(path, {\n                topLevel: true,\n                componentChild: true,\n                lastElement: true\n            });\n            dynamic = dynamic || child.dynamic;\n            if (config.generate === \"ssr\" && filteredChildren.length > 1 && child.dynamic && t__namespace.isFunction(child.exprs[0])) child.exprs[0] = child.exprs[0].body;\n            pathNodes.push(path.node);\n            memo.push(getCreateTemplate(config, path, child)(path, child, filteredChildren.length > 1));\n        }\n        return memo;\n    }, []);\n    if (transformedChildren.length === 1) {\n        transformedChildren = transformedChildren[0];\n        if (!t__namespace.isJSXExpressionContainer(pathNodes[0]) && !t__namespace.isJSXSpreadChild(pathNodes[0]) && !t__namespace.isJSXText(pathNodes[0])) {\n            transformedChildren = t__namespace.isCallExpression(transformedChildren) && !transformedChildren.arguments.length && !t__namespace.isIdentifier(transformedChildren.callee) ? transformedChildren.callee : t__namespace.arrowFunctionExpression([], transformedChildren);\n            dynamic = true;\n        }\n    } else {\n        transformedChildren = t__namespace.arrowFunctionExpression([], t__namespace.arrayExpression(transformedChildren));\n        dynamic = true;\n    }\n    return [\n        transformedChildren,\n        dynamic\n    ];\n}\nfunction transformFragmentChildren(children, results, config) {\n    const filteredChildren = filterChildren(children), childNodes = filteredChildren.reduce((memo, path)=>{\n        if (t__namespace.isJSXText(path.node)) {\n            const v = htmlEntities.decode(trimWhitespace(path.node.extra.raw));\n            if (v.length) memo.push(t__namespace.stringLiteral(v));\n        } else {\n            const child = transformNode(path, {\n                topLevel: true,\n                fragmentChild: true,\n                lastElement: true\n            });\n            memo.push(getCreateTemplate(config, path, child)(path, child, true));\n        }\n        return memo;\n    }, []);\n    results.exprs.push(childNodes.length === 1 ? childNodes[0] : t__namespace.arrayExpression(childNodes));\n}\nfunction transformJSX(path) {\n    const config = getConfig(path);\n    const replace = transformThis(path);\n    const result = transformNode(path, t__namespace.isJSXFragment(path.node) ? {} : {\n        topLevel: true,\n        lastElement: true\n    });\n    const template = getCreateTemplate(config, path, result);\n    path.replaceWith(replace(template(path, result, false)));\n}\nfunction transformThis(path) {\n    let thisId;\n    path.traverse({\n        ThisExpression (path) {\n            thisId || (thisId = path.scope.generateUidIdentifier(\"self$\"));\n            path.replaceWith(thisId);\n        }\n    });\n    return (node)=>{\n        if (thisId) {\n            let parent = path.getStatementParent();\n            const decl = t__namespace.variableDeclaration(\"const\", [\n                t__namespace.variableDeclarator(thisId, t__namespace.thisExpression())\n            ]);\n            parent.insertBefore(decl);\n        }\n        return node;\n    };\n}\nfunction transformNode(path, info = {}) {\n    const config = getConfig(path);\n    const node = path.node;\n    let staticValue;\n    if (t__namespace.isJSXElement(node)) return transformElement(config, path, info);\n    else if (t__namespace.isJSXFragment(node)) {\n        let results = {\n            template: \"\",\n            declarations: [],\n            exprs: [],\n            dynamics: []\n        };\n        // <><div /><Component /></>\n        transformFragmentChildren(path.get(\"children\"), results, config);\n        return results;\n    } else if (t__namespace.isJSXText(node) || (staticValue = getStaticExpression(path)) !== false) {\n        const text = staticValue !== undefined ? info.doNotEscape ? staticValue.toString() : escapeHTML(staticValue.toString()) : trimWhitespace(node.extra.raw);\n        if (!text.length) return null;\n        const results = {\n            template: config.generate === \"ssr\" ? text : escapeBackticks(text),\n            declarations: [],\n            exprs: [],\n            dynamics: [],\n            postExprs: [],\n            text: true\n        };\n        if (!info.skipId && config.generate !== \"ssr\") results.id = path.scope.generateUidIdentifier(\"el$\");\n        return results;\n    } else if (t__namespace.isJSXExpressionContainer(node)) {\n        if (t__namespace.isJSXEmptyExpression(node.expression)) return null;\n        if (!isDynamic(path.get(\"expression\"), {\n            checkMember: true,\n            checkTags: !!info.componentChild,\n            native: !info.componentChild\n        })) return {\n            exprs: [\n                node.expression\n            ],\n            template: \"\"\n        };\n        const expr = config.wrapConditionals && config.generate !== \"ssr\" && (t__namespace.isLogicalExpression(node.expression) || t__namespace.isConditionalExpression(node.expression)) ? transformCondition(path.get(\"expression\"), info.componentChild) : !info.componentChild && (config.generate !== \"ssr\" || info.fragmentChild) && t__namespace.isCallExpression(node.expression) && !t__namespace.isMemberExpression(node.expression.callee) && node.expression.arguments.length === 0 ? node.expression.callee : t__namespace.arrowFunctionExpression([], node.expression);\n        return {\n            exprs: expr.length > 1 ? [\n                t__namespace.callExpression(t__namespace.arrowFunctionExpression([], t__namespace.blockStatement([\n                    expr[0],\n                    t__namespace.returnStatement(expr[1])\n                ])), [])\n            ] : [\n                expr\n            ],\n            template: \"\",\n            dynamic: true\n        };\n    } else if (t__namespace.isJSXSpreadChild(node)) {\n        if (!isDynamic(path.get(\"expression\"), {\n            checkMember: true,\n            native: !info.componentChild\n        })) return {\n            exprs: [\n                node.expression\n            ],\n            template: \"\"\n        };\n        const expr = t__namespace.arrowFunctionExpression([], node.expression);\n        return {\n            exprs: [\n                expr\n            ],\n            template: \"\",\n            dynamic: true\n        };\n    }\n}\nfunction getCreateTemplate(config, path, result) {\n    if (result.tagName && result.renderer === \"dom\" || config.generate === \"dom\") return createTemplate$2;\n    if (result.renderer === \"ssr\" || config.generate === \"ssr\") return createTemplate$1;\n    return createTemplate;\n}\nfunction transformElement(config, path, info = {}) {\n    const node = path.node;\n    let tagName = getTagName(node);\n    // <Component ...></Component>\n    if (isComponent(tagName)) return transformComponent(path);\n    // <div ...></div>\n    // const element = getTransformElemet(config, path, tagName);\n    const tagRenderer = (config.renderers ?? []).find((renderer)=>renderer.elements.includes(tagName));\n    if (tagRenderer?.name === \"dom\" || getConfig(path).generate === \"dom\") return transformElement$3(path, info);\n    if (getConfig(path).generate === \"ssr\") return transformElement$2(path, info);\n    return transformElement$1(path);\n}\n// add to the top/bottom of the module.\nvar postprocess = (path)=>{\n    if (path.scope.data.events) path.node.body.push(t__namespace.expressionStatement(t__namespace.callExpression(registerImportMethod(path, \"delegateEvents\", getRendererConfig(path, \"dom\").moduleName), [\n        t__namespace.arrayExpression(Array.from(path.scope.data.events).map((e)=>t__namespace.stringLiteral(e)))\n    ])));\n    if (path.scope.data.templates?.length) {\n        let domTemplates = path.scope.data.templates.filter((temp)=>temp.renderer === \"dom\");\n        let ssrTemplates = path.scope.data.templates.filter((temp)=>temp.renderer === \"ssr\");\n        domTemplates.length > 0 && appendTemplates$1(path, domTemplates);\n        ssrTemplates.length > 0 && appendTemplates(path, ssrTemplates);\n    }\n};\nvar config = {\n    moduleName: \"dom\",\n    generate: \"dom\",\n    hydratable: false,\n    delegateEvents: true,\n    delegatedEvents: [],\n    builtIns: [],\n    requireImportSource: false,\n    wrapConditionals: true,\n    omitNestedClosingTags: false,\n    contextToCustomElements: false,\n    staticMarker: \"@once\",\n    effectWrapper: \"effect\",\n    memoWrapper: \"memo\",\n    validate: true\n};\nconst { isValidHTMLNesting } = require(\"ac9afdc0dbf6febc\");\n// From https://github.com/MananTank/babel-plugin-validate-jsx-nesting/blob/main/src/index.js\nconst JSXValidator = {\n    JSXElement (path) {\n        const elName = path.node.openingElement.name;\n        const parent = path.parent;\n        if (!t__namespace.isJSXElement(parent) || !t__namespace.isJSXIdentifier(elName)) return;\n        const elTagName = elName.name;\n        if (isComponent(elTagName)) return;\n        const parentElName = parent.openingElement.name;\n        if (!t__namespace.isJSXIdentifier(parentElName)) return;\n        const parentElTagName = parentElName.name;\n        if (!isComponent(parentElTagName)) {\n            if (!isValidHTMLNesting(parentElTagName, elTagName)) throw path.buildCodeFrameError(`Invalid JSX: <${elTagName}> cannot be child of <${parentElTagName}>`);\n        }\n    }\n};\nvar preprocess = (path, { opts })=>{\n    const merged = path.hub.file.metadata.config = Object.assign({}, config, opts);\n    const lib = merged.requireImportSource;\n    if (lib) {\n        const comments = path.hub.file.ast.comments;\n        let process = false;\n        for(let i = 0; i < comments.length; i++){\n            const comment = comments[i];\n            const index = comment.value.indexOf(\"@jsxImportSource\");\n            if (index > -1 && comment.value.slice(index).includes(lib)) {\n                process = true;\n                break;\n            }\n        }\n        if (!process) {\n            path.skip();\n            return;\n        }\n    }\n    if (merged.validate) path.traverse(JSXValidator);\n};\nvar index = ()=>{\n    return {\n        name: \"JSX DOM Expressions\",\n        inherits: SyntaxJSX.default,\n        visitor: {\n            JSXElement: transformJSX,\n            JSXFragment: transformJSX,\n            Program: {\n                enter: preprocess,\n                exit: postprocess\n            }\n        }\n    };\n};\nmodule.exports = index;\n\n},{\"ced14b3cabb71ae3\":\"JwgjR\",\"3dbfa0d0bfd7994a\":\"d4Ce7\",\"8f809a0d259a0936\":\"fERnD\",\"1e09f2a3447b1b07\":\"kuG7t\",\"ac9afdc0dbf6febc\":\"3fyls\"}],\"JwgjR\":[function(require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = void 0;\nvar _helperPluginUtils = require(\"a5009337dfa0166f\");\nvar _default = (0, _helperPluginUtils.declare)((api)=>{\n    api.assertVersion(7);\n    return {\n        name: \"syntax-jsx\",\n        manipulateOptions (opts, parserOpts) {\n            if (parserOpts.plugins.some((p)=>(Array.isArray(p) ? p[0] : p) === \"typescript\")) return;\n            parserOpts.plugins.push(\"jsx\");\n        }\n    };\n});\nexports.default = _default;\n\n},{\"a5009337dfa0166f\":\"kHzV4\"}],\"kHzV4\":[function(require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.declare = declare;\nexports.declarePreset = void 0;\nconst apiPolyfills = {\n    assertVersion: (api)=>(range)=>{\n            throwVersionError(range, api.version);\n        }\n};\nObject.assign(apiPolyfills, {\n    targets: ()=>()=>{\n            return {};\n        },\n    assumption: ()=>()=>{\n            return undefined;\n        }\n});\nfunction declare(builder) {\n    return (api, options, dirname)=>{\n        var _clonedApi2;\n        let clonedApi;\n        for (const name of Object.keys(apiPolyfills)){\n            var _clonedApi;\n            if (api[name]) continue;\n            (_clonedApi = clonedApi) != null ? _clonedApi : clonedApi = copyApiObject(api);\n            clonedApi[name] = apiPolyfills[name](clonedApi);\n        }\n        return builder((_clonedApi2 = clonedApi) != null ? _clonedApi2 : api, options || {}, dirname);\n    };\n}\nconst declarePreset = declare;\nexports.declarePreset = declarePreset;\nfunction copyApiObject(api) {\n    let proto = null;\n    if (typeof api.version === \"string\" && /^7\\./.test(api.version)) {\n        proto = Object.getPrototypeOf(api);\n        if (proto && (!has(proto, \"version\") || !has(proto, \"transform\") || !has(proto, \"template\") || !has(proto, \"types\"))) proto = null;\n    }\n    return Object.assign({}, proto, api);\n}\nfunction has(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\nfunction throwVersionError(range, version) {\n    if (typeof range === \"number\") {\n        if (!Number.isInteger(range)) throw new Error(\"Expected string or integer value.\");\n        range = `^${range}.0.0-0`;\n    }\n    if (typeof range !== \"string\") throw new Error(\"Expected string or integer value.\");\n    const limit = Error.stackTraceLimit;\n    if (typeof limit === \"number\" && limit < 25) Error.stackTraceLimit = 25;\n    let err;\n    if (version.slice(0, 2) === \"7.\") err = new Error(`Requires Babel \"^7.0.0-beta.41\", but was loaded with \"${version}\". ` + `You'll need to update your @babel/core version.`);\n    else err = new Error(`Requires Babel \"${range}\", but was loaded with \"${version}\". ` + `If you are sure you have a compatible version of @babel/core, ` + `it is likely that something in your build process is loading the ` + `wrong version. Inspect the stack trace of this error to look for ` + `the first entry that doesn't mention \"@babel/core\" or \"babel-core\" ` + `to see what is calling Babel.`);\n    if (typeof limit === \"number\") Error.stackTraceLimit = limit;\n    throw Object.assign(err, {\n        code: \"BABEL_VERSION_UNSUPPORTED\",\n        version,\n        range\n    });\n}\n\n},{}],\"fERnD\":[function(require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"ImportInjector\", {\n    enumerable: true,\n    get: function() {\n        return _importInjector.default;\n    }\n});\nexports.addDefault = addDefault;\nexports.addNamed = addNamed;\nexports.addNamespace = addNamespace;\nexports.addSideEffect = addSideEffect;\nObject.defineProperty(exports, \"isModule\", {\n    enumerable: true,\n    get: function() {\n        return _isModule.default;\n    }\n});\nvar _importInjector = require(\"5c8df66fba75a1ef\");\nvar _isModule = require(\"b25d20da8bc2916d\");\nfunction addDefault(path, importedSource, opts) {\n    return new _importInjector.default(path).addDefault(importedSource, opts);\n}\nfunction addNamed(path, name, importedSource, opts) {\n    return new _importInjector.default(path).addNamed(name, importedSource, opts);\n}\nfunction addNamespace(path, importedSource, opts) {\n    return new _importInjector.default(path).addNamespace(importedSource, opts);\n}\nfunction addSideEffect(path, importedSource, opts) {\n    return new _importInjector.default(path).addSideEffect(importedSource, opts);\n}\n\n},{\"5c8df66fba75a1ef\":\"6kpFh\",\"b25d20da8bc2916d\":\"gFODp\"}],\"6kpFh\":[function(require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = void 0;\nvar _assert = require(\"91f360fb1387c499\");\nvar _t = require(\"cf00de343fcbdff3\");\nvar _importBuilder = require(\"66964023dc08b95e\");\nvar _isModule = require(\"67ec0e5b2ffdd26c\");\nconst { numericLiteral, sequenceExpression } = _t;\nclass ImportInjector {\n    constructor(path, importedSource, opts){\n        this._defaultOpts = {\n            importedSource: null,\n            importedType: \"commonjs\",\n            importedInterop: \"babel\",\n            importingInterop: \"babel\",\n            ensureLiveReference: false,\n            ensureNoContext: false,\n            importPosition: \"before\"\n        };\n        const programPath = path.find((p)=>p.isProgram());\n        this._programPath = programPath;\n        this._programScope = programPath.scope;\n        this._hub = programPath.hub;\n        this._defaultOpts = this._applyDefaults(importedSource, opts, true);\n    }\n    addDefault(importedSourceIn, opts) {\n        return this.addNamed(\"default\", importedSourceIn, opts);\n    }\n    addNamed(importName, importedSourceIn, opts) {\n        _assert(typeof importName === \"string\");\n        return this._generateImport(this._applyDefaults(importedSourceIn, opts), importName);\n    }\n    addNamespace(importedSourceIn, opts) {\n        return this._generateImport(this._applyDefaults(importedSourceIn, opts), null);\n    }\n    addSideEffect(importedSourceIn, opts) {\n        return this._generateImport(this._applyDefaults(importedSourceIn, opts), void 0);\n    }\n    _applyDefaults(importedSource, opts, isInit = false) {\n        let newOpts;\n        if (typeof importedSource === \"string\") newOpts = Object.assign({}, this._defaultOpts, {\n            importedSource\n        }, opts);\n        else {\n            _assert(!opts, \"Unexpected secondary arguments.\");\n            newOpts = Object.assign({}, this._defaultOpts, importedSource);\n        }\n        if (!isInit && opts) {\n            if (opts.nameHint !== undefined) newOpts.nameHint = opts.nameHint;\n            if (opts.blockHoist !== undefined) newOpts.blockHoist = opts.blockHoist;\n        }\n        return newOpts;\n    }\n    _generateImport(opts, importName) {\n        const isDefault = importName === \"default\";\n        const isNamed = !!importName && !isDefault;\n        const isNamespace = importName === null;\n        const { importedSource, importedType, importedInterop, importingInterop, ensureLiveReference, ensureNoContext, nameHint, importPosition, blockHoist } = opts;\n        let name = nameHint || importName;\n        const isMod = (0, _isModule.default)(this._programPath);\n        const isModuleForNode = isMod && importingInterop === \"node\";\n        const isModuleForBabel = isMod && importingInterop === \"babel\";\n        if (importPosition === \"after\" && !isMod) throw new Error(`\"importPosition\": \"after\" is only supported in modules`);\n        const builder = new _importBuilder.default(importedSource, this._programScope, this._hub);\n        if (importedType === \"es6\") {\n            if (!isModuleForNode && !isModuleForBabel) throw new Error(\"Cannot import an ES6 module from CommonJS\");\n            builder.import();\n            if (isNamespace) builder.namespace(nameHint || importedSource);\n            else if (isDefault || isNamed) builder.named(name, importName);\n        } else if (importedType !== \"commonjs\") throw new Error(`Unexpected interopType \"${importedType}\"`);\n        else if (importedInterop === \"babel\") {\n            if (isModuleForNode) {\n                name = name !== \"default\" ? name : importedSource;\n                const es6Default = `${importedSource}$es6Default`;\n                builder.import();\n                if (isNamespace) builder.default(es6Default).var(name || importedSource).wildcardInterop();\n                else if (isDefault) {\n                    if (ensureLiveReference) builder.default(es6Default).var(name || importedSource).defaultInterop().read(\"default\");\n                    else builder.default(es6Default).var(name).defaultInterop().prop(importName);\n                } else if (isNamed) builder.default(es6Default).read(importName);\n            } else if (isModuleForBabel) {\n                builder.import();\n                if (isNamespace) builder.namespace(name || importedSource);\n                else if (isDefault || isNamed) builder.named(name, importName);\n            } else {\n                builder.require();\n                if (isNamespace) builder.var(name || importedSource).wildcardInterop();\n                else if ((isDefault || isNamed) && ensureLiveReference) {\n                    if (isDefault) {\n                        name = name !== \"default\" ? name : importedSource;\n                        builder.var(name).read(importName);\n                        builder.defaultInterop();\n                    } else builder.var(importedSource).read(importName);\n                } else if (isDefault) builder.var(name).defaultInterop().prop(importName);\n                else if (isNamed) builder.var(name).prop(importName);\n            }\n        } else if (importedInterop === \"compiled\") {\n            if (isModuleForNode) {\n                builder.import();\n                if (isNamespace) builder.default(name || importedSource);\n                else if (isDefault || isNamed) builder.default(importedSource).read(name);\n            } else if (isModuleForBabel) {\n                builder.import();\n                if (isNamespace) builder.namespace(name || importedSource);\n                else if (isDefault || isNamed) builder.named(name, importName);\n            } else {\n                builder.require();\n                if (isNamespace) builder.var(name || importedSource);\n                else if (isDefault || isNamed) {\n                    if (ensureLiveReference) builder.var(importedSource).read(name);\n                    else builder.prop(importName).var(name);\n                }\n            }\n        } else if (importedInterop === \"uncompiled\") {\n            if (isDefault && ensureLiveReference) throw new Error(\"No live reference for commonjs default\");\n            if (isModuleForNode) {\n                builder.import();\n                if (isNamespace) builder.default(name || importedSource);\n                else if (isDefault) builder.default(name);\n                else if (isNamed) builder.default(importedSource).read(name);\n            } else if (isModuleForBabel) {\n                builder.import();\n                if (isNamespace) builder.default(name || importedSource);\n                else if (isDefault) builder.default(name);\n                else if (isNamed) builder.named(name, importName);\n            } else {\n                builder.require();\n                if (isNamespace) builder.var(name || importedSource);\n                else if (isDefault) builder.var(name);\n                else if (isNamed) {\n                    if (ensureLiveReference) builder.var(importedSource).read(name);\n                    else builder.var(name).prop(importName);\n                }\n            }\n        } else throw new Error(`Unknown importedInterop \"${importedInterop}\".`);\n        const { statements, resultName } = builder.done();\n        this._insertStatements(statements, importPosition, blockHoist);\n        if ((isDefault || isNamed) && ensureNoContext && resultName.type !== \"Identifier\") return sequenceExpression([\n            numericLiteral(0),\n            resultName\n        ]);\n        return resultName;\n    }\n    _insertStatements(statements, importPosition = \"before\", blockHoist = 3) {\n        const body = this._programPath.get(\"body\");\n        if (importPosition === \"after\") {\n            for(let i = body.length - 1; i >= 0; i--)if (body[i].isImportDeclaration()) {\n                body[i].insertAfter(statements);\n                return;\n            }\n        } else {\n            statements.forEach((node)=>{\n                node._blockHoist = blockHoist;\n            });\n            const targetPath = body.find((p)=>{\n                const val = p.node._blockHoist;\n                return Number.isFinite(val) && val < 4;\n            });\n            if (targetPath) {\n                targetPath.insertBefore(statements);\n                return;\n            }\n        }\n        this._programPath.unshiftContainer(\"body\", statements);\n    }\n}\nexports.default = ImportInjector;\n\n},{\"91f360fb1387c499\":\"ddnVl\",\"cf00de343fcbdff3\":\"d4Ce7\",\"66964023dc08b95e\":\"aDmg2\",\"67ec0e5b2ffdd26c\":\"gFODp\"}],\"aDmg2\":[function(require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = void 0;\nvar _assert = require(\"d66ac1be881066fc\");\nvar _t = require(\"370131e8e73818f3\");\nconst { callExpression, cloneNode, expressionStatement, identifier, importDeclaration, importDefaultSpecifier, importNamespaceSpecifier, importSpecifier, memberExpression, stringLiteral, variableDeclaration, variableDeclarator } = _t;\nclass ImportBuilder {\n    constructor(importedSource, scope, hub){\n        this._statements = [];\n        this._resultName = null;\n        this._importedSource = void 0;\n        this._scope = scope;\n        this._hub = hub;\n        this._importedSource = importedSource;\n    }\n    done() {\n        return {\n            statements: this._statements,\n            resultName: this._resultName\n        };\n    }\n    import() {\n        this._statements.push(importDeclaration([], stringLiteral(this._importedSource)));\n        return this;\n    }\n    require() {\n        this._statements.push(expressionStatement(callExpression(identifier(\"require\"), [\n            stringLiteral(this._importedSource)\n        ])));\n        return this;\n    }\n    namespace(name = \"namespace\") {\n        const local = this._scope.generateUidIdentifier(name);\n        const statement = this._statements[this._statements.length - 1];\n        _assert(statement.type === \"ImportDeclaration\");\n        _assert(statement.specifiers.length === 0);\n        statement.specifiers = [\n            importNamespaceSpecifier(local)\n        ];\n        this._resultName = cloneNode(local);\n        return this;\n    }\n    default(name) {\n        const id = this._scope.generateUidIdentifier(name);\n        const statement = this._statements[this._statements.length - 1];\n        _assert(statement.type === \"ImportDeclaration\");\n        _assert(statement.specifiers.length === 0);\n        statement.specifiers = [\n            importDefaultSpecifier(id)\n        ];\n        this._resultName = cloneNode(id);\n        return this;\n    }\n    named(name, importName) {\n        if (importName === \"default\") return this.default(name);\n        const id = this._scope.generateUidIdentifier(name);\n        const statement = this._statements[this._statements.length - 1];\n        _assert(statement.type === \"ImportDeclaration\");\n        _assert(statement.specifiers.length === 0);\n        statement.specifiers = [\n            importSpecifier(id, identifier(importName))\n        ];\n        this._resultName = cloneNode(id);\n        return this;\n    }\n    var(name) {\n        const id = this._scope.generateUidIdentifier(name);\n        let statement = this._statements[this._statements.length - 1];\n        if (statement.type !== \"ExpressionStatement\") {\n            _assert(this._resultName);\n            statement = expressionStatement(this._resultName);\n            this._statements.push(statement);\n        }\n        this._statements[this._statements.length - 1] = variableDeclaration(\"var\", [\n            variableDeclarator(id, statement.expression)\n        ]);\n        this._resultName = cloneNode(id);\n        return this;\n    }\n    defaultInterop() {\n        return this._interop(this._hub.addHelper(\"interopRequireDefault\"));\n    }\n    wildcardInterop() {\n        return this._interop(this._hub.addHelper(\"interopRequireWildcard\"));\n    }\n    _interop(callee) {\n        const statement = this._statements[this._statements.length - 1];\n        if (statement.type === \"ExpressionStatement\") statement.expression = callExpression(callee, [\n            statement.expression\n        ]);\n        else if (statement.type === \"VariableDeclaration\") {\n            _assert(statement.declarations.length === 1);\n            statement.declarations[0].init = callExpression(callee, [\n                statement.declarations[0].init\n            ]);\n        } else _assert.fail(\"Unexpected type.\");\n        return this;\n    }\n    prop(name) {\n        const statement = this._statements[this._statements.length - 1];\n        if (statement.type === \"ExpressionStatement\") statement.expression = memberExpression(statement.expression, identifier(name));\n        else if (statement.type === \"VariableDeclaration\") {\n            _assert(statement.declarations.length === 1);\n            statement.declarations[0].init = memberExpression(statement.declarations[0].init, identifier(name));\n        } else _assert.fail(\"Unexpected type:\" + statement.type);\n        return this;\n    }\n    read(name) {\n        this._resultName = memberExpression(this._resultName, identifier(name));\n    }\n}\nexports.default = ImportBuilder;\n\n},{\"d66ac1be881066fc\":\"ddnVl\",\"370131e8e73818f3\":\"d4Ce7\"}],\"gFODp\":[function(require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = isModule;\nfunction isModule(path) {\n    const { sourceType } = path.node;\n    if (sourceType !== \"module\" && sourceType !== \"script\") throw path.buildCodeFrameError(`Unknown sourceType \"${sourceType}\", cannot transform.`);\n    return path.node.sourceType === \"module\";\n}\n\n},{}],\"kuG7t\":[function(require,module,exports) {\n\"use strict\";\nvar __assign = this && this.__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar named_references_1 = require(\"580b8b327ea885ef\");\nvar numeric_unicode_map_1 = require(\"a7646905cfcc3842\");\nvar surrogate_pairs_1 = require(\"6d7093cdf66827e0\");\nvar allNamedReferences = __assign(__assign({}, named_references_1.namedReferences), {\n    all: named_references_1.namedReferences.html5\n});\nvar encodeRegExps = {\n    specialChars: /[<>'\"&]/g,\n    nonAscii: /(?:[<>'\"&\\u0080-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g,\n    nonAsciiPrintable: /(?:[<>'\"&\\x01-\\x08\\x11-\\x15\\x17-\\x1F\\x7f-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g,\n    extensive: /(?:[\\x01-\\x0c\\x0e-\\x1f\\x21-\\x2c\\x2e-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7d\\x7f-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g\n};\nvar defaultEncodeOptions = {\n    mode: \"specialChars\",\n    level: \"all\",\n    numeric: \"decimal\"\n};\n/** Encodes all the necessary (specified by `level`) characters in the text */ function encode(text, _a) {\n    var _b = _a === void 0 ? defaultEncodeOptions : _a, _c = _b.mode, mode = _c === void 0 ? \"specialChars\" : _c, _d = _b.numeric, numeric = _d === void 0 ? \"decimal\" : _d, _e = _b.level, level = _e === void 0 ? \"all\" : _e;\n    if (!text) return \"\";\n    var encodeRegExp = encodeRegExps[mode];\n    var references = allNamedReferences[level].characters;\n    var isHex = numeric === \"hexadecimal\";\n    encodeRegExp.lastIndex = 0;\n    var _b = encodeRegExp.exec(text);\n    var _c;\n    if (_b) {\n        _c = \"\";\n        var _d = 0;\n        do {\n            if (_d !== _b.index) _c += text.substring(_d, _b.index);\n            var _e = _b[0];\n            var result_1 = references[_e];\n            if (!result_1) {\n                var code_1 = _e.length > 1 ? surrogate_pairs_1.getCodePoint(_e, 0) : _e.charCodeAt(0);\n                result_1 = (isHex ? \"&#x\" + code_1.toString(16) : \"&#\" + code_1) + \";\";\n            }\n            _c += result_1;\n            _d = _b.index + _e.length;\n        }while (_b = encodeRegExp.exec(text));\n        if (_d !== text.length) _c += text.substring(_d);\n    } else _c = text;\n    return _c;\n}\nexports.encode = encode;\nvar defaultDecodeOptions = {\n    scope: \"body\",\n    level: \"all\"\n};\nvar strict = /&(?:#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);/g;\nvar attribute = /&(?:#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+)[;=]?/g;\nvar baseDecodeRegExps = {\n    xml: {\n        strict: strict,\n        attribute: attribute,\n        body: named_references_1.bodyRegExps.xml\n    },\n    html4: {\n        strict: strict,\n        attribute: attribute,\n        body: named_references_1.bodyRegExps.html4\n    },\n    html5: {\n        strict: strict,\n        attribute: attribute,\n        body: named_references_1.bodyRegExps.html5\n    }\n};\nvar decodeRegExps = __assign(__assign({}, baseDecodeRegExps), {\n    all: baseDecodeRegExps.html5\n});\nvar fromCharCode = String.fromCharCode;\nvar outOfBoundsChar = fromCharCode(65533);\nvar defaultDecodeEntityOptions = {\n    level: \"all\"\n};\n/** Decodes a single entity */ function decodeEntity(entity, _a) {\n    var _b = (_a === void 0 ? defaultDecodeEntityOptions : _a).level, level = _b === void 0 ? \"all\" : _b;\n    if (!entity) return \"\";\n    var _b = entity;\n    var decodeEntityLastChar_1 = entity[entity.length - 1];\n    var decodeResultByReference_1 = allNamedReferences[level].entities[entity];\n    if (decodeResultByReference_1) _b = decodeResultByReference_1;\n    else if (entity[0] === \"&\" && entity[1] === \"#\") {\n        var decodeSecondChar_1 = entity[2];\n        var decodeCode_1 = decodeSecondChar_1 == \"x\" || decodeSecondChar_1 == \"X\" ? parseInt(entity.substr(3), 16) : parseInt(entity.substr(2));\n        _b = decodeCode_1 >= 0x10ffff ? outOfBoundsChar : decodeCode_1 > 65535 ? surrogate_pairs_1.fromCodePoint(decodeCode_1) : fromCharCode(numeric_unicode_map_1.numericUnicodeMap[decodeCode_1] || decodeCode_1);\n    }\n    return _b;\n}\nexports.decodeEntity = decodeEntity;\n/** Decodes all entities in the text */ function decode(text, _a) {\n    var decodeSecondChar_1 = _a === void 0 ? defaultDecodeOptions : _a, decodeCode_1 = decodeSecondChar_1.level, level = decodeCode_1 === void 0 ? \"all\" : decodeCode_1, _b = decodeSecondChar_1.scope, scope = _b === void 0 ? level === \"xml\" ? \"strict\" : \"body\" : _b;\n    if (!text) return \"\";\n    var decodeRegExp = decodeRegExps[level][scope];\n    var references = allNamedReferences[level].entities;\n    var isAttribute = scope === \"attribute\";\n    var isStrict = scope === \"strict\";\n    decodeRegExp.lastIndex = 0;\n    var replaceMatch_1 = decodeRegExp.exec(text);\n    var replaceResult_1;\n    if (replaceMatch_1) {\n        replaceResult_1 = \"\";\n        var replaceLastIndex_1 = 0;\n        do {\n            if (replaceLastIndex_1 !== replaceMatch_1.index) replaceResult_1 += text.substring(replaceLastIndex_1, replaceMatch_1.index);\n            var replaceInput_1 = replaceMatch_1[0];\n            var decodeResult_1 = replaceInput_1;\n            var decodeEntityLastChar_2 = replaceInput_1[replaceInput_1.length - 1];\n            if (isAttribute && decodeEntityLastChar_2 === \"=\") decodeResult_1 = replaceInput_1;\n            else if (isStrict && decodeEntityLastChar_2 !== \";\") decodeResult_1 = replaceInput_1;\n            else {\n                var decodeResultByReference_2 = references[replaceInput_1];\n                if (decodeResultByReference_2) decodeResult_1 = decodeResultByReference_2;\n                else if (replaceInput_1[0] === \"&\" && replaceInput_1[1] === \"#\") {\n                    var decodeSecondChar_2 = replaceInput_1[2];\n                    var decodeCode_2 = decodeSecondChar_2 == \"x\" || decodeSecondChar_2 == \"X\" ? parseInt(replaceInput_1.substr(3), 16) : parseInt(replaceInput_1.substr(2));\n                    decodeResult_1 = decodeCode_2 >= 0x10ffff ? outOfBoundsChar : decodeCode_2 > 65535 ? surrogate_pairs_1.fromCodePoint(decodeCode_2) : fromCharCode(numeric_unicode_map_1.numericUnicodeMap[decodeCode_2] || decodeCode_2);\n                }\n            }\n            replaceResult_1 += decodeResult_1;\n            replaceLastIndex_1 = replaceMatch_1.index + replaceInput_1.length;\n        }while (replaceMatch_1 = decodeRegExp.exec(text));\n        if (replaceLastIndex_1 !== text.length) replaceResult_1 += text.substring(replaceLastIndex_1);\n    } else replaceResult_1 = text;\n    return replaceResult_1;\n}\nexports.decode = decode;\n\n},{\"580b8b327ea885ef\":\"bGDQz\",\"a7646905cfcc3842\":\"bBMFa\",\"6d7093cdf66827e0\":\"6NR3U\"}],\"bGDQz\":[function(require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.bodyRegExps = {\n    xml: /&(?:#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);?/g,\n    html4: /&(?:nbsp|iexcl|cent|pound|curren|yen|brvbar|sect|uml|copy|ordf|laquo|not|shy|reg|macr|deg|plusmn|sup2|sup3|acute|micro|para|middot|cedil|sup1|ordm|raquo|frac14|frac12|frac34|iquest|Agrave|Aacute|Acirc|Atilde|Auml|Aring|AElig|Ccedil|Egrave|Eacute|Ecirc|Euml|Igrave|Iacute|Icirc|Iuml|ETH|Ntilde|Ograve|Oacute|Ocirc|Otilde|Ouml|times|Oslash|Ugrave|Uacute|Ucirc|Uuml|Yacute|THORN|szlig|agrave|aacute|acirc|atilde|auml|aring|aelig|ccedil|egrave|eacute|ecirc|euml|igrave|iacute|icirc|iuml|eth|ntilde|ograve|oacute|ocirc|otilde|ouml|divide|oslash|ugrave|uacute|ucirc|uuml|yacute|thorn|yuml|quot|amp|lt|gt|#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);?/g,\n    html5: /&(?:AElig|AMP|Aacute|Acirc|Agrave|Aring|Atilde|Auml|COPY|Ccedil|ETH|Eacute|Ecirc|Egrave|Euml|GT|Iacute|Icirc|Igrave|Iuml|LT|Ntilde|Oacute|Ocirc|Ograve|Oslash|Otilde|Ouml|QUOT|REG|THORN|Uacute|Ucirc|Ugrave|Uuml|Yacute|aacute|acirc|acute|aelig|agrave|amp|aring|atilde|auml|brvbar|ccedil|cedil|cent|copy|curren|deg|divide|eacute|ecirc|egrave|eth|euml|frac12|frac14|frac34|gt|iacute|icirc|iexcl|igrave|iquest|iuml|laquo|lt|macr|micro|middot|nbsp|not|ntilde|oacute|ocirc|ograve|ordf|ordm|oslash|otilde|ouml|para|plusmn|pound|quot|raquo|reg|sect|shy|sup1|sup2|sup3|szlig|thorn|times|uacute|ucirc|ugrave|uml|uuml|yacute|yen|yuml|#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);?/g\n};\nexports.namedReferences = {\n    xml: {\n        entities: {\n            \"&lt;\": \"<\",\n            \"&gt;\": \">\",\n            \"&quot;\": '\"',\n            \"&apos;\": \"'\",\n            \"&amp;\": \"&\"\n        },\n        characters: {\n            \"<\": \"&lt;\",\n            \">\": \"&gt;\",\n            '\"': \"&quot;\",\n            \"'\": \"&apos;\",\n            \"&\": \"&amp;\"\n        }\n    },\n    html4: {\n        entities: {\n            \"&apos;\": \"'\",\n            \"&nbsp\": \"\\xa0\",\n            \"&nbsp;\": \"\\xa0\",\n            \"&iexcl\": \"\\xa1\",\n            \"&iexcl;\": \"\\xa1\",\n            \"&cent\": \"\\xa2\",\n            \"&cent;\": \"\\xa2\",\n            \"&pound\": \"\\xa3\",\n            \"&pound;\": \"\\xa3\",\n            \"&curren\": \"\\xa4\",\n            \"&curren;\": \"\\xa4\",\n            \"&yen\": \"\\xa5\",\n            \"&yen;\": \"\\xa5\",\n            \"&brvbar\": \"\\xa6\",\n            \"&brvbar;\": \"\\xa6\",\n            \"&sect\": \"\\xa7\",\n            \"&sect;\": \"\\xa7\",\n            \"&uml\": \"\\xa8\",\n            \"&uml;\": \"\\xa8\",\n            \"&copy\": \"\\xa9\",\n            \"&copy;\": \"\\xa9\",\n            \"&ordf\": \"\\xaa\",\n            \"&ordf;\": \"\\xaa\",\n            \"&laquo\": \"\\xab\",\n            \"&laquo;\": \"\\xab\",\n            \"&not\": \"\\xac\",\n            \"&not;\": \"\\xac\",\n            \"&shy\": \"\\xad\",\n            \"&shy;\": \"\\xad\",\n            \"&reg\": \"\\xae\",\n            \"&reg;\": \"\\xae\",\n            \"&macr\": \"\\xaf\",\n            \"&macr;\": \"\\xaf\",\n            \"&deg\": \"\\xb0\",\n            \"&deg;\": \"\\xb0\",\n            \"&plusmn\": \"\\xb1\",\n            \"&plusmn;\": \"\\xb1\",\n            \"&sup2\": \"\\xb2\",\n            \"&sup2;\": \"\\xb2\",\n            \"&sup3\": \"\\xb3\",\n            \"&sup3;\": \"\\xb3\",\n            \"&acute\": \"\\xb4\",\n            \"&acute;\": \"\\xb4\",\n            \"&micro\": \"\\xb5\",\n            \"&micro;\": \"\\xb5\",\n            \"&para\": \"\\xb6\",\n            \"&para;\": \"\\xb6\",\n            \"&middot\": \"\\xb7\",\n            \"&middot;\": \"\\xb7\",\n            \"&cedil\": \"\\xb8\",\n            \"&cedil;\": \"\\xb8\",\n            \"&sup1\": \"\\xb9\",\n            \"&sup1;\": \"\\xb9\",\n            \"&ordm\": \"\\xba\",\n            \"&ordm;\": \"\\xba\",\n            \"&raquo\": \"\\xbb\",\n            \"&raquo;\": \"\\xbb\",\n            \"&frac14\": \"\\xbc\",\n            \"&frac14;\": \"\\xbc\",\n            \"&frac12\": \"\\xbd\",\n            \"&frac12;\": \"\\xbd\",\n            \"&frac34\": \"\\xbe\",\n            \"&frac34;\": \"\\xbe\",\n            \"&iquest\": \"\\xbf\",\n            \"&iquest;\": \"\\xbf\",\n            \"&Agrave\": \"\\xc0\",\n            \"&Agrave;\": \"\\xc0\",\n            \"&Aacute\": \"\\xc1\",\n            \"&Aacute;\": \"\\xc1\",\n            \"&Acirc\": \"\\xc2\",\n            \"&Acirc;\": \"\\xc2\",\n            \"&Atilde\": \"\\xc3\",\n            \"&Atilde;\": \"\\xc3\",\n            \"&Auml\": \"\\xc4\",\n            \"&Auml;\": \"\\xc4\",\n            \"&Aring\": \"\\xc5\",\n            \"&Aring;\": \"\\xc5\",\n            \"&AElig\": \"\\xc6\",\n            \"&AElig;\": \"\\xc6\",\n            \"&Ccedil\": \"\\xc7\",\n            \"&Ccedil;\": \"\\xc7\",\n            \"&Egrave\": \"\\xc8\",\n            \"&Egrave;\": \"\\xc8\",\n            \"&Eacute\": \"\\xc9\",\n            \"&Eacute;\": \"\\xc9\",\n            \"&Ecirc\": \"\\xca\",\n            \"&Ecirc;\": \"\\xca\",\n            \"&Euml\": \"\\xcb\",\n            \"&Euml;\": \"\\xcb\",\n            \"&Igrave\": \"\\xcc\",\n            \"&Igrave;\": \"\\xcc\",\n            \"&Iacute\": \"\\xcd\",\n            \"&Iacute;\": \"\\xcd\",\n            \"&Icirc\": \"\\xce\",\n            \"&Icirc;\": \"\\xce\",\n            \"&Iuml\": \"\\xcf\",\n            \"&Iuml;\": \"\\xcf\",\n            \"&ETH\": \"\\xd0\",\n            \"&ETH;\": \"\\xd0\",\n            \"&Ntilde\": \"\\xd1\",\n            \"&Ntilde;\": \"\\xd1\",\n            \"&Ograve\": \"\\xd2\",\n            \"&Ograve;\": \"\\xd2\",\n            \"&Oacute\": \"\\xd3\",\n            \"&Oacute;\": \"\\xd3\",\n            \"&Ocirc\": \"\\xd4\",\n            \"&Ocirc;\": \"\\xd4\",\n            \"&Otilde\": \"\\xd5\",\n            \"&Otilde;\": \"\\xd5\",\n            \"&Ouml\": \"\\xd6\",\n            \"&Ouml;\": \"\\xd6\",\n            \"&times\": \"\\xd7\",\n            \"&times;\": \"\\xd7\",\n            \"&Oslash\": \"\\xd8\",\n            \"&Oslash;\": \"\\xd8\",\n            \"&Ugrave\": \"\\xd9\",\n            \"&Ugrave;\": \"\\xd9\",\n            \"&Uacute\": \"\\xda\",\n            \"&Uacute;\": \"\\xda\",\n            \"&Ucirc\": \"\\xdb\",\n            \"&Ucirc;\": \"\\xdb\",\n            \"&Uuml\": \"\\xdc\",\n            \"&Uuml;\": \"\\xdc\",\n            \"&Yacute\": \"\\xdd\",\n            \"&Yacute;\": \"\\xdd\",\n            \"&THORN\": \"\\xde\",\n            \"&THORN;\": \"\\xde\",\n            \"&szlig\": \"\\xdf\",\n            \"&szlig;\": \"\\xdf\",\n            \"&agrave\": \"\\xe0\",\n            \"&agrave;\": \"\\xe0\",\n            \"&aacute\": \"\\xe1\",\n            \"&aacute;\": \"\\xe1\",\n            \"&acirc\": \"\\xe2\",\n            \"&acirc;\": \"\\xe2\",\n            \"&atilde\": \"\\xe3\",\n            \"&atilde;\": \"\\xe3\",\n            \"&auml\": \"\\xe4\",\n            \"&auml;\": \"\\xe4\",\n            \"&aring\": \"\\xe5\",\n            \"&aring;\": \"\\xe5\",\n            \"&aelig\": \"\\xe6\",\n            \"&aelig;\": \"\\xe6\",\n            \"&ccedil\": \"\\xe7\",\n            \"&ccedil;\": \"\\xe7\",\n            \"&egrave\": \"\\xe8\",\n            \"&egrave;\": \"\\xe8\",\n            \"&eacute\": \"\\xe9\",\n            \"&eacute;\": \"\\xe9\",\n            \"&ecirc\": \"\\xea\",\n            \"&ecirc;\": \"\\xea\",\n            \"&euml\": \"\\xeb\",\n            \"&euml;\": \"\\xeb\",\n            \"&igrave\": \"\\xec\",\n            \"&igrave;\": \"\\xec\",\n            \"&iacute\": \"\\xed\",\n            \"&iacute;\": \"\\xed\",\n            \"&icirc\": \"\\xee\",\n            \"&icirc;\": \"\\xee\",\n            \"&iuml\": \"\\xef\",\n            \"&iuml;\": \"\\xef\",\n            \"&eth\": \"\\xf0\",\n            \"&eth;\": \"\\xf0\",\n            \"&ntilde\": \"\\xf1\",\n            \"&ntilde;\": \"\\xf1\",\n            \"&ograve\": \"\\xf2\",\n            \"&ograve;\": \"\\xf2\",\n            \"&oacute\": \"\\xf3\",\n            \"&oacute;\": \"\\xf3\",\n            \"&ocirc\": \"\\xf4\",\n            \"&ocirc;\": \"\\xf4\",\n            \"&otilde\": \"\\xf5\",\n            \"&otilde;\": \"\\xf5\",\n            \"&ouml\": \"\\xf6\",\n            \"&ouml;\": \"\\xf6\",\n            \"&divide\": \"\\xf7\",\n            \"&divide;\": \"\\xf7\",\n            \"&oslash\": \"\\xf8\",\n            \"&oslash;\": \"\\xf8\",\n            \"&ugrave\": \"\\xf9\",\n            \"&ugrave;\": \"\\xf9\",\n            \"&uacute\": \"\\xfa\",\n            \"&uacute;\": \"\\xfa\",\n            \"&ucirc\": \"\\xfb\",\n            \"&ucirc;\": \"\\xfb\",\n            \"&uuml\": \"\\xfc\",\n            \"&uuml;\": \"\\xfc\",\n            \"&yacute\": \"\\xfd\",\n            \"&yacute;\": \"\\xfd\",\n            \"&thorn\": \"\\xfe\",\n            \"&thorn;\": \"\\xfe\",\n            \"&yuml\": \"\\xff\",\n            \"&yuml;\": \"\\xff\",\n            \"&quot\": '\"',\n            \"&quot;\": '\"',\n            \"&amp\": \"&\",\n            \"&amp;\": \"&\",\n            \"&lt\": \"<\",\n            \"&lt;\": \"<\",\n            \"&gt\": \">\",\n            \"&gt;\": \">\",\n            \"&OElig;\": \"\\u0152\",\n            \"&oelig;\": \"\\u0153\",\n            \"&Scaron;\": \"\\u0160\",\n            \"&scaron;\": \"\\u0161\",\n            \"&Yuml;\": \"\\u0178\",\n            \"&circ;\": \"\\u02C6\",\n            \"&tilde;\": \"\\u02DC\",\n            \"&ensp;\": \"\\u2002\",\n            \"&emsp;\": \"\\u2003\",\n            \"&thinsp;\": \"\\u2009\",\n            \"&zwnj;\": \"\\u200C\",\n            \"&zwj;\": \"\\u200D\",\n            \"&lrm;\": \"\\u200E\",\n            \"&rlm;\": \"\\u200F\",\n            \"&ndash;\": \"\\u2013\",\n            \"&mdash;\": \"\\u2014\",\n            \"&lsquo;\": \"\\u2018\",\n            \"&rsquo;\": \"\\u2019\",\n            \"&sbquo;\": \"\\u201A\",\n            \"&ldquo;\": \"\\u201C\",\n            \"&rdquo;\": \"\\u201D\",\n            \"&bdquo;\": \"\\u201E\",\n            \"&dagger;\": \"\\u2020\",\n            \"&Dagger;\": \"\\u2021\",\n            \"&permil;\": \"\\u2030\",\n            \"&lsaquo;\": \"\\u2039\",\n            \"&rsaquo;\": \"\\u203A\",\n            \"&euro;\": \"\\u20AC\",\n            \"&fnof;\": \"\\u0192\",\n            \"&Alpha;\": \"\\u0391\",\n            \"&Beta;\": \"\\u0392\",\n            \"&Gamma;\": \"\\u0393\",\n            \"&Delta;\": \"\\u0394\",\n            \"&Epsilon;\": \"\\u0395\",\n            \"&Zeta;\": \"\\u0396\",\n            \"&Eta;\": \"\\u0397\",\n            \"&Theta;\": \"\\u0398\",\n            \"&Iota;\": \"\\u0399\",\n            \"&Kappa;\": \"\\u039A\",\n            \"&Lambda;\": \"\\u039B\",\n            \"&Mu;\": \"\\u039C\",\n            \"&Nu;\": \"\\u039D\",\n            \"&Xi;\": \"\\u039E\",\n            \"&Omicron;\": \"\\u039F\",\n            \"&Pi;\": \"\\u03A0\",\n            \"&Rho;\": \"\\u03A1\",\n            \"&Sigma;\": \"\\u03A3\",\n            \"&Tau;\": \"\\u03A4\",\n            \"&Upsilon;\": \"\\u03A5\",\n            \"&Phi;\": \"\\u03A6\",\n            \"&Chi;\": \"\\u03A7\",\n            \"&Psi;\": \"\\u03A8\",\n            \"&Omega;\": \"\\u03A9\",\n            \"&alpha;\": \"\\u03B1\",\n            \"&beta;\": \"\\u03B2\",\n            \"&gamma;\": \"\\u03B3\",\n            \"&delta;\": \"\\u03B4\",\n            \"&epsilon;\": \"\\u03B5\",\n            \"&zeta;\": \"\\u03B6\",\n            \"&eta;\": \"\\u03B7\",\n            \"&theta;\": \"\\u03B8\",\n            \"&iota;\": \"\\u03B9\",\n            \"&kappa;\": \"\\u03BA\",\n            \"&lambda;\": \"\\u03BB\",\n            \"&mu;\": \"\\u03BC\",\n            \"&nu;\": \"\\u03BD\",\n            \"&xi;\": \"\\u03BE\",\n            \"&omicron;\": \"\\u03BF\",\n            \"&pi;\": \"\\u03C0\",\n            \"&rho;\": \"\\u03C1\",\n            \"&sigmaf;\": \"\\u03C2\",\n            \"&sigma;\": \"\\u03C3\",\n            \"&tau;\": \"\\u03C4\",\n            \"&upsilon;\": \"\\u03C5\",\n            \"&phi;\": \"\\u03C6\",\n            \"&chi;\": \"\\u03C7\",\n            \"&psi;\": \"\\u03C8\",\n            \"&omega;\": \"\\u03C9\",\n            \"&thetasym;\": \"\\u03D1\",\n            \"&upsih;\": \"\\u03D2\",\n            \"&piv;\": \"\\u03D6\",\n            \"&bull;\": \"\\u2022\",\n            \"&hellip;\": \"\\u2026\",\n            \"&prime;\": \"\\u2032\",\n            \"&Prime;\": \"\\u2033\",\n            \"&oline;\": \"\\u203E\",\n            \"&frasl;\": \"\\u2044\",\n            \"&weierp;\": \"\\u2118\",\n            \"&image;\": \"\\u2111\",\n            \"&real;\": \"\\u211C\",\n            \"&trade;\": \"\\u2122\",\n            \"&alefsym;\": \"\\u2135\",\n            \"&larr;\": \"\\u2190\",\n            \"&uarr;\": \"\\u2191\",\n            \"&rarr;\": \"\\u2192\",\n            \"&darr;\": \"\\u2193\",\n            \"&harr;\": \"\\u2194\",\n            \"&crarr;\": \"\\u21B5\",\n            \"&lArr;\": \"\\u21D0\",\n            \"&uArr;\": \"\\u21D1\",\n            \"&rArr;\": \"\\u21D2\",\n            \"&dArr;\": \"\\u21D3\",\n            \"&hArr;\": \"\\u21D4\",\n            \"&forall;\": \"\\u2200\",\n            \"&part;\": \"\\u2202\",\n            \"&exist;\": \"\\u2203\",\n            \"&empty;\": \"\\u2205\",\n            \"&nabla;\": \"\\u2207\",\n            \"&isin;\": \"\\u2208\",\n            \"&notin;\": \"\\u2209\",\n            \"&ni;\": \"\\u220B\",\n            \"&prod;\": \"\\u220F\",\n            \"&sum;\": \"\\u2211\",\n            \"&minus;\": \"\\u2212\",\n            \"&lowast;\": \"\\u2217\",\n            \"&radic;\": \"\\u221A\",\n            \"&prop;\": \"\\u221D\",\n            \"&infin;\": \"\\u221E\",\n            \"&ang;\": \"\\u2220\",\n            \"&and;\": \"\\u2227\",\n            \"&or;\": \"\\u2228\",\n            \"&cap;\": \"\\u2229\",\n            \"&cup;\": \"\\u222A\",\n            \"&int;\": \"\\u222B\",\n            \"&there4;\": \"\\u2234\",\n            \"&sim;\": \"\\u223C\",\n            \"&cong;\": \"\\u2245\",\n            \"&asymp;\": \"\\u2248\",\n            \"&ne;\": \"\\u2260\",\n            \"&equiv;\": \"\\u2261\",\n            \"&le;\": \"\\u2264\",\n            \"&ge;\": \"\\u2265\",\n            \"&sub;\": \"\\u2282\",\n            \"&sup;\": \"\\u2283\",\n            \"&nsub;\": \"\\u2284\",\n            \"&sube;\": \"\\u2286\",\n            \"&supe;\": \"\\u2287\",\n            \"&oplus;\": \"\\u2295\",\n            \"&otimes;\": \"\\u2297\",\n            \"&perp;\": \"\\u22A5\",\n            \"&sdot;\": \"\\u22C5\",\n            \"&lceil;\": \"\\u2308\",\n            \"&rceil;\": \"\\u2309\",\n            \"&lfloor;\": \"\\u230A\",\n            \"&rfloor;\": \"\\u230B\",\n            \"&lang;\": \"\\u2329\",\n            \"&rang;\": \"\\u232A\",\n            \"&loz;\": \"\\u25CA\",\n            \"&spades;\": \"\\u2660\",\n            \"&clubs;\": \"\\u2663\",\n            \"&hearts;\": \"\\u2665\",\n            \"&diams;\": \"\\u2666\"\n        },\n        characters: {\n            \"'\": \"&apos;\",\n            \"\\xa0\": \"&nbsp;\",\n            \"\\xa1\": \"&iexcl;\",\n            \"\\xa2\": \"&cent;\",\n            \"\\xa3\": \"&pound;\",\n            \"\\xa4\": \"&curren;\",\n            \"\\xa5\": \"&yen;\",\n            \"\\xa6\": \"&brvbar;\",\n            \"\\xa7\": \"&sect;\",\n            \"\\xa8\": \"&uml;\",\n            \"\\xa9\": \"&copy;\",\n            \"\\xaa\": \"&ordf;\",\n            \"\\xab\": \"&laquo;\",\n            \"\\xac\": \"&not;\",\n            \"\\xad\": \"&shy;\",\n            \"\\xae\": \"&reg;\",\n            \"\\xaf\": \"&macr;\",\n            \"\\xb0\": \"&deg;\",\n            \"\\xb1\": \"&plusmn;\",\n            \"\\xb2\": \"&sup2;\",\n            \"\\xb3\": \"&sup3;\",\n            \"\\xb4\": \"&acute;\",\n            \"\\xb5\": \"&micro;\",\n            \"\\xb6\": \"&para;\",\n            \"\\xb7\": \"&middot;\",\n            \"\\xb8\": \"&cedil;\",\n            \"\\xb9\": \"&sup1;\",\n            \"\\xba\": \"&ordm;\",\n            \"\\xbb\": \"&raquo;\",\n            \"\\xbc\": \"&frac14;\",\n            \"\\xbd\": \"&frac12;\",\n            \"\\xbe\": \"&frac34;\",\n            \"\\xbf\": \"&iquest;\",\n            \"\\xc0\": \"&Agrave;\",\n            \"\\xc1\": \"&Aacute;\",\n            \"\\xc2\": \"&Acirc;\",\n            \"\\xc3\": \"&Atilde;\",\n            \"\\xc4\": \"&Auml;\",\n            \"\\xc5\": \"&Aring;\",\n            \"\\xc6\": \"&AElig;\",\n            \"\\xc7\": \"&Ccedil;\",\n            \"\\xc8\": \"&Egrave;\",\n            \"\\xc9\": \"&Eacute;\",\n            \"\\xca\": \"&Ecirc;\",\n            \"\\xcb\": \"&Euml;\",\n            \"\\xcc\": \"&Igrave;\",\n            \"\\xcd\": \"&Iacute;\",\n            \"\\xce\": \"&Icirc;\",\n            \"\\xcf\": \"&Iuml;\",\n            \"\\xd0\": \"&ETH;\",\n            \"\\xd1\": \"&Ntilde;\",\n            \"\\xd2\": \"&Ograve;\",\n            \"\\xd3\": \"&Oacute;\",\n            \"\\xd4\": \"&Ocirc;\",\n            \"\\xd5\": \"&Otilde;\",\n            \"\\xd6\": \"&Ouml;\",\n            \"\\xd7\": \"&times;\",\n            \"\\xd8\": \"&Oslash;\",\n            \"\\xd9\": \"&Ugrave;\",\n            \"\\xda\": \"&Uacute;\",\n            \"\\xdb\": \"&Ucirc;\",\n            \"\\xdc\": \"&Uuml;\",\n            \"\\xdd\": \"&Yacute;\",\n            \"\\xde\": \"&THORN;\",\n            \"\\xdf\": \"&szlig;\",\n            \"\\xe0\": \"&agrave;\",\n            \"\\xe1\": \"&aacute;\",\n            \"\\xe2\": \"&acirc;\",\n            \"\\xe3\": \"&atilde;\",\n            \"\\xe4\": \"&auml;\",\n            \"\\xe5\": \"&aring;\",\n            \"\\xe6\": \"&aelig;\",\n            \"\\xe7\": \"&ccedil;\",\n            \"\\xe8\": \"&egrave;\",\n            \"\\xe9\": \"&eacute;\",\n            \"\\xea\": \"&ecirc;\",\n            \"\\xeb\": \"&euml;\",\n            \"\\xec\": \"&igrave;\",\n            \"\\xed\": \"&iacute;\",\n            \"\\xee\": \"&icirc;\",\n            \"\\xef\": \"&iuml;\",\n            \"\\xf0\": \"&eth;\",\n            \"\\xf1\": \"&ntilde;\",\n            \"\\xf2\": \"&ograve;\",\n            \"\\xf3\": \"&oacute;\",\n            \"\\xf4\": \"&ocirc;\",\n            \"\\xf5\": \"&otilde;\",\n            \"\\xf6\": \"&ouml;\",\n            \"\\xf7\": \"&divide;\",\n            \"\\xf8\": \"&oslash;\",\n            \"\\xf9\": \"&ugrave;\",\n            \"\\xfa\": \"&uacute;\",\n            \"\\xfb\": \"&ucirc;\",\n            \"\\xfc\": \"&uuml;\",\n            \"\\xfd\": \"&yacute;\",\n            \"\\xfe\": \"&thorn;\",\n            \"\\xff\": \"&yuml;\",\n            '\"': \"&quot;\",\n            \"&\": \"&amp;\",\n            \"<\": \"&lt;\",\n            \">\": \"&gt;\",\n            \"\\u0152\": \"&OElig;\",\n            \"\\u0153\": \"&oelig;\",\n            \"\\u0160\": \"&Scaron;\",\n            \"\\u0161\": \"&scaron;\",\n            \"\\u0178\": \"&Yuml;\",\n            \"\\u02C6\": \"&circ;\",\n            \"\\u02DC\": \"&tilde;\",\n            \"\\u2002\": \"&ensp;\",\n            \"\\u2003\": \"&emsp;\",\n            \"\\u2009\": \"&thinsp;\",\n            \"\\u200C\": \"&zwnj;\",\n            \"\\u200D\": \"&zwj;\",\n            \"\\u200E\": \"&lrm;\",\n            \"\\u200F\": \"&rlm;\",\n            \"\\u2013\": \"&ndash;\",\n            \"\\u2014\": \"&mdash;\",\n            \"\\u2018\": \"&lsquo;\",\n            \"\\u2019\": \"&rsquo;\",\n            \"\\u201A\": \"&sbquo;\",\n            \"\\u201C\": \"&ldquo;\",\n            \"\\u201D\": \"&rdquo;\",\n            \"\\u201E\": \"&bdquo;\",\n            \"\\u2020\": \"&dagger;\",\n            \"\\u2021\": \"&Dagger;\",\n            \"\\u2030\": \"&permil;\",\n            \"\\u2039\": \"&lsaquo;\",\n            \"\\u203A\": \"&rsaquo;\",\n            \"\\u20AC\": \"&euro;\",\n            \"\\u0192\": \"&fnof;\",\n            \"\\u0391\": \"&Alpha;\",\n            \"\\u0392\": \"&Beta;\",\n            \"\\u0393\": \"&Gamma;\",\n            \"\\u0394\": \"&Delta;\",\n            \"\\u0395\": \"&Epsilon;\",\n            \"\\u0396\": \"&Zeta;\",\n            \"\\u0397\": \"&Eta;\",\n            \"\\u0398\": \"&Theta;\",\n            \"\\u0399\": \"&Iota;\",\n            \"\\u039A\": \"&Kappa;\",\n            \"\\u039B\": \"&Lambda;\",\n            \"\\u039C\": \"&Mu;\",\n            \"\\u039D\": \"&Nu;\",\n            \"\\u039E\": \"&Xi;\",\n            \"\\u039F\": \"&Omicron;\",\n            \"\\u03A0\": \"&Pi;\",\n            \"\\u03A1\": \"&Rho;\",\n            \"\\u03A3\": \"&Sigma;\",\n            \"\\u03A4\": \"&Tau;\",\n            \"\\u03A5\": \"&Upsilon;\",\n            \"\\u03A6\": \"&Phi;\",\n            \"\\u03A7\": \"&Chi;\",\n            \"\\u03A8\": \"&Psi;\",\n            \"\\u03A9\": \"&Omega;\",\n            \"\\u03B1\": \"&alpha;\",\n            \"\\u03B2\": \"&beta;\",\n            \"\\u03B3\": \"&gamma;\",\n            \"\\u03B4\": \"&delta;\",\n            \"\\u03B5\": \"&epsilon;\",\n            \"\\u03B6\": \"&zeta;\",\n            \"\\u03B7\": \"&eta;\",\n            \"\\u03B8\": \"&theta;\",\n            \"\\u03B9\": \"&iota;\",\n            \"\\u03BA\": \"&kappa;\",\n            \"\\u03BB\": \"&lambda;\",\n            \"\\u03BC\": \"&mu;\",\n            \"\\u03BD\": \"&nu;\",\n            \"\\u03BE\": \"&xi;\",\n            \"\\u03BF\": \"&omicron;\",\n            \"\\u03C0\": \"&pi;\",\n            \"\\u03C1\": \"&rho;\",\n            \"\\u03C2\": \"&sigmaf;\",\n            \"\\u03C3\": \"&sigma;\",\n            \"\\u03C4\": \"&tau;\",\n            \"\\u03C5\": \"&upsilon;\",\n            \"\\u03C6\": \"&phi;\",\n            \"\\u03C7\": \"&chi;\",\n            \"\\u03C8\": \"&psi;\",\n            \"\\u03C9\": \"&omega;\",\n            \"\\u03D1\": \"&thetasym;\",\n            \"\\u03D2\": \"&upsih;\",\n            \"\\u03D6\": \"&piv;\",\n            \"\\u2022\": \"&bull;\",\n            \"\\u2026\": \"&hellip;\",\n            \"\\u2032\": \"&prime;\",\n            \"\\u2033\": \"&Prime;\",\n            \"\\u203E\": \"&oline;\",\n            \"\\u2044\": \"&frasl;\",\n            \"\\u2118\": \"&weierp;\",\n            \"\\u2111\": \"&image;\",\n            \"\\u211C\": \"&real;\",\n            \"\\u2122\": \"&trade;\",\n            \"\\u2135\": \"&alefsym;\",\n            \"\\u2190\": \"&larr;\",\n            \"\\u2191\": \"&uarr;\",\n            \"\\u2192\": \"&rarr;\",\n            \"\\u2193\": \"&darr;\",\n            \"\\u2194\": \"&harr;\",\n            \"\\u21B5\": \"&crarr;\",\n            \"\\u21D0\": \"&lArr;\",\n            \"\\u21D1\": \"&uArr;\",\n            \"\\u21D2\": \"&rArr;\",\n            \"\\u21D3\": \"&dArr;\",\n            \"\\u21D4\": \"&hArr;\",\n            \"\\u2200\": \"&forall;\",\n            \"\\u2202\": \"&part;\",\n            \"\\u2203\": \"&exist;\",\n            \"\\u2205\": \"&empty;\",\n            \"\\u2207\": \"&nabla;\",\n            \"\\u2208\": \"&isin;\",\n            \"\\u2209\": \"&notin;\",\n            \"\\u220B\": \"&ni;\",\n            \"\\u220F\": \"&prod;\",\n            \"\\u2211\": \"&sum;\",\n            \"\\u2212\": \"&minus;\",\n            \"\\u2217\": \"&lowast;\",\n            \"\\u221A\": \"&radic;\",\n            \"\\u221D\": \"&prop;\",\n            \"\\u221E\": \"&infin;\",\n            \"\\u2220\": \"&ang;\",\n            \"\\u2227\": \"&and;\",\n            \"\\u2228\": \"&or;\",\n            \"\\u2229\": \"&cap;\",\n            \"\\u222A\": \"&cup;\",\n            \"\\u222B\": \"&int;\",\n            \"\\u2234\": \"&there4;\",\n            \"\\u223C\": \"&sim;\",\n            \"\\u2245\": \"&cong;\",\n            \"\\u2248\": \"&asymp;\",\n            \"\\u2260\": \"&ne;\",\n            \"\\u2261\": \"&equiv;\",\n            \"\\u2264\": \"&le;\",\n            \"\\u2265\": \"&ge;\",\n            \"\\u2282\": \"&sub;\",\n            \"\\u2283\": \"&sup;\",\n            \"\\u2284\": \"&nsub;\",\n            \"\\u2286\": \"&sube;\",\n            \"\\u2287\": \"&supe;\",\n            \"\\u2295\": \"&oplus;\",\n            \"\\u2297\": \"&otimes;\",\n            \"\\u22A5\": \"&perp;\",\n            \"\\u22C5\": \"&sdot;\",\n            \"\\u2308\": \"&lceil;\",\n            \"\\u2309\": \"&rceil;\",\n            \"\\u230A\": \"&lfloor;\",\n            \"\\u230B\": \"&rfloor;\",\n            \"\\u2329\": \"&lang;\",\n            \"\\u232A\": \"&rang;\",\n            \"\\u25CA\": \"&loz;\",\n            \"\\u2660\": \"&spades;\",\n            \"\\u2663\": \"&clubs;\",\n            \"\\u2665\": \"&hearts;\",\n            \"\\u2666\": \"&diams;\"\n        }\n    },\n    html5: {\n        entities: {\n            \"&AElig\": \"\\xc6\",\n            \"&AElig;\": \"\\xc6\",\n            \"&AMP\": \"&\",\n            \"&AMP;\": \"&\",\n            \"&Aacute\": \"\\xc1\",\n            \"&Aacute;\": \"\\xc1\",\n            \"&Abreve;\": \"\\u0102\",\n            \"&Acirc\": \"\\xc2\",\n            \"&Acirc;\": \"\\xc2\",\n            \"&Acy;\": \"\\u0410\",\n            \"&Afr;\": \"\\uD835\\uDD04\",\n            \"&Agrave\": \"\\xc0\",\n            \"&Agrave;\": \"\\xc0\",\n            \"&Alpha;\": \"\\u0391\",\n            \"&Amacr;\": \"\\u0100\",\n            \"&And;\": \"\\u2A53\",\n            \"&Aogon;\": \"\\u0104\",\n            \"&Aopf;\": \"\\uD835\\uDD38\",\n            \"&ApplyFunction;\": \"\\u2061\",\n            \"&Aring\": \"\\xc5\",\n            \"&Aring;\": \"\\xc5\",\n            \"&Ascr;\": \"\\uD835\\uDC9C\",\n            \"&Assign;\": \"\\u2254\",\n            \"&Atilde\": \"\\xc3\",\n            \"&Atilde;\": \"\\xc3\",\n            \"&Auml\": \"\\xc4\",\n            \"&Auml;\": \"\\xc4\",\n            \"&Backslash;\": \"\\u2216\",\n            \"&Barv;\": \"\\u2AE7\",\n            \"&Barwed;\": \"\\u2306\",\n            \"&Bcy;\": \"\\u0411\",\n            \"&Because;\": \"\\u2235\",\n            \"&Bernoullis;\": \"\\u212C\",\n            \"&Beta;\": \"\\u0392\",\n            \"&Bfr;\": \"\\uD835\\uDD05\",\n            \"&Bopf;\": \"\\uD835\\uDD39\",\n            \"&Breve;\": \"\\u02D8\",\n            \"&Bscr;\": \"\\u212C\",\n            \"&Bumpeq;\": \"\\u224E\",\n            \"&CHcy;\": \"\\u0427\",\n            \"&COPY\": \"\\xa9\",\n            \"&COPY;\": \"\\xa9\",\n            \"&Cacute;\": \"\\u0106\",\n            \"&Cap;\": \"\\u22D2\",\n            \"&CapitalDifferentialD;\": \"\\u2145\",\n            \"&Cayleys;\": \"\\u212D\",\n            \"&Ccaron;\": \"\\u010C\",\n            \"&Ccedil\": \"\\xc7\",\n            \"&Ccedil;\": \"\\xc7\",\n            \"&Ccirc;\": \"\\u0108\",\n            \"&Cconint;\": \"\\u2230\",\n            \"&Cdot;\": \"\\u010A\",\n            \"&Cedilla;\": \"\\xb8\",\n            \"&CenterDot;\": \"\\xb7\",\n            \"&Cfr;\": \"\\u212D\",\n            \"&Chi;\": \"\\u03A7\",\n            \"&CircleDot;\": \"\\u2299\",\n            \"&CircleMinus;\": \"\\u2296\",\n            \"&CirclePlus;\": \"\\u2295\",\n            \"&CircleTimes;\": \"\\u2297\",\n            \"&ClockwiseContourIntegral;\": \"\\u2232\",\n            \"&CloseCurlyDoubleQuote;\": \"\\u201D\",\n            \"&CloseCurlyQuote;\": \"\\u2019\",\n            \"&Colon;\": \"\\u2237\",\n            \"&Colone;\": \"\\u2A74\",\n            \"&Congruent;\": \"\\u2261\",\n            \"&Conint;\": \"\\u222F\",\n            \"&ContourIntegral;\": \"\\u222E\",\n            \"&Copf;\": \"\\u2102\",\n            \"&Coproduct;\": \"\\u2210\",\n            \"&CounterClockwiseContourIntegral;\": \"\\u2233\",\n            \"&Cross;\": \"\\u2A2F\",\n            \"&Cscr;\": \"\\uD835\\uDC9E\",\n            \"&Cup;\": \"\\u22D3\",\n            \"&CupCap;\": \"\\u224D\",\n            \"&DD;\": \"\\u2145\",\n            \"&DDotrahd;\": \"\\u2911\",\n            \"&DJcy;\": \"\\u0402\",\n            \"&DScy;\": \"\\u0405\",\n            \"&DZcy;\": \"\\u040F\",\n            \"&Dagger;\": \"\\u2021\",\n            \"&Darr;\": \"\\u21A1\",\n            \"&Dashv;\": \"\\u2AE4\",\n            \"&Dcaron;\": \"\\u010E\",\n            \"&Dcy;\": \"\\u0414\",\n            \"&Del;\": \"\\u2207\",\n            \"&Delta;\": \"\\u0394\",\n            \"&Dfr;\": \"\\uD835\\uDD07\",\n            \"&DiacriticalAcute;\": \"\\xb4\",\n            \"&DiacriticalDot;\": \"\\u02D9\",\n            \"&DiacriticalDoubleAcute;\": \"\\u02DD\",\n            \"&DiacriticalGrave;\": \"`\",\n            \"&DiacriticalTilde;\": \"\\u02DC\",\n            \"&Diamond;\": \"\\u22C4\",\n            \"&DifferentialD;\": \"\\u2146\",\n            \"&Dopf;\": \"\\uD835\\uDD3B\",\n            \"&Dot;\": \"\\xa8\",\n            \"&DotDot;\": \"\\u20DC\",\n            \"&DotEqual;\": \"\\u2250\",\n            \"&DoubleContourIntegral;\": \"\\u222F\",\n            \"&DoubleDot;\": \"\\xa8\",\n            \"&DoubleDownArrow;\": \"\\u21D3\",\n            \"&DoubleLeftArrow;\": \"\\u21D0\",\n            \"&DoubleLeftRightArrow;\": \"\\u21D4\",\n            \"&DoubleLeftTee;\": \"\\u2AE4\",\n            \"&DoubleLongLeftArrow;\": \"\\u27F8\",\n            \"&DoubleLongLeftRightArrow;\": \"\\u27FA\",\n            \"&DoubleLongRightArrow;\": \"\\u27F9\",\n            \"&DoubleRightArrow;\": \"\\u21D2\",\n            \"&DoubleRightTee;\": \"\\u22A8\",\n            \"&DoubleUpArrow;\": \"\\u21D1\",\n            \"&DoubleUpDownArrow;\": \"\\u21D5\",\n            \"&DoubleVerticalBar;\": \"\\u2225\",\n            \"&DownArrow;\": \"\\u2193\",\n            \"&DownArrowBar;\": \"\\u2913\",\n            \"&DownArrowUpArrow;\": \"\\u21F5\",\n            \"&DownBreve;\": \"\\u0311\",\n            \"&DownLeftRightVector;\": \"\\u2950\",\n            \"&DownLeftTeeVector;\": \"\\u295E\",\n            \"&DownLeftVector;\": \"\\u21BD\",\n            \"&DownLeftVectorBar;\": \"\\u2956\",\n            \"&DownRightTeeVector;\": \"\\u295F\",\n            \"&DownRightVector;\": \"\\u21C1\",\n            \"&DownRightVectorBar;\": \"\\u2957\",\n            \"&DownTee;\": \"\\u22A4\",\n            \"&DownTeeArrow;\": \"\\u21A7\",\n            \"&Downarrow;\": \"\\u21D3\",\n            \"&Dscr;\": \"\\uD835\\uDC9F\",\n            \"&Dstrok;\": \"\\u0110\",\n            \"&ENG;\": \"\\u014A\",\n            \"&ETH\": \"\\xd0\",\n            \"&ETH;\": \"\\xd0\",\n            \"&Eacute\": \"\\xc9\",\n            \"&Eacute;\": \"\\xc9\",\n            \"&Ecaron;\": \"\\u011A\",\n            \"&Ecirc\": \"\\xca\",\n            \"&Ecirc;\": \"\\xca\",\n            \"&Ecy;\": \"\\u042D\",\n            \"&Edot;\": \"\\u0116\",\n            \"&Efr;\": \"\\uD835\\uDD08\",\n            \"&Egrave\": \"\\xc8\",\n            \"&Egrave;\": \"\\xc8\",\n            \"&Element;\": \"\\u2208\",\n            \"&Emacr;\": \"\\u0112\",\n            \"&EmptySmallSquare;\": \"\\u25FB\",\n            \"&EmptyVerySmallSquare;\": \"\\u25AB\",\n            \"&Eogon;\": \"\\u0118\",\n            \"&Eopf;\": \"\\uD835\\uDD3C\",\n            \"&Epsilon;\": \"\\u0395\",\n            \"&Equal;\": \"\\u2A75\",\n            \"&EqualTilde;\": \"\\u2242\",\n            \"&Equilibrium;\": \"\\u21CC\",\n            \"&Escr;\": \"\\u2130\",\n            \"&Esim;\": \"\\u2A73\",\n            \"&Eta;\": \"\\u0397\",\n            \"&Euml\": \"\\xcb\",\n            \"&Euml;\": \"\\xcb\",\n            \"&Exists;\": \"\\u2203\",\n            \"&ExponentialE;\": \"\\u2147\",\n            \"&Fcy;\": \"\\u0424\",\n            \"&Ffr;\": \"\\uD835\\uDD09\",\n            \"&FilledSmallSquare;\": \"\\u25FC\",\n            \"&FilledVerySmallSquare;\": \"\\u25AA\",\n            \"&Fopf;\": \"\\uD835\\uDD3D\",\n            \"&ForAll;\": \"\\u2200\",\n            \"&Fouriertrf;\": \"\\u2131\",\n            \"&Fscr;\": \"\\u2131\",\n            \"&GJcy;\": \"\\u0403\",\n            \"&GT\": \">\",\n            \"&GT;\": \">\",\n            \"&Gamma;\": \"\\u0393\",\n            \"&Gammad;\": \"\\u03DC\",\n            \"&Gbreve;\": \"\\u011E\",\n            \"&Gcedil;\": \"\\u0122\",\n            \"&Gcirc;\": \"\\u011C\",\n            \"&Gcy;\": \"\\u0413\",\n            \"&Gdot;\": \"\\u0120\",\n            \"&Gfr;\": \"\\uD835\\uDD0A\",\n            \"&Gg;\": \"\\u22D9\",\n            \"&Gopf;\": \"\\uD835\\uDD3E\",\n            \"&GreaterEqual;\": \"\\u2265\",\n            \"&GreaterEqualLess;\": \"\\u22DB\",\n            \"&GreaterFullEqual;\": \"\\u2267\",\n            \"&GreaterGreater;\": \"\\u2AA2\",\n            \"&GreaterLess;\": \"\\u2277\",\n            \"&GreaterSlantEqual;\": \"\\u2A7E\",\n            \"&GreaterTilde;\": \"\\u2273\",\n            \"&Gscr;\": \"\\uD835\\uDCA2\",\n            \"&Gt;\": \"\\u226B\",\n            \"&HARDcy;\": \"\\u042A\",\n            \"&Hacek;\": \"\\u02C7\",\n            \"&Hat;\": \"^\",\n            \"&Hcirc;\": \"\\u0124\",\n            \"&Hfr;\": \"\\u210C\",\n            \"&HilbertSpace;\": \"\\u210B\",\n            \"&Hopf;\": \"\\u210D\",\n            \"&HorizontalLine;\": \"\\u2500\",\n            \"&Hscr;\": \"\\u210B\",\n            \"&Hstrok;\": \"\\u0126\",\n            \"&HumpDownHump;\": \"\\u224E\",\n            \"&HumpEqual;\": \"\\u224F\",\n            \"&IEcy;\": \"\\u0415\",\n            \"&IJlig;\": \"\\u0132\",\n            \"&IOcy;\": \"\\u0401\",\n            \"&Iacute\": \"\\xcd\",\n            \"&Iacute;\": \"\\xcd\",\n            \"&Icirc\": \"\\xce\",\n            \"&Icirc;\": \"\\xce\",\n            \"&Icy;\": \"\\u0418\",\n            \"&Idot;\": \"\\u0130\",\n            \"&Ifr;\": \"\\u2111\",\n            \"&Igrave\": \"\\xcc\",\n            \"&Igrave;\": \"\\xcc\",\n            \"&Im;\": \"\\u2111\",\n            \"&Imacr;\": \"\\u012A\",\n            \"&ImaginaryI;\": \"\\u2148\",\n            \"&Implies;\": \"\\u21D2\",\n            \"&Int;\": \"\\u222C\",\n            \"&Integral;\": \"\\u222B\",\n            \"&Intersection;\": \"\\u22C2\",\n            \"&InvisibleComma;\": \"\\u2063\",\n            \"&InvisibleTimes;\": \"\\u2062\",\n            \"&Iogon;\": \"\\u012E\",\n            \"&Iopf;\": \"\\uD835\\uDD40\",\n            \"&Iota;\": \"\\u0399\",\n            \"&Iscr;\": \"\\u2110\",\n            \"&Itilde;\": \"\\u0128\",\n            \"&Iukcy;\": \"\\u0406\",\n            \"&Iuml\": \"\\xcf\",\n            \"&Iuml;\": \"\\xcf\",\n            \"&Jcirc;\": \"\\u0134\",\n            \"&Jcy;\": \"\\u0419\",\n            \"&Jfr;\": \"\\uD835\\uDD0D\",\n            \"&Jopf;\": \"\\uD835\\uDD41\",\n            \"&Jscr;\": \"\\uD835\\uDCA5\",\n            \"&Jsercy;\": \"\\u0408\",\n            \"&Jukcy;\": \"\\u0404\",\n            \"&KHcy;\": \"\\u0425\",\n            \"&KJcy;\": \"\\u040C\",\n            \"&Kappa;\": \"\\u039A\",\n            \"&Kcedil;\": \"\\u0136\",\n            \"&Kcy;\": \"\\u041A\",\n            \"&Kfr;\": \"\\uD835\\uDD0E\",\n            \"&Kopf;\": \"\\uD835\\uDD42\",\n            \"&Kscr;\": \"\\uD835\\uDCA6\",\n            \"&LJcy;\": \"\\u0409\",\n            \"&LT\": \"<\",\n            \"&LT;\": \"<\",\n            \"&Lacute;\": \"\\u0139\",\n            \"&Lambda;\": \"\\u039B\",\n            \"&Lang;\": \"\\u27EA\",\n            \"&Laplacetrf;\": \"\\u2112\",\n            \"&Larr;\": \"\\u219E\",\n            \"&Lcaron;\": \"\\u013D\",\n            \"&Lcedil;\": \"\\u013B\",\n            \"&Lcy;\": \"\\u041B\",\n            \"&LeftAngleBracket;\": \"\\u27E8\",\n            \"&LeftArrow;\": \"\\u2190\",\n            \"&LeftArrowBar;\": \"\\u21E4\",\n            \"&LeftArrowRightArrow;\": \"\\u21C6\",\n            \"&LeftCeiling;\": \"\\u2308\",\n            \"&LeftDoubleBracket;\": \"\\u27E6\",\n            \"&LeftDownTeeVector;\": \"\\u2961\",\n            \"&LeftDownVector;\": \"\\u21C3\",\n            \"&LeftDownVectorBar;\": \"\\u2959\",\n            \"&LeftFloor;\": \"\\u230A\",\n            \"&LeftRightArrow;\": \"\\u2194\",\n            \"&LeftRightVector;\": \"\\u294E\",\n            \"&LeftTee;\": \"\\u22A3\",\n            \"&LeftTeeArrow;\": \"\\u21A4\",\n            \"&LeftTeeVector;\": \"\\u295A\",\n            \"&LeftTriangle;\": \"\\u22B2\",\n            \"&LeftTriangleBar;\": \"\\u29CF\",\n            \"&LeftTriangleEqual;\": \"\\u22B4\",\n            \"&LeftUpDownVector;\": \"\\u2951\",\n            \"&LeftUpTeeVector;\": \"\\u2960\",\n            \"&LeftUpVector;\": \"\\u21BF\",\n            \"&LeftUpVectorBar;\": \"\\u2958\",\n            \"&LeftVector;\": \"\\u21BC\",\n            \"&LeftVectorBar;\": \"\\u2952\",\n            \"&Leftarrow;\": \"\\u21D0\",\n            \"&Leftrightarrow;\": \"\\u21D4\",\n            \"&LessEqualGreater;\": \"\\u22DA\",\n            \"&LessFullEqual;\": \"\\u2266\",\n            \"&LessGreater;\": \"\\u2276\",\n            \"&LessLess;\": \"\\u2AA1\",\n            \"&LessSlantEqual;\": \"\\u2A7D\",\n            \"&LessTilde;\": \"\\u2272\",\n            \"&Lfr;\": \"\\uD835\\uDD0F\",\n            \"&Ll;\": \"\\u22D8\",\n            \"&Lleftarrow;\": \"\\u21DA\",\n            \"&Lmidot;\": \"\\u013F\",\n            \"&LongLeftArrow;\": \"\\u27F5\",\n            \"&LongLeftRightArrow;\": \"\\u27F7\",\n            \"&LongRightArrow;\": \"\\u27F6\",\n            \"&Longleftarrow;\": \"\\u27F8\",\n            \"&Longleftrightarrow;\": \"\\u27FA\",\n            \"&Longrightarrow;\": \"\\u27F9\",\n            \"&Lopf;\": \"\\uD835\\uDD43\",\n            \"&LowerLeftArrow;\": \"\\u2199\",\n            \"&LowerRightArrow;\": \"\\u2198\",\n            \"&Lscr;\": \"\\u2112\",\n            \"&Lsh;\": \"\\u21B0\",\n            \"&Lstrok;\": \"\\u0141\",\n            \"&Lt;\": \"\\u226A\",\n            \"&Map;\": \"\\u2905\",\n            \"&Mcy;\": \"\\u041C\",\n            \"&MediumSpace;\": \"\\u205F\",\n            \"&Mellintrf;\": \"\\u2133\",\n            \"&Mfr;\": \"\\uD835\\uDD10\",\n            \"&MinusPlus;\": \"\\u2213\",\n            \"&Mopf;\": \"\\uD835\\uDD44\",\n            \"&Mscr;\": \"\\u2133\",\n            \"&Mu;\": \"\\u039C\",\n            \"&NJcy;\": \"\\u040A\",\n            \"&Nacute;\": \"\\u0143\",\n            \"&Ncaron;\": \"\\u0147\",\n            \"&Ncedil;\": \"\\u0145\",\n            \"&Ncy;\": \"\\u041D\",\n            \"&NegativeMediumSpace;\": \"\\u200B\",\n            \"&NegativeThickSpace;\": \"\\u200B\",\n            \"&NegativeThinSpace;\": \"\\u200B\",\n            \"&NegativeVeryThinSpace;\": \"\\u200B\",\n            \"&NestedGreaterGreater;\": \"\\u226B\",\n            \"&NestedLessLess;\": \"\\u226A\",\n            \"&NewLine;\": \"\\n\",\n            \"&Nfr;\": \"\\uD835\\uDD11\",\n            \"&NoBreak;\": \"\\u2060\",\n            \"&NonBreakingSpace;\": \"\\xa0\",\n            \"&Nopf;\": \"\\u2115\",\n            \"&Not;\": \"\\u2AEC\",\n            \"&NotCongruent;\": \"\\u2262\",\n            \"&NotCupCap;\": \"\\u226D\",\n            \"&NotDoubleVerticalBar;\": \"\\u2226\",\n            \"&NotElement;\": \"\\u2209\",\n            \"&NotEqual;\": \"\\u2260\",\n            \"&NotEqualTilde;\": \"\\u2242\\u0338\",\n            \"&NotExists;\": \"\\u2204\",\n            \"&NotGreater;\": \"\\u226F\",\n            \"&NotGreaterEqual;\": \"\\u2271\",\n            \"&NotGreaterFullEqual;\": \"\\u2267\\u0338\",\n            \"&NotGreaterGreater;\": \"\\u226B\\u0338\",\n            \"&NotGreaterLess;\": \"\\u2279\",\n            \"&NotGreaterSlantEqual;\": \"\\u2A7E\\u0338\",\n            \"&NotGreaterTilde;\": \"\\u2275\",\n            \"&NotHumpDownHump;\": \"\\u224E\\u0338\",\n            \"&NotHumpEqual;\": \"\\u224F\\u0338\",\n            \"&NotLeftTriangle;\": \"\\u22EA\",\n            \"&NotLeftTriangleBar;\": \"\\u29CF\\u0338\",\n            \"&NotLeftTriangleEqual;\": \"\\u22EC\",\n            \"&NotLess;\": \"\\u226E\",\n            \"&NotLessEqual;\": \"\\u2270\",\n            \"&NotLessGreater;\": \"\\u2278\",\n            \"&NotLessLess;\": \"\\u226A\\u0338\",\n            \"&NotLessSlantEqual;\": \"\\u2A7D\\u0338\",\n            \"&NotLessTilde;\": \"\\u2274\",\n            \"&NotNestedGreaterGreater;\": \"\\u2AA2\\u0338\",\n            \"&NotNestedLessLess;\": \"\\u2AA1\\u0338\",\n            \"&NotPrecedes;\": \"\\u2280\",\n            \"&NotPrecedesEqual;\": \"\\u2AAF\\u0338\",\n            \"&NotPrecedesSlantEqual;\": \"\\u22E0\",\n            \"&NotReverseElement;\": \"\\u220C\",\n            \"&NotRightTriangle;\": \"\\u22EB\",\n            \"&NotRightTriangleBar;\": \"\\u29D0\\u0338\",\n            \"&NotRightTriangleEqual;\": \"\\u22ED\",\n            \"&NotSquareSubset;\": \"\\u228F\\u0338\",\n            \"&NotSquareSubsetEqual;\": \"\\u22E2\",\n            \"&NotSquareSuperset;\": \"\\u2290\\u0338\",\n            \"&NotSquareSupersetEqual;\": \"\\u22E3\",\n            \"&NotSubset;\": \"\\u2282\\u20D2\",\n            \"&NotSubsetEqual;\": \"\\u2288\",\n            \"&NotSucceeds;\": \"\\u2281\",\n            \"&NotSucceedsEqual;\": \"\\u2AB0\\u0338\",\n            \"&NotSucceedsSlantEqual;\": \"\\u22E1\",\n            \"&NotSucceedsTilde;\": \"\\u227F\\u0338\",\n            \"&NotSuperset;\": \"\\u2283\\u20D2\",\n            \"&NotSupersetEqual;\": \"\\u2289\",\n            \"&NotTilde;\": \"\\u2241\",\n            \"&NotTildeEqual;\": \"\\u2244\",\n            \"&NotTildeFullEqual;\": \"\\u2247\",\n            \"&NotTildeTilde;\": \"\\u2249\",\n            \"&NotVerticalBar;\": \"\\u2224\",\n            \"&Nscr;\": \"\\uD835\\uDCA9\",\n            \"&Ntilde\": \"\\xd1\",\n            \"&Ntilde;\": \"\\xd1\",\n            \"&Nu;\": \"\\u039D\",\n            \"&OElig;\": \"\\u0152\",\n            \"&Oacute\": \"\\xd3\",\n            \"&Oacute;\": \"\\xd3\",\n            \"&Ocirc\": \"\\xd4\",\n            \"&Ocirc;\": \"\\xd4\",\n            \"&Ocy;\": \"\\u041E\",\n            \"&Odblac;\": \"\\u0150\",\n            \"&Ofr;\": \"\\uD835\\uDD12\",\n            \"&Ograve\": \"\\xd2\",\n            \"&Ograve;\": \"\\xd2\",\n            \"&Omacr;\": \"\\u014C\",\n            \"&Omega;\": \"\\u03A9\",\n            \"&Omicron;\": \"\\u039F\",\n            \"&Oopf;\": \"\\uD835\\uDD46\",\n            \"&OpenCurlyDoubleQuote;\": \"\\u201C\",\n            \"&OpenCurlyQuote;\": \"\\u2018\",\n            \"&Or;\": \"\\u2A54\",\n            \"&Oscr;\": \"\\uD835\\uDCAA\",\n            \"&Oslash\": \"\\xd8\",\n            \"&Oslash;\": \"\\xd8\",\n            \"&Otilde\": \"\\xd5\",\n            \"&Otilde;\": \"\\xd5\",\n            \"&Otimes;\": \"\\u2A37\",\n            \"&Ouml\": \"\\xd6\",\n            \"&Ouml;\": \"\\xd6\",\n            \"&OverBar;\": \"\\u203E\",\n            \"&OverBrace;\": \"\\u23DE\",\n            \"&OverBracket;\": \"\\u23B4\",\n            \"&OverParenthesis;\": \"\\u23DC\",\n            \"&PartialD;\": \"\\u2202\",\n            \"&Pcy;\": \"\\u041F\",\n            \"&Pfr;\": \"\\uD835\\uDD13\",\n            \"&Phi;\": \"\\u03A6\",\n            \"&Pi;\": \"\\u03A0\",\n            \"&PlusMinus;\": \"\\xb1\",\n            \"&Poincareplane;\": \"\\u210C\",\n            \"&Popf;\": \"\\u2119\",\n            \"&Pr;\": \"\\u2ABB\",\n            \"&Precedes;\": \"\\u227A\",\n            \"&PrecedesEqual;\": \"\\u2AAF\",\n            \"&PrecedesSlantEqual;\": \"\\u227C\",\n            \"&PrecedesTilde;\": \"\\u227E\",\n            \"&Prime;\": \"\\u2033\",\n            \"&Product;\": \"\\u220F\",\n            \"&Proportion;\": \"\\u2237\",\n            \"&Proportional;\": \"\\u221D\",\n            \"&Pscr;\": \"\\uD835\\uDCAB\",\n            \"&Psi;\": \"\\u03A8\",\n            \"&QUOT\": '\"',\n            \"&QUOT;\": '\"',\n            \"&Qfr;\": \"\\uD835\\uDD14\",\n            \"&Qopf;\": \"\\u211A\",\n            \"&Qscr;\": \"\\uD835\\uDCAC\",\n            \"&RBarr;\": \"\\u2910\",\n            \"&REG\": \"\\xae\",\n            \"&REG;\": \"\\xae\",\n            \"&Racute;\": \"\\u0154\",\n            \"&Rang;\": \"\\u27EB\",\n            \"&Rarr;\": \"\\u21A0\",\n            \"&Rarrtl;\": \"\\u2916\",\n            \"&Rcaron;\": \"\\u0158\",\n            \"&Rcedil;\": \"\\u0156\",\n            \"&Rcy;\": \"\\u0420\",\n            \"&Re;\": \"\\u211C\",\n            \"&ReverseElement;\": \"\\u220B\",\n            \"&ReverseEquilibrium;\": \"\\u21CB\",\n            \"&ReverseUpEquilibrium;\": \"\\u296F\",\n            \"&Rfr;\": \"\\u211C\",\n            \"&Rho;\": \"\\u03A1\",\n            \"&RightAngleBracket;\": \"\\u27E9\",\n            \"&RightArrow;\": \"\\u2192\",\n            \"&RightArrowBar;\": \"\\u21E5\",\n            \"&RightArrowLeftArrow;\": \"\\u21C4\",\n            \"&RightCeiling;\": \"\\u2309\",\n            \"&RightDoubleBracket;\": \"\\u27E7\",\n            \"&RightDownTeeVector;\": \"\\u295D\",\n            \"&RightDownVector;\": \"\\u21C2\",\n            \"&RightDownVectorBar;\": \"\\u2955\",\n            \"&RightFloor;\": \"\\u230B\",\n            \"&RightTee;\": \"\\u22A2\",\n            \"&RightTeeArrow;\": \"\\u21A6\",\n            \"&RightTeeVector;\": \"\\u295B\",\n            \"&RightTriangle;\": \"\\u22B3\",\n            \"&RightTriangleBar;\": \"\\u29D0\",\n            \"&RightTriangleEqual;\": \"\\u22B5\",\n            \"&RightUpDownVector;\": \"\\u294F\",\n            \"&RightUpTeeVector;\": \"\\u295C\",\n            \"&RightUpVector;\": \"\\u21BE\",\n            \"&RightUpVectorBar;\": \"\\u2954\",\n            \"&RightVector;\": \"\\u21C0\",\n            \"&RightVectorBar;\": \"\\u2953\",\n            \"&Rightarrow;\": \"\\u21D2\",\n            \"&Ropf;\": \"\\u211D\",\n            \"&RoundImplies;\": \"\\u2970\",\n            \"&Rrightarrow;\": \"\\u21DB\",\n            \"&Rscr;\": \"\\u211B\",\n            \"&Rsh;\": \"\\u21B1\",\n            \"&RuleDelayed;\": \"\\u29F4\",\n            \"&SHCHcy;\": \"\\u0429\",\n            \"&SHcy;\": \"\\u0428\",\n            \"&SOFTcy;\": \"\\u042C\",\n            \"&Sacute;\": \"\\u015A\",\n            \"&Sc;\": \"\\u2ABC\",\n            \"&Scaron;\": \"\\u0160\",\n            \"&Scedil;\": \"\\u015E\",\n            \"&Scirc;\": \"\\u015C\",\n            \"&Scy;\": \"\\u0421\",\n            \"&Sfr;\": \"\\uD835\\uDD16\",\n            \"&ShortDownArrow;\": \"\\u2193\",\n            \"&ShortLeftArrow;\": \"\\u2190\",\n            \"&ShortRightArrow;\": \"\\u2192\",\n            \"&ShortUpArrow;\": \"\\u2191\",\n            \"&Sigma;\": \"\\u03A3\",\n            \"&SmallCircle;\": \"\\u2218\",\n            \"&Sopf;\": \"\\uD835\\uDD4A\",\n            \"&Sqrt;\": \"\\u221A\",\n            \"&Square;\": \"\\u25A1\",\n            \"&SquareIntersection;\": \"\\u2293\",\n            \"&SquareSubset;\": \"\\u228F\",\n            \"&SquareSubsetEqual;\": \"\\u2291\",\n            \"&SquareSuperset;\": \"\\u2290\",\n            \"&SquareSupersetEqual;\": \"\\u2292\",\n            \"&SquareUnion;\": \"\\u2294\",\n            \"&Sscr;\": \"\\uD835\\uDCAE\",\n            \"&Star;\": \"\\u22C6\",\n            \"&Sub;\": \"\\u22D0\",\n            \"&Subset;\": \"\\u22D0\",\n            \"&SubsetEqual;\": \"\\u2286\",\n            \"&Succeeds;\": \"\\u227B\",\n            \"&SucceedsEqual;\": \"\\u2AB0\",\n            \"&SucceedsSlantEqual;\": \"\\u227D\",\n            \"&SucceedsTilde;\": \"\\u227F\",\n            \"&SuchThat;\": \"\\u220B\",\n            \"&Sum;\": \"\\u2211\",\n            \"&Sup;\": \"\\u22D1\",\n            \"&Superset;\": \"\\u2283\",\n            \"&SupersetEqual;\": \"\\u2287\",\n            \"&Supset;\": \"\\u22D1\",\n            \"&THORN\": \"\\xde\",\n            \"&THORN;\": \"\\xde\",\n            \"&TRADE;\": \"\\u2122\",\n            \"&TSHcy;\": \"\\u040B\",\n            \"&TScy;\": \"\\u0426\",\n            \"&Tab;\": \"\t\",\n            \"&Tau;\": \"\\u03A4\",\n            \"&Tcaron;\": \"\\u0164\",\n            \"&Tcedil;\": \"\\u0162\",\n            \"&Tcy;\": \"\\u0422\",\n            \"&Tfr;\": \"\\uD835\\uDD17\",\n            \"&Therefore;\": \"\\u2234\",\n            \"&Theta;\": \"\\u0398\",\n            \"&ThickSpace;\": \"\\u205F\\u200A\",\n            \"&ThinSpace;\": \"\\u2009\",\n            \"&Tilde;\": \"\\u223C\",\n            \"&TildeEqual;\": \"\\u2243\",\n            \"&TildeFullEqual;\": \"\\u2245\",\n            \"&TildeTilde;\": \"\\u2248\",\n            \"&Topf;\": \"\\uD835\\uDD4B\",\n            \"&TripleDot;\": \"\\u20DB\",\n            \"&Tscr;\": \"\\uD835\\uDCAF\",\n            \"&Tstrok;\": \"\\u0166\",\n            \"&Uacute\": \"\\xda\",\n            \"&Uacute;\": \"\\xda\",\n            \"&Uarr;\": \"\\u219F\",\n            \"&Uarrocir;\": \"\\u2949\",\n            \"&Ubrcy;\": \"\\u040E\",\n            \"&Ubreve;\": \"\\u016C\",\n            \"&Ucirc\": \"\\xdb\",\n            \"&Ucirc;\": \"\\xdb\",\n            \"&Ucy;\": \"\\u0423\",\n            \"&Udblac;\": \"\\u0170\",\n            \"&Ufr;\": \"\\uD835\\uDD18\",\n            \"&Ugrave\": \"\\xd9\",\n            \"&Ugrave;\": \"\\xd9\",\n            \"&Umacr;\": \"\\u016A\",\n            \"&UnderBar;\": \"_\",\n            \"&UnderBrace;\": \"\\u23DF\",\n            \"&UnderBracket;\": \"\\u23B5\",\n            \"&UnderParenthesis;\": \"\\u23DD\",\n            \"&Union;\": \"\\u22C3\",\n            \"&UnionPlus;\": \"\\u228E\",\n            \"&Uogon;\": \"\\u0172\",\n            \"&Uopf;\": \"\\uD835\\uDD4C\",\n            \"&UpArrow;\": \"\\u2191\",\n            \"&UpArrowBar;\": \"\\u2912\",\n            \"&UpArrowDownArrow;\": \"\\u21C5\",\n            \"&UpDownArrow;\": \"\\u2195\",\n            \"&UpEquilibrium;\": \"\\u296E\",\n            \"&UpTee;\": \"\\u22A5\",\n            \"&UpTeeArrow;\": \"\\u21A5\",\n            \"&Uparrow;\": \"\\u21D1\",\n            \"&Updownarrow;\": \"\\u21D5\",\n            \"&UpperLeftArrow;\": \"\\u2196\",\n            \"&UpperRightArrow;\": \"\\u2197\",\n            \"&Upsi;\": \"\\u03D2\",\n            \"&Upsilon;\": \"\\u03A5\",\n            \"&Uring;\": \"\\u016E\",\n            \"&Uscr;\": \"\\uD835\\uDCB0\",\n            \"&Utilde;\": \"\\u0168\",\n            \"&Uuml\": \"\\xdc\",\n            \"&Uuml;\": \"\\xdc\",\n            \"&VDash;\": \"\\u22AB\",\n            \"&Vbar;\": \"\\u2AEB\",\n            \"&Vcy;\": \"\\u0412\",\n            \"&Vdash;\": \"\\u22A9\",\n            \"&Vdashl;\": \"\\u2AE6\",\n            \"&Vee;\": \"\\u22C1\",\n            \"&Verbar;\": \"\\u2016\",\n            \"&Vert;\": \"\\u2016\",\n            \"&VerticalBar;\": \"\\u2223\",\n            \"&VerticalLine;\": \"|\",\n            \"&VerticalSeparator;\": \"\\u2758\",\n            \"&VerticalTilde;\": \"\\u2240\",\n            \"&VeryThinSpace;\": \"\\u200A\",\n            \"&Vfr;\": \"\\uD835\\uDD19\",\n            \"&Vopf;\": \"\\uD835\\uDD4D\",\n            \"&Vscr;\": \"\\uD835\\uDCB1\",\n            \"&Vvdash;\": \"\\u22AA\",\n            \"&Wcirc;\": \"\\u0174\",\n            \"&Wedge;\": \"\\u22C0\",\n            \"&Wfr;\": \"\\uD835\\uDD1A\",\n            \"&Wopf;\": \"\\uD835\\uDD4E\",\n            \"&Wscr;\": \"\\uD835\\uDCB2\",\n            \"&Xfr;\": \"\\uD835\\uDD1B\",\n            \"&Xi;\": \"\\u039E\",\n            \"&Xopf;\": \"\\uD835\\uDD4F\",\n            \"&Xscr;\": \"\\uD835\\uDCB3\",\n            \"&YAcy;\": \"\\u042F\",\n            \"&YIcy;\": \"\\u0407\",\n            \"&YUcy;\": \"\\u042E\",\n            \"&Yacute\": \"\\xdd\",\n            \"&Yacute;\": \"\\xdd\",\n            \"&Ycirc;\": \"\\u0176\",\n            \"&Ycy;\": \"\\u042B\",\n            \"&Yfr;\": \"\\uD835\\uDD1C\",\n            \"&Yopf;\": \"\\uD835\\uDD50\",\n            \"&Yscr;\": \"\\uD835\\uDCB4\",\n            \"&Yuml;\": \"\\u0178\",\n            \"&ZHcy;\": \"\\u0416\",\n            \"&Zacute;\": \"\\u0179\",\n            \"&Zcaron;\": \"\\u017D\",\n            \"&Zcy;\": \"\\u0417\",\n            \"&Zdot;\": \"\\u017B\",\n            \"&ZeroWidthSpace;\": \"\\u200B\",\n            \"&Zeta;\": \"\\u0396\",\n            \"&Zfr;\": \"\\u2128\",\n            \"&Zopf;\": \"\\u2124\",\n            \"&Zscr;\": \"\\uD835\\uDCB5\",\n            \"&aacute\": \"\\xe1\",\n            \"&aacute;\": \"\\xe1\",\n            \"&abreve;\": \"\\u0103\",\n            \"&ac;\": \"\\u223E\",\n            \"&acE;\": \"\\u223E\\u0333\",\n            \"&acd;\": \"\\u223F\",\n            \"&acirc\": \"\\xe2\",\n            \"&acirc;\": \"\\xe2\",\n            \"&acute\": \"\\xb4\",\n            \"&acute;\": \"\\xb4\",\n            \"&acy;\": \"\\u0430\",\n            \"&aelig\": \"\\xe6\",\n            \"&aelig;\": \"\\xe6\",\n            \"&af;\": \"\\u2061\",\n            \"&afr;\": \"\\uD835\\uDD1E\",\n            \"&agrave\": \"\\xe0\",\n            \"&agrave;\": \"\\xe0\",\n            \"&alefsym;\": \"\\u2135\",\n            \"&aleph;\": \"\\u2135\",\n            \"&alpha;\": \"\\u03B1\",\n            \"&amacr;\": \"\\u0101\",\n            \"&amalg;\": \"\\u2A3F\",\n            \"&amp\": \"&\",\n            \"&amp;\": \"&\",\n            \"&and;\": \"\\u2227\",\n            \"&andand;\": \"\\u2A55\",\n            \"&andd;\": \"\\u2A5C\",\n            \"&andslope;\": \"\\u2A58\",\n            \"&andv;\": \"\\u2A5A\",\n            \"&ang;\": \"\\u2220\",\n            \"&ange;\": \"\\u29A4\",\n            \"&angle;\": \"\\u2220\",\n            \"&angmsd;\": \"\\u2221\",\n            \"&angmsdaa;\": \"\\u29A8\",\n            \"&angmsdab;\": \"\\u29A9\",\n            \"&angmsdac;\": \"\\u29AA\",\n            \"&angmsdad;\": \"\\u29AB\",\n            \"&angmsdae;\": \"\\u29AC\",\n            \"&angmsdaf;\": \"\\u29AD\",\n            \"&angmsdag;\": \"\\u29AE\",\n            \"&angmsdah;\": \"\\u29AF\",\n            \"&angrt;\": \"\\u221F\",\n            \"&angrtvb;\": \"\\u22BE\",\n            \"&angrtvbd;\": \"\\u299D\",\n            \"&angsph;\": \"\\u2222\",\n            \"&angst;\": \"\\xc5\",\n            \"&angzarr;\": \"\\u237C\",\n            \"&aogon;\": \"\\u0105\",\n            \"&aopf;\": \"\\uD835\\uDD52\",\n            \"&ap;\": \"\\u2248\",\n            \"&apE;\": \"\\u2A70\",\n            \"&apacir;\": \"\\u2A6F\",\n            \"&ape;\": \"\\u224A\",\n            \"&apid;\": \"\\u224B\",\n            \"&apos;\": \"'\",\n            \"&approx;\": \"\\u2248\",\n            \"&approxeq;\": \"\\u224A\",\n            \"&aring\": \"\\xe5\",\n            \"&aring;\": \"\\xe5\",\n            \"&ascr;\": \"\\uD835\\uDCB6\",\n            \"&ast;\": \"*\",\n            \"&asymp;\": \"\\u2248\",\n            \"&asympeq;\": \"\\u224D\",\n            \"&atilde\": \"\\xe3\",\n            \"&atilde;\": \"\\xe3\",\n            \"&auml\": \"\\xe4\",\n            \"&auml;\": \"\\xe4\",\n            \"&awconint;\": \"\\u2233\",\n            \"&awint;\": \"\\u2A11\",\n            \"&bNot;\": \"\\u2AED\",\n            \"&backcong;\": \"\\u224C\",\n            \"&backepsilon;\": \"\\u03F6\",\n            \"&backprime;\": \"\\u2035\",\n            \"&backsim;\": \"\\u223D\",\n            \"&backsimeq;\": \"\\u22CD\",\n            \"&barvee;\": \"\\u22BD\",\n            \"&barwed;\": \"\\u2305\",\n            \"&barwedge;\": \"\\u2305\",\n            \"&bbrk;\": \"\\u23B5\",\n            \"&bbrktbrk;\": \"\\u23B6\",\n            \"&bcong;\": \"\\u224C\",\n            \"&bcy;\": \"\\u0431\",\n            \"&bdquo;\": \"\\u201E\",\n            \"&becaus;\": \"\\u2235\",\n            \"&because;\": \"\\u2235\",\n            \"&bemptyv;\": \"\\u29B0\",\n            \"&bepsi;\": \"\\u03F6\",\n            \"&bernou;\": \"\\u212C\",\n            \"&beta;\": \"\\u03B2\",\n            \"&beth;\": \"\\u2136\",\n            \"&between;\": \"\\u226C\",\n            \"&bfr;\": \"\\uD835\\uDD1F\",\n            \"&bigcap;\": \"\\u22C2\",\n            \"&bigcirc;\": \"\\u25EF\",\n            \"&bigcup;\": \"\\u22C3\",\n            \"&bigodot;\": \"\\u2A00\",\n            \"&bigoplus;\": \"\\u2A01\",\n            \"&bigotimes;\": \"\\u2A02\",\n            \"&bigsqcup;\": \"\\u2A06\",\n            \"&bigstar;\": \"\\u2605\",\n            \"&bigtriangledown;\": \"\\u25BD\",\n            \"&bigtriangleup;\": \"\\u25B3\",\n            \"&biguplus;\": \"\\u2A04\",\n            \"&bigvee;\": \"\\u22C1\",\n            \"&bigwedge;\": \"\\u22C0\",\n            \"&bkarow;\": \"\\u290D\",\n            \"&blacklozenge;\": \"\\u29EB\",\n            \"&blacksquare;\": \"\\u25AA\",\n            \"&blacktriangle;\": \"\\u25B4\",\n            \"&blacktriangledown;\": \"\\u25BE\",\n            \"&blacktriangleleft;\": \"\\u25C2\",\n            \"&blacktriangleright;\": \"\\u25B8\",\n            \"&blank;\": \"\\u2423\",\n            \"&blk12;\": \"\\u2592\",\n            \"&blk14;\": \"\\u2591\",\n            \"&blk34;\": \"\\u2593\",\n            \"&block;\": \"\\u2588\",\n            \"&bne;\": \"=\\u20E5\",\n            \"&bnequiv;\": \"\\u2261\\u20E5\",\n            \"&bnot;\": \"\\u2310\",\n            \"&bopf;\": \"\\uD835\\uDD53\",\n            \"&bot;\": \"\\u22A5\",\n            \"&bottom;\": \"\\u22A5\",\n            \"&bowtie;\": \"\\u22C8\",\n            \"&boxDL;\": \"\\u2557\",\n            \"&boxDR;\": \"\\u2554\",\n            \"&boxDl;\": \"\\u2556\",\n            \"&boxDr;\": \"\\u2553\",\n            \"&boxH;\": \"\\u2550\",\n            \"&boxHD;\": \"\\u2566\",\n            \"&boxHU;\": \"\\u2569\",\n            \"&boxHd;\": \"\\u2564\",\n            \"&boxHu;\": \"\\u2567\",\n            \"&boxUL;\": \"\\u255D\",\n            \"&boxUR;\": \"\\u255A\",\n            \"&boxUl;\": \"\\u255C\",\n            \"&boxUr;\": \"\\u2559\",\n            \"&boxV;\": \"\\u2551\",\n            \"&boxVH;\": \"\\u256C\",\n            \"&boxVL;\": \"\\u2563\",\n            \"&boxVR;\": \"\\u2560\",\n            \"&boxVh;\": \"\\u256B\",\n            \"&boxVl;\": \"\\u2562\",\n            \"&boxVr;\": \"\\u255F\",\n            \"&boxbox;\": \"\\u29C9\",\n            \"&boxdL;\": \"\\u2555\",\n            \"&boxdR;\": \"\\u2552\",\n            \"&boxdl;\": \"\\u2510\",\n            \"&boxdr;\": \"\\u250C\",\n            \"&boxh;\": \"\\u2500\",\n            \"&boxhD;\": \"\\u2565\",\n            \"&boxhU;\": \"\\u2568\",\n            \"&boxhd;\": \"\\u252C\",\n            \"&boxhu;\": \"\\u2534\",\n            \"&boxminus;\": \"\\u229F\",\n            \"&boxplus;\": \"\\u229E\",\n            \"&boxtimes;\": \"\\u22A0\",\n            \"&boxuL;\": \"\\u255B\",\n            \"&boxuR;\": \"\\u2558\",\n            \"&boxul;\": \"\\u2518\",\n            \"&boxur;\": \"\\u2514\",\n            \"&boxv;\": \"\\u2502\",\n            \"&boxvH;\": \"\\u256A\",\n            \"&boxvL;\": \"\\u2561\",\n            \"&boxvR;\": \"\\u255E\",\n            \"&boxvh;\": \"\\u253C\",\n            \"&boxvl;\": \"\\u2524\",\n            \"&boxvr;\": \"\\u251C\",\n            \"&bprime;\": \"\\u2035\",\n            \"&breve;\": \"\\u02D8\",\n            \"&brvbar\": \"\\xa6\",\n            \"&brvbar;\": \"\\xa6\",\n            \"&bscr;\": \"\\uD835\\uDCB7\",\n            \"&bsemi;\": \"\\u204F\",\n            \"&bsim;\": \"\\u223D\",\n            \"&bsime;\": \"\\u22CD\",\n            \"&bsol;\": \"\\\\\",\n            \"&bsolb;\": \"\\u29C5\",\n            \"&bsolhsub;\": \"\\u27C8\",\n            \"&bull;\": \"\\u2022\",\n            \"&bullet;\": \"\\u2022\",\n            \"&bump;\": \"\\u224E\",\n            \"&bumpE;\": \"\\u2AAE\",\n            \"&bumpe;\": \"\\u224F\",\n            \"&bumpeq;\": \"\\u224F\",\n            \"&cacute;\": \"\\u0107\",\n            \"&cap;\": \"\\u2229\",\n            \"&capand;\": \"\\u2A44\",\n            \"&capbrcup;\": \"\\u2A49\",\n            \"&capcap;\": \"\\u2A4B\",\n            \"&capcup;\": \"\\u2A47\",\n            \"&capdot;\": \"\\u2A40\",\n            \"&caps;\": \"\\u2229\\uFE00\",\n            \"&caret;\": \"\\u2041\",\n            \"&caron;\": \"\\u02C7\",\n            \"&ccaps;\": \"\\u2A4D\",\n            \"&ccaron;\": \"\\u010D\",\n            \"&ccedil\": \"\\xe7\",\n            \"&ccedil;\": \"\\xe7\",\n            \"&ccirc;\": \"\\u0109\",\n            \"&ccups;\": \"\\u2A4C\",\n            \"&ccupssm;\": \"\\u2A50\",\n            \"&cdot;\": \"\\u010B\",\n            \"&cedil\": \"\\xb8\",\n            \"&cedil;\": \"\\xb8\",\n            \"&cemptyv;\": \"\\u29B2\",\n            \"&cent\": \"\\xa2\",\n            \"&cent;\": \"\\xa2\",\n            \"&centerdot;\": \"\\xb7\",\n            \"&cfr;\": \"\\uD835\\uDD20\",\n            \"&chcy;\": \"\\u0447\",\n            \"&check;\": \"\\u2713\",\n            \"&checkmark;\": \"\\u2713\",\n            \"&chi;\": \"\\u03C7\",\n            \"&cir;\": \"\\u25CB\",\n            \"&cirE;\": \"\\u29C3\",\n            \"&circ;\": \"\\u02C6\",\n            \"&circeq;\": \"\\u2257\",\n            \"&circlearrowleft;\": \"\\u21BA\",\n            \"&circlearrowright;\": \"\\u21BB\",\n            \"&circledR;\": \"\\xae\",\n            \"&circledS;\": \"\\u24C8\",\n            \"&circledast;\": \"\\u229B\",\n            \"&circledcirc;\": \"\\u229A\",\n            \"&circleddash;\": \"\\u229D\",\n            \"&cire;\": \"\\u2257\",\n            \"&cirfnint;\": \"\\u2A10\",\n            \"&cirmid;\": \"\\u2AEF\",\n            \"&cirscir;\": \"\\u29C2\",\n            \"&clubs;\": \"\\u2663\",\n            \"&clubsuit;\": \"\\u2663\",\n            \"&colon;\": \":\",\n            \"&colone;\": \"\\u2254\",\n            \"&coloneq;\": \"\\u2254\",\n            \"&comma;\": \",\",\n            \"&commat;\": \"@\",\n            \"&comp;\": \"\\u2201\",\n            \"&compfn;\": \"\\u2218\",\n            \"&complement;\": \"\\u2201\",\n            \"&complexes;\": \"\\u2102\",\n            \"&cong;\": \"\\u2245\",\n            \"&congdot;\": \"\\u2A6D\",\n            \"&conint;\": \"\\u222E\",\n            \"&copf;\": \"\\uD835\\uDD54\",\n            \"&coprod;\": \"\\u2210\",\n            \"&copy\": \"\\xa9\",\n            \"&copy;\": \"\\xa9\",\n            \"&copysr;\": \"\\u2117\",\n            \"&crarr;\": \"\\u21B5\",\n            \"&cross;\": \"\\u2717\",\n            \"&cscr;\": \"\\uD835\\uDCB8\",\n            \"&csub;\": \"\\u2ACF\",\n            \"&csube;\": \"\\u2AD1\",\n            \"&csup;\": \"\\u2AD0\",\n            \"&csupe;\": \"\\u2AD2\",\n            \"&ctdot;\": \"\\u22EF\",\n            \"&cudarrl;\": \"\\u2938\",\n            \"&cudarrr;\": \"\\u2935\",\n            \"&cuepr;\": \"\\u22DE\",\n            \"&cuesc;\": \"\\u22DF\",\n            \"&cularr;\": \"\\u21B6\",\n            \"&cularrp;\": \"\\u293D\",\n            \"&cup;\": \"\\u222A\",\n            \"&cupbrcap;\": \"\\u2A48\",\n            \"&cupcap;\": \"\\u2A46\",\n            \"&cupcup;\": \"\\u2A4A\",\n            \"&cupdot;\": \"\\u228D\",\n            \"&cupor;\": \"\\u2A45\",\n            \"&cups;\": \"\\u222A\\uFE00\",\n            \"&curarr;\": \"\\u21B7\",\n            \"&curarrm;\": \"\\u293C\",\n            \"&curlyeqprec;\": \"\\u22DE\",\n            \"&curlyeqsucc;\": \"\\u22DF\",\n            \"&curlyvee;\": \"\\u22CE\",\n            \"&curlywedge;\": \"\\u22CF\",\n            \"&curren\": \"\\xa4\",\n            \"&curren;\": \"\\xa4\",\n            \"&curvearrowleft;\": \"\\u21B6\",\n            \"&curvearrowright;\": \"\\u21B7\",\n            \"&cuvee;\": \"\\u22CE\",\n            \"&cuwed;\": \"\\u22CF\",\n            \"&cwconint;\": \"\\u2232\",\n            \"&cwint;\": \"\\u2231\",\n            \"&cylcty;\": \"\\u232D\",\n            \"&dArr;\": \"\\u21D3\",\n            \"&dHar;\": \"\\u2965\",\n            \"&dagger;\": \"\\u2020\",\n            \"&daleth;\": \"\\u2138\",\n            \"&darr;\": \"\\u2193\",\n            \"&dash;\": \"\\u2010\",\n            \"&dashv;\": \"\\u22A3\",\n            \"&dbkarow;\": \"\\u290F\",\n            \"&dblac;\": \"\\u02DD\",\n            \"&dcaron;\": \"\\u010F\",\n            \"&dcy;\": \"\\u0434\",\n            \"&dd;\": \"\\u2146\",\n            \"&ddagger;\": \"\\u2021\",\n            \"&ddarr;\": \"\\u21CA\",\n            \"&ddotseq;\": \"\\u2A77\",\n            \"&deg\": \"\\xb0\",\n            \"&deg;\": \"\\xb0\",\n            \"&delta;\": \"\\u03B4\",\n            \"&demptyv;\": \"\\u29B1\",\n            \"&dfisht;\": \"\\u297F\",\n            \"&dfr;\": \"\\uD835\\uDD21\",\n            \"&dharl;\": \"\\u21C3\",\n            \"&dharr;\": \"\\u21C2\",\n            \"&diam;\": \"\\u22C4\",\n            \"&diamond;\": \"\\u22C4\",\n            \"&diamondsuit;\": \"\\u2666\",\n            \"&diams;\": \"\\u2666\",\n            \"&die;\": \"\\xa8\",\n            \"&digamma;\": \"\\u03DD\",\n            \"&disin;\": \"\\u22F2\",\n            \"&div;\": \"\\xf7\",\n            \"&divide\": \"\\xf7\",\n            \"&divide;\": \"\\xf7\",\n            \"&divideontimes;\": \"\\u22C7\",\n            \"&divonx;\": \"\\u22C7\",\n            \"&djcy;\": \"\\u0452\",\n            \"&dlcorn;\": \"\\u231E\",\n            \"&dlcrop;\": \"\\u230D\",\n            \"&dollar;\": \"$\",\n            \"&dopf;\": \"\\uD835\\uDD55\",\n            \"&dot;\": \"\\u02D9\",\n            \"&doteq;\": \"\\u2250\",\n            \"&doteqdot;\": \"\\u2251\",\n            \"&dotminus;\": \"\\u2238\",\n            \"&dotplus;\": \"\\u2214\",\n            \"&dotsquare;\": \"\\u22A1\",\n            \"&doublebarwedge;\": \"\\u2306\",\n            \"&downarrow;\": \"\\u2193\",\n            \"&downdownarrows;\": \"\\u21CA\",\n            \"&downharpoonleft;\": \"\\u21C3\",\n            \"&downharpoonright;\": \"\\u21C2\",\n            \"&drbkarow;\": \"\\u2910\",\n            \"&drcorn;\": \"\\u231F\",\n            \"&drcrop;\": \"\\u230C\",\n            \"&dscr;\": \"\\uD835\\uDCB9\",\n            \"&dscy;\": \"\\u0455\",\n            \"&dsol;\": \"\\u29F6\",\n            \"&dstrok;\": \"\\u0111\",\n            \"&dtdot;\": \"\\u22F1\",\n            \"&dtri;\": \"\\u25BF\",\n            \"&dtrif;\": \"\\u25BE\",\n            \"&duarr;\": \"\\u21F5\",\n            \"&duhar;\": \"\\u296F\",\n            \"&dwangle;\": \"\\u29A6\",\n            \"&dzcy;\": \"\\u045F\",\n            \"&dzigrarr;\": \"\\u27FF\",\n            \"&eDDot;\": \"\\u2A77\",\n            \"&eDot;\": \"\\u2251\",\n            \"&eacute\": \"\\xe9\",\n            \"&eacute;\": \"\\xe9\",\n            \"&easter;\": \"\\u2A6E\",\n            \"&ecaron;\": \"\\u011B\",\n            \"&ecir;\": \"\\u2256\",\n            \"&ecirc\": \"\\xea\",\n            \"&ecirc;\": \"\\xea\",\n            \"&ecolon;\": \"\\u2255\",\n            \"&ecy;\": \"\\u044D\",\n            \"&edot;\": \"\\u0117\",\n            \"&ee;\": \"\\u2147\",\n            \"&efDot;\": \"\\u2252\",\n            \"&efr;\": \"\\uD835\\uDD22\",\n            \"&eg;\": \"\\u2A9A\",\n            \"&egrave\": \"\\xe8\",\n            \"&egrave;\": \"\\xe8\",\n            \"&egs;\": \"\\u2A96\",\n            \"&egsdot;\": \"\\u2A98\",\n            \"&el;\": \"\\u2A99\",\n            \"&elinters;\": \"\\u23E7\",\n            \"&ell;\": \"\\u2113\",\n            \"&els;\": \"\\u2A95\",\n            \"&elsdot;\": \"\\u2A97\",\n            \"&emacr;\": \"\\u0113\",\n            \"&empty;\": \"\\u2205\",\n            \"&emptyset;\": \"\\u2205\",\n            \"&emptyv;\": \"\\u2205\",\n            \"&emsp13;\": \"\\u2004\",\n            \"&emsp14;\": \"\\u2005\",\n            \"&emsp;\": \"\\u2003\",\n            \"&eng;\": \"\\u014B\",\n            \"&ensp;\": \"\\u2002\",\n            \"&eogon;\": \"\\u0119\",\n            \"&eopf;\": \"\\uD835\\uDD56\",\n            \"&epar;\": \"\\u22D5\",\n            \"&eparsl;\": \"\\u29E3\",\n            \"&eplus;\": \"\\u2A71\",\n            \"&epsi;\": \"\\u03B5\",\n            \"&epsilon;\": \"\\u03B5\",\n            \"&epsiv;\": \"\\u03F5\",\n            \"&eqcirc;\": \"\\u2256\",\n            \"&eqcolon;\": \"\\u2255\",\n            \"&eqsim;\": \"\\u2242\",\n            \"&eqslantgtr;\": \"\\u2A96\",\n            \"&eqslantless;\": \"\\u2A95\",\n            \"&equals;\": \"=\",\n            \"&equest;\": \"\\u225F\",\n            \"&equiv;\": \"\\u2261\",\n            \"&equivDD;\": \"\\u2A78\",\n            \"&eqvparsl;\": \"\\u29E5\",\n            \"&erDot;\": \"\\u2253\",\n            \"&erarr;\": \"\\u2971\",\n            \"&escr;\": \"\\u212F\",\n            \"&esdot;\": \"\\u2250\",\n            \"&esim;\": \"\\u2242\",\n            \"&eta;\": \"\\u03B7\",\n            \"&eth\": \"\\xf0\",\n            \"&eth;\": \"\\xf0\",\n            \"&euml\": \"\\xeb\",\n            \"&euml;\": \"\\xeb\",\n            \"&euro;\": \"\\u20AC\",\n            \"&excl;\": \"!\",\n            \"&exist;\": \"\\u2203\",\n            \"&expectation;\": \"\\u2130\",\n            \"&exponentiale;\": \"\\u2147\",\n            \"&fallingdotseq;\": \"\\u2252\",\n            \"&fcy;\": \"\\u0444\",\n            \"&female;\": \"\\u2640\",\n            \"&ffilig;\": \"\\uFB03\",\n            \"&fflig;\": \"\\uFB00\",\n            \"&ffllig;\": \"\\uFB04\",\n            \"&ffr;\": \"\\uD835\\uDD23\",\n            \"&filig;\": \"\\uFB01\",\n            \"&fjlig;\": \"fj\",\n            \"&flat;\": \"\\u266D\",\n            \"&fllig;\": \"\\uFB02\",\n            \"&fltns;\": \"\\u25B1\",\n            \"&fnof;\": \"\\u0192\",\n            \"&fopf;\": \"\\uD835\\uDD57\",\n            \"&forall;\": \"\\u2200\",\n            \"&fork;\": \"\\u22D4\",\n            \"&forkv;\": \"\\u2AD9\",\n            \"&fpartint;\": \"\\u2A0D\",\n            \"&frac12\": \"\\xbd\",\n            \"&frac12;\": \"\\xbd\",\n            \"&frac13;\": \"\\u2153\",\n            \"&frac14\": \"\\xbc\",\n            \"&frac14;\": \"\\xbc\",\n            \"&frac15;\": \"\\u2155\",\n            \"&frac16;\": \"\\u2159\",\n            \"&frac18;\": \"\\u215B\",\n            \"&frac23;\": \"\\u2154\",\n            \"&frac25;\": \"\\u2156\",\n            \"&frac34\": \"\\xbe\",\n            \"&frac34;\": \"\\xbe\",\n            \"&frac35;\": \"\\u2157\",\n            \"&frac38;\": \"\\u215C\",\n            \"&frac45;\": \"\\u2158\",\n            \"&frac56;\": \"\\u215A\",\n            \"&frac58;\": \"\\u215D\",\n            \"&frac78;\": \"\\u215E\",\n            \"&frasl;\": \"\\u2044\",\n            \"&frown;\": \"\\u2322\",\n            \"&fscr;\": \"\\uD835\\uDCBB\",\n            \"&gE;\": \"\\u2267\",\n            \"&gEl;\": \"\\u2A8C\",\n            \"&gacute;\": \"\\u01F5\",\n            \"&gamma;\": \"\\u03B3\",\n            \"&gammad;\": \"\\u03DD\",\n            \"&gap;\": \"\\u2A86\",\n            \"&gbreve;\": \"\\u011F\",\n            \"&gcirc;\": \"\\u011D\",\n            \"&gcy;\": \"\\u0433\",\n            \"&gdot;\": \"\\u0121\",\n            \"&ge;\": \"\\u2265\",\n            \"&gel;\": \"\\u22DB\",\n            \"&geq;\": \"\\u2265\",\n            \"&geqq;\": \"\\u2267\",\n            \"&geqslant;\": \"\\u2A7E\",\n            \"&ges;\": \"\\u2A7E\",\n            \"&gescc;\": \"\\u2AA9\",\n            \"&gesdot;\": \"\\u2A80\",\n            \"&gesdoto;\": \"\\u2A82\",\n            \"&gesdotol;\": \"\\u2A84\",\n            \"&gesl;\": \"\\u22DB\\uFE00\",\n            \"&gesles;\": \"\\u2A94\",\n            \"&gfr;\": \"\\uD835\\uDD24\",\n            \"&gg;\": \"\\u226B\",\n            \"&ggg;\": \"\\u22D9\",\n            \"&gimel;\": \"\\u2137\",\n            \"&gjcy;\": \"\\u0453\",\n            \"&gl;\": \"\\u2277\",\n            \"&glE;\": \"\\u2A92\",\n            \"&gla;\": \"\\u2AA5\",\n            \"&glj;\": \"\\u2AA4\",\n            \"&gnE;\": \"\\u2269\",\n            \"&gnap;\": \"\\u2A8A\",\n            \"&gnapprox;\": \"\\u2A8A\",\n            \"&gne;\": \"\\u2A88\",\n            \"&gneq;\": \"\\u2A88\",\n            \"&gneqq;\": \"\\u2269\",\n            \"&gnsim;\": \"\\u22E7\",\n            \"&gopf;\": \"\\uD835\\uDD58\",\n            \"&grave;\": \"`\",\n            \"&gscr;\": \"\\u210A\",\n            \"&gsim;\": \"\\u2273\",\n            \"&gsime;\": \"\\u2A8E\",\n            \"&gsiml;\": \"\\u2A90\",\n            \"&gt\": \">\",\n            \"&gt;\": \">\",\n            \"&gtcc;\": \"\\u2AA7\",\n            \"&gtcir;\": \"\\u2A7A\",\n            \"&gtdot;\": \"\\u22D7\",\n            \"&gtlPar;\": \"\\u2995\",\n            \"&gtquest;\": \"\\u2A7C\",\n            \"&gtrapprox;\": \"\\u2A86\",\n            \"&gtrarr;\": \"\\u2978\",\n            \"&gtrdot;\": \"\\u22D7\",\n            \"&gtreqless;\": \"\\u22DB\",\n            \"&gtreqqless;\": \"\\u2A8C\",\n            \"&gtrless;\": \"\\u2277\",\n            \"&gtrsim;\": \"\\u2273\",\n            \"&gvertneqq;\": \"\\u2269\\uFE00\",\n            \"&gvnE;\": \"\\u2269\\uFE00\",\n            \"&hArr;\": \"\\u21D4\",\n            \"&hairsp;\": \"\\u200A\",\n            \"&half;\": \"\\xbd\",\n            \"&hamilt;\": \"\\u210B\",\n            \"&hardcy;\": \"\\u044A\",\n            \"&harr;\": \"\\u2194\",\n            \"&harrcir;\": \"\\u2948\",\n            \"&harrw;\": \"\\u21AD\",\n            \"&hbar;\": \"\\u210F\",\n            \"&hcirc;\": \"\\u0125\",\n            \"&hearts;\": \"\\u2665\",\n            \"&heartsuit;\": \"\\u2665\",\n            \"&hellip;\": \"\\u2026\",\n            \"&hercon;\": \"\\u22B9\",\n            \"&hfr;\": \"\\uD835\\uDD25\",\n            \"&hksearow;\": \"\\u2925\",\n            \"&hkswarow;\": \"\\u2926\",\n            \"&hoarr;\": \"\\u21FF\",\n            \"&homtht;\": \"\\u223B\",\n            \"&hookleftarrow;\": \"\\u21A9\",\n            \"&hookrightarrow;\": \"\\u21AA\",\n            \"&hopf;\": \"\\uD835\\uDD59\",\n            \"&horbar;\": \"\\u2015\",\n            \"&hscr;\": \"\\uD835\\uDCBD\",\n            \"&hslash;\": \"\\u210F\",\n            \"&hstrok;\": \"\\u0127\",\n            \"&hybull;\": \"\\u2043\",\n            \"&hyphen;\": \"\\u2010\",\n            \"&iacute\": \"\\xed\",\n            \"&iacute;\": \"\\xed\",\n            \"&ic;\": \"\\u2063\",\n            \"&icirc\": \"\\xee\",\n            \"&icirc;\": \"\\xee\",\n            \"&icy;\": \"\\u0438\",\n            \"&iecy;\": \"\\u0435\",\n            \"&iexcl\": \"\\xa1\",\n            \"&iexcl;\": \"\\xa1\",\n            \"&iff;\": \"\\u21D4\",\n            \"&ifr;\": \"\\uD835\\uDD26\",\n            \"&igrave\": \"\\xec\",\n            \"&igrave;\": \"\\xec\",\n            \"&ii;\": \"\\u2148\",\n            \"&iiiint;\": \"\\u2A0C\",\n            \"&iiint;\": \"\\u222D\",\n            \"&iinfin;\": \"\\u29DC\",\n            \"&iiota;\": \"\\u2129\",\n            \"&ijlig;\": \"\\u0133\",\n            \"&imacr;\": \"\\u012B\",\n            \"&image;\": \"\\u2111\",\n            \"&imagline;\": \"\\u2110\",\n            \"&imagpart;\": \"\\u2111\",\n            \"&imath;\": \"\\u0131\",\n            \"&imof;\": \"\\u22B7\",\n            \"&imped;\": \"\\u01B5\",\n            \"&in;\": \"\\u2208\",\n            \"&incare;\": \"\\u2105\",\n            \"&infin;\": \"\\u221E\",\n            \"&infintie;\": \"\\u29DD\",\n            \"&inodot;\": \"\\u0131\",\n            \"&int;\": \"\\u222B\",\n            \"&intcal;\": \"\\u22BA\",\n            \"&integers;\": \"\\u2124\",\n            \"&intercal;\": \"\\u22BA\",\n            \"&intlarhk;\": \"\\u2A17\",\n            \"&intprod;\": \"\\u2A3C\",\n            \"&iocy;\": \"\\u0451\",\n            \"&iogon;\": \"\\u012F\",\n            \"&iopf;\": \"\\uD835\\uDD5A\",\n            \"&iota;\": \"\\u03B9\",\n            \"&iprod;\": \"\\u2A3C\",\n            \"&iquest\": \"\\xbf\",\n            \"&iquest;\": \"\\xbf\",\n            \"&iscr;\": \"\\uD835\\uDCBE\",\n            \"&isin;\": \"\\u2208\",\n            \"&isinE;\": \"\\u22F9\",\n            \"&isindot;\": \"\\u22F5\",\n            \"&isins;\": \"\\u22F4\",\n            \"&isinsv;\": \"\\u22F3\",\n            \"&isinv;\": \"\\u2208\",\n            \"&it;\": \"\\u2062\",\n            \"&itilde;\": \"\\u0129\",\n            \"&iukcy;\": \"\\u0456\",\n            \"&iuml\": \"\\xef\",\n            \"&iuml;\": \"\\xef\",\n            \"&jcirc;\": \"\\u0135\",\n            \"&jcy;\": \"\\u0439\",\n            \"&jfr;\": \"\\uD835\\uDD27\",\n            \"&jmath;\": \"\\u0237\",\n            \"&jopf;\": \"\\uD835\\uDD5B\",\n            \"&jscr;\": \"\\uD835\\uDCBF\",\n            \"&jsercy;\": \"\\u0458\",\n            \"&jukcy;\": \"\\u0454\",\n            \"&kappa;\": \"\\u03BA\",\n            \"&kappav;\": \"\\u03F0\",\n            \"&kcedil;\": \"\\u0137\",\n            \"&kcy;\": \"\\u043A\",\n            \"&kfr;\": \"\\uD835\\uDD28\",\n            \"&kgreen;\": \"\\u0138\",\n            \"&khcy;\": \"\\u0445\",\n            \"&kjcy;\": \"\\u045C\",\n            \"&kopf;\": \"\\uD835\\uDD5C\",\n            \"&kscr;\": \"\\uD835\\uDCC0\",\n            \"&lAarr;\": \"\\u21DA\",\n            \"&lArr;\": \"\\u21D0\",\n            \"&lAtail;\": \"\\u291B\",\n            \"&lBarr;\": \"\\u290E\",\n            \"&lE;\": \"\\u2266\",\n            \"&lEg;\": \"\\u2A8B\",\n            \"&lHar;\": \"\\u2962\",\n            \"&lacute;\": \"\\u013A\",\n            \"&laemptyv;\": \"\\u29B4\",\n            \"&lagran;\": \"\\u2112\",\n            \"&lambda;\": \"\\u03BB\",\n            \"&lang;\": \"\\u27E8\",\n            \"&langd;\": \"\\u2991\",\n            \"&langle;\": \"\\u27E8\",\n            \"&lap;\": \"\\u2A85\",\n            \"&laquo\": \"\\xab\",\n            \"&laquo;\": \"\\xab\",\n            \"&larr;\": \"\\u2190\",\n            \"&larrb;\": \"\\u21E4\",\n            \"&larrbfs;\": \"\\u291F\",\n            \"&larrfs;\": \"\\u291D\",\n            \"&larrhk;\": \"\\u21A9\",\n            \"&larrlp;\": \"\\u21AB\",\n            \"&larrpl;\": \"\\u2939\",\n            \"&larrsim;\": \"\\u2973\",\n            \"&larrtl;\": \"\\u21A2\",\n            \"&lat;\": \"\\u2AAB\",\n            \"&latail;\": \"\\u2919\",\n            \"&late;\": \"\\u2AAD\",\n            \"&lates;\": \"\\u2AAD\\uFE00\",\n            \"&lbarr;\": \"\\u290C\",\n            \"&lbbrk;\": \"\\u2772\",\n            \"&lbrace;\": \"{\",\n            \"&lbrack;\": \"[\",\n            \"&lbrke;\": \"\\u298B\",\n            \"&lbrksld;\": \"\\u298F\",\n            \"&lbrkslu;\": \"\\u298D\",\n            \"&lcaron;\": \"\\u013E\",\n            \"&lcedil;\": \"\\u013C\",\n            \"&lceil;\": \"\\u2308\",\n            \"&lcub;\": \"{\",\n            \"&lcy;\": \"\\u043B\",\n            \"&ldca;\": \"\\u2936\",\n            \"&ldquo;\": \"\\u201C\",\n            \"&ldquor;\": \"\\u201E\",\n            \"&ldrdhar;\": \"\\u2967\",\n            \"&ldrushar;\": \"\\u294B\",\n            \"&ldsh;\": \"\\u21B2\",\n            \"&le;\": \"\\u2264\",\n            \"&leftarrow;\": \"\\u2190\",\n            \"&leftarrowtail;\": \"\\u21A2\",\n            \"&leftharpoondown;\": \"\\u21BD\",\n            \"&leftharpoonup;\": \"\\u21BC\",\n            \"&leftleftarrows;\": \"\\u21C7\",\n            \"&leftrightarrow;\": \"\\u2194\",\n            \"&leftrightarrows;\": \"\\u21C6\",\n            \"&leftrightharpoons;\": \"\\u21CB\",\n            \"&leftrightsquigarrow;\": \"\\u21AD\",\n            \"&leftthreetimes;\": \"\\u22CB\",\n            \"&leg;\": \"\\u22DA\",\n            \"&leq;\": \"\\u2264\",\n            \"&leqq;\": \"\\u2266\",\n            \"&leqslant;\": \"\\u2A7D\",\n            \"&les;\": \"\\u2A7D\",\n            \"&lescc;\": \"\\u2AA8\",\n            \"&lesdot;\": \"\\u2A7F\",\n            \"&lesdoto;\": \"\\u2A81\",\n            \"&lesdotor;\": \"\\u2A83\",\n            \"&lesg;\": \"\\u22DA\\uFE00\",\n            \"&lesges;\": \"\\u2A93\",\n            \"&lessapprox;\": \"\\u2A85\",\n            \"&lessdot;\": \"\\u22D6\",\n            \"&lesseqgtr;\": \"\\u22DA\",\n            \"&lesseqqgtr;\": \"\\u2A8B\",\n            \"&lessgtr;\": \"\\u2276\",\n            \"&lesssim;\": \"\\u2272\",\n            \"&lfisht;\": \"\\u297C\",\n            \"&lfloor;\": \"\\u230A\",\n            \"&lfr;\": \"\\uD835\\uDD29\",\n            \"&lg;\": \"\\u2276\",\n            \"&lgE;\": \"\\u2A91\",\n            \"&lhard;\": \"\\u21BD\",\n            \"&lharu;\": \"\\u21BC\",\n            \"&lharul;\": \"\\u296A\",\n            \"&lhblk;\": \"\\u2584\",\n            \"&ljcy;\": \"\\u0459\",\n            \"&ll;\": \"\\u226A\",\n            \"&llarr;\": \"\\u21C7\",\n            \"&llcorner;\": \"\\u231E\",\n            \"&llhard;\": \"\\u296B\",\n            \"&lltri;\": \"\\u25FA\",\n            \"&lmidot;\": \"\\u0140\",\n            \"&lmoust;\": \"\\u23B0\",\n            \"&lmoustache;\": \"\\u23B0\",\n            \"&lnE;\": \"\\u2268\",\n            \"&lnap;\": \"\\u2A89\",\n            \"&lnapprox;\": \"\\u2A89\",\n            \"&lne;\": \"\\u2A87\",\n            \"&lneq;\": \"\\u2A87\",\n            \"&lneqq;\": \"\\u2268\",\n            \"&lnsim;\": \"\\u22E6\",\n            \"&loang;\": \"\\u27EC\",\n            \"&loarr;\": \"\\u21FD\",\n            \"&lobrk;\": \"\\u27E6\",\n            \"&longleftarrow;\": \"\\u27F5\",\n            \"&longleftrightarrow;\": \"\\u27F7\",\n            \"&longmapsto;\": \"\\u27FC\",\n            \"&longrightarrow;\": \"\\u27F6\",\n            \"&looparrowleft;\": \"\\u21AB\",\n            \"&looparrowright;\": \"\\u21AC\",\n            \"&lopar;\": \"\\u2985\",\n            \"&lopf;\": \"\\uD835\\uDD5D\",\n            \"&loplus;\": \"\\u2A2D\",\n            \"&lotimes;\": \"\\u2A34\",\n            \"&lowast;\": \"\\u2217\",\n            \"&lowbar;\": \"_\",\n            \"&loz;\": \"\\u25CA\",\n            \"&lozenge;\": \"\\u25CA\",\n            \"&lozf;\": \"\\u29EB\",\n            \"&lpar;\": \"(\",\n            \"&lparlt;\": \"\\u2993\",\n            \"&lrarr;\": \"\\u21C6\",\n            \"&lrcorner;\": \"\\u231F\",\n            \"&lrhar;\": \"\\u21CB\",\n            \"&lrhard;\": \"\\u296D\",\n            \"&lrm;\": \"\\u200E\",\n            \"&lrtri;\": \"\\u22BF\",\n            \"&lsaquo;\": \"\\u2039\",\n            \"&lscr;\": \"\\uD835\\uDCC1\",\n            \"&lsh;\": \"\\u21B0\",\n            \"&lsim;\": \"\\u2272\",\n            \"&lsime;\": \"\\u2A8D\",\n            \"&lsimg;\": \"\\u2A8F\",\n            \"&lsqb;\": \"[\",\n            \"&lsquo;\": \"\\u2018\",\n            \"&lsquor;\": \"\\u201A\",\n            \"&lstrok;\": \"\\u0142\",\n            \"&lt\": \"<\",\n            \"&lt;\": \"<\",\n            \"&ltcc;\": \"\\u2AA6\",\n            \"&ltcir;\": \"\\u2A79\",\n            \"&ltdot;\": \"\\u22D6\",\n            \"&lthree;\": \"\\u22CB\",\n            \"&ltimes;\": \"\\u22C9\",\n            \"&ltlarr;\": \"\\u2976\",\n            \"&ltquest;\": \"\\u2A7B\",\n            \"&ltrPar;\": \"\\u2996\",\n            \"&ltri;\": \"\\u25C3\",\n            \"&ltrie;\": \"\\u22B4\",\n            \"&ltrif;\": \"\\u25C2\",\n            \"&lurdshar;\": \"\\u294A\",\n            \"&luruhar;\": \"\\u2966\",\n            \"&lvertneqq;\": \"\\u2268\\uFE00\",\n            \"&lvnE;\": \"\\u2268\\uFE00\",\n            \"&mDDot;\": \"\\u223A\",\n            \"&macr\": \"\\xaf\",\n            \"&macr;\": \"\\xaf\",\n            \"&male;\": \"\\u2642\",\n            \"&malt;\": \"\\u2720\",\n            \"&maltese;\": \"\\u2720\",\n            \"&map;\": \"\\u21A6\",\n            \"&mapsto;\": \"\\u21A6\",\n            \"&mapstodown;\": \"\\u21A7\",\n            \"&mapstoleft;\": \"\\u21A4\",\n            \"&mapstoup;\": \"\\u21A5\",\n            \"&marker;\": \"\\u25AE\",\n            \"&mcomma;\": \"\\u2A29\",\n            \"&mcy;\": \"\\u043C\",\n            \"&mdash;\": \"\\u2014\",\n            \"&measuredangle;\": \"\\u2221\",\n            \"&mfr;\": \"\\uD835\\uDD2A\",\n            \"&mho;\": \"\\u2127\",\n            \"&micro\": \"\\xb5\",\n            \"&micro;\": \"\\xb5\",\n            \"&mid;\": \"\\u2223\",\n            \"&midast;\": \"*\",\n            \"&midcir;\": \"\\u2AF0\",\n            \"&middot\": \"\\xb7\",\n            \"&middot;\": \"\\xb7\",\n            \"&minus;\": \"\\u2212\",\n            \"&minusb;\": \"\\u229F\",\n            \"&minusd;\": \"\\u2238\",\n            \"&minusdu;\": \"\\u2A2A\",\n            \"&mlcp;\": \"\\u2ADB\",\n            \"&mldr;\": \"\\u2026\",\n            \"&mnplus;\": \"\\u2213\",\n            \"&models;\": \"\\u22A7\",\n            \"&mopf;\": \"\\uD835\\uDD5E\",\n            \"&mp;\": \"\\u2213\",\n            \"&mscr;\": \"\\uD835\\uDCC2\",\n            \"&mstpos;\": \"\\u223E\",\n            \"&mu;\": \"\\u03BC\",\n            \"&multimap;\": \"\\u22B8\",\n            \"&mumap;\": \"\\u22B8\",\n            \"&nGg;\": \"\\u22D9\\u0338\",\n            \"&nGt;\": \"\\u226B\\u20D2\",\n            \"&nGtv;\": \"\\u226B\\u0338\",\n            \"&nLeftarrow;\": \"\\u21CD\",\n            \"&nLeftrightarrow;\": \"\\u21CE\",\n            \"&nLl;\": \"\\u22D8\\u0338\",\n            \"&nLt;\": \"\\u226A\\u20D2\",\n            \"&nLtv;\": \"\\u226A\\u0338\",\n            \"&nRightarrow;\": \"\\u21CF\",\n            \"&nVDash;\": \"\\u22AF\",\n            \"&nVdash;\": \"\\u22AE\",\n            \"&nabla;\": \"\\u2207\",\n            \"&nacute;\": \"\\u0144\",\n            \"&nang;\": \"\\u2220\\u20D2\",\n            \"&nap;\": \"\\u2249\",\n            \"&napE;\": \"\\u2A70\\u0338\",\n            \"&napid;\": \"\\u224B\\u0338\",\n            \"&napos;\": \"\\u0149\",\n            \"&napprox;\": \"\\u2249\",\n            \"&natur;\": \"\\u266E\",\n            \"&natural;\": \"\\u266E\",\n            \"&naturals;\": \"\\u2115\",\n            \"&nbsp\": \"\\xa0\",\n            \"&nbsp;\": \"\\xa0\",\n            \"&nbump;\": \"\\u224E\\u0338\",\n            \"&nbumpe;\": \"\\u224F\\u0338\",\n            \"&ncap;\": \"\\u2A43\",\n            \"&ncaron;\": \"\\u0148\",\n            \"&ncedil;\": \"\\u0146\",\n            \"&ncong;\": \"\\u2247\",\n            \"&ncongdot;\": \"\\u2A6D\\u0338\",\n            \"&ncup;\": \"\\u2A42\",\n            \"&ncy;\": \"\\u043D\",\n            \"&ndash;\": \"\\u2013\",\n            \"&ne;\": \"\\u2260\",\n            \"&neArr;\": \"\\u21D7\",\n            \"&nearhk;\": \"\\u2924\",\n            \"&nearr;\": \"\\u2197\",\n            \"&nearrow;\": \"\\u2197\",\n            \"&nedot;\": \"\\u2250\\u0338\",\n            \"&nequiv;\": \"\\u2262\",\n            \"&nesear;\": \"\\u2928\",\n            \"&nesim;\": \"\\u2242\\u0338\",\n            \"&nexist;\": \"\\u2204\",\n            \"&nexists;\": \"\\u2204\",\n            \"&nfr;\": \"\\uD835\\uDD2B\",\n            \"&ngE;\": \"\\u2267\\u0338\",\n            \"&nge;\": \"\\u2271\",\n            \"&ngeq;\": \"\\u2271\",\n            \"&ngeqq;\": \"\\u2267\\u0338\",\n            \"&ngeqslant;\": \"\\u2A7E\\u0338\",\n            \"&nges;\": \"\\u2A7E\\u0338\",\n            \"&ngsim;\": \"\\u2275\",\n            \"&ngt;\": \"\\u226F\",\n            \"&ngtr;\": \"\\u226F\",\n            \"&nhArr;\": \"\\u21CE\",\n            \"&nharr;\": \"\\u21AE\",\n            \"&nhpar;\": \"\\u2AF2\",\n            \"&ni;\": \"\\u220B\",\n            \"&nis;\": \"\\u22FC\",\n            \"&nisd;\": \"\\u22FA\",\n            \"&niv;\": \"\\u220B\",\n            \"&njcy;\": \"\\u045A\",\n            \"&nlArr;\": \"\\u21CD\",\n            \"&nlE;\": \"\\u2266\\u0338\",\n            \"&nlarr;\": \"\\u219A\",\n            \"&nldr;\": \"\\u2025\",\n            \"&nle;\": \"\\u2270\",\n            \"&nleftarrow;\": \"\\u219A\",\n            \"&nleftrightarrow;\": \"\\u21AE\",\n            \"&nleq;\": \"\\u2270\",\n            \"&nleqq;\": \"\\u2266\\u0338\",\n            \"&nleqslant;\": \"\\u2A7D\\u0338\",\n            \"&nles;\": \"\\u2A7D\\u0338\",\n            \"&nless;\": \"\\u226E\",\n            \"&nlsim;\": \"\\u2274\",\n            \"&nlt;\": \"\\u226E\",\n            \"&nltri;\": \"\\u22EA\",\n            \"&nltrie;\": \"\\u22EC\",\n            \"&nmid;\": \"\\u2224\",\n            \"&nopf;\": \"\\uD835\\uDD5F\",\n            \"&not\": \"\\xac\",\n            \"&not;\": \"\\xac\",\n            \"&notin;\": \"\\u2209\",\n            \"&notinE;\": \"\\u22F9\\u0338\",\n            \"&notindot;\": \"\\u22F5\\u0338\",\n            \"&notinva;\": \"\\u2209\",\n            \"&notinvb;\": \"\\u22F7\",\n            \"&notinvc;\": \"\\u22F6\",\n            \"&notni;\": \"\\u220C\",\n            \"&notniva;\": \"\\u220C\",\n            \"&notnivb;\": \"\\u22FE\",\n            \"&notnivc;\": \"\\u22FD\",\n            \"&npar;\": \"\\u2226\",\n            \"&nparallel;\": \"\\u2226\",\n            \"&nparsl;\": \"\\u2AFD\\u20E5\",\n            \"&npart;\": \"\\u2202\\u0338\",\n            \"&npolint;\": \"\\u2A14\",\n            \"&npr;\": \"\\u2280\",\n            \"&nprcue;\": \"\\u22E0\",\n            \"&npre;\": \"\\u2AAF\\u0338\",\n            \"&nprec;\": \"\\u2280\",\n            \"&npreceq;\": \"\\u2AAF\\u0338\",\n            \"&nrArr;\": \"\\u21CF\",\n            \"&nrarr;\": \"\\u219B\",\n            \"&nrarrc;\": \"\\u2933\\u0338\",\n            \"&nrarrw;\": \"\\u219D\\u0338\",\n            \"&nrightarrow;\": \"\\u219B\",\n            \"&nrtri;\": \"\\u22EB\",\n            \"&nrtrie;\": \"\\u22ED\",\n            \"&nsc;\": \"\\u2281\",\n            \"&nsccue;\": \"\\u22E1\",\n            \"&nsce;\": \"\\u2AB0\\u0338\",\n            \"&nscr;\": \"\\uD835\\uDCC3\",\n            \"&nshortmid;\": \"\\u2224\",\n            \"&nshortparallel;\": \"\\u2226\",\n            \"&nsim;\": \"\\u2241\",\n            \"&nsime;\": \"\\u2244\",\n            \"&nsimeq;\": \"\\u2244\",\n            \"&nsmid;\": \"\\u2224\",\n            \"&nspar;\": \"\\u2226\",\n            \"&nsqsube;\": \"\\u22E2\",\n            \"&nsqsupe;\": \"\\u22E3\",\n            \"&nsub;\": \"\\u2284\",\n            \"&nsubE;\": \"\\u2AC5\\u0338\",\n            \"&nsube;\": \"\\u2288\",\n            \"&nsubset;\": \"\\u2282\\u20D2\",\n            \"&nsubseteq;\": \"\\u2288\",\n            \"&nsubseteqq;\": \"\\u2AC5\\u0338\",\n            \"&nsucc;\": \"\\u2281\",\n            \"&nsucceq;\": \"\\u2AB0\\u0338\",\n            \"&nsup;\": \"\\u2285\",\n            \"&nsupE;\": \"\\u2AC6\\u0338\",\n            \"&nsupe;\": \"\\u2289\",\n            \"&nsupset;\": \"\\u2283\\u20D2\",\n            \"&nsupseteq;\": \"\\u2289\",\n            \"&nsupseteqq;\": \"\\u2AC6\\u0338\",\n            \"&ntgl;\": \"\\u2279\",\n            \"&ntilde\": \"\\xf1\",\n            \"&ntilde;\": \"\\xf1\",\n            \"&ntlg;\": \"\\u2278\",\n            \"&ntriangleleft;\": \"\\u22EA\",\n            \"&ntrianglelefteq;\": \"\\u22EC\",\n            \"&ntriangleright;\": \"\\u22EB\",\n            \"&ntrianglerighteq;\": \"\\u22ED\",\n            \"&nu;\": \"\\u03BD\",\n            \"&num;\": \"#\",\n            \"&numero;\": \"\\u2116\",\n            \"&numsp;\": \"\\u2007\",\n            \"&nvDash;\": \"\\u22AD\",\n            \"&nvHarr;\": \"\\u2904\",\n            \"&nvap;\": \"\\u224D\\u20D2\",\n            \"&nvdash;\": \"\\u22AC\",\n            \"&nvge;\": \"\\u2265\\u20D2\",\n            \"&nvgt;\": \">\\u20D2\",\n            \"&nvinfin;\": \"\\u29DE\",\n            \"&nvlArr;\": \"\\u2902\",\n            \"&nvle;\": \"\\u2264\\u20D2\",\n            \"&nvlt;\": \"<\\u20D2\",\n            \"&nvltrie;\": \"\\u22B4\\u20D2\",\n            \"&nvrArr;\": \"\\u2903\",\n            \"&nvrtrie;\": \"\\u22B5\\u20D2\",\n            \"&nvsim;\": \"\\u223C\\u20D2\",\n            \"&nwArr;\": \"\\u21D6\",\n            \"&nwarhk;\": \"\\u2923\",\n            \"&nwarr;\": \"\\u2196\",\n            \"&nwarrow;\": \"\\u2196\",\n            \"&nwnear;\": \"\\u2927\",\n            \"&oS;\": \"\\u24C8\",\n            \"&oacute\": \"\\xf3\",\n            \"&oacute;\": \"\\xf3\",\n            \"&oast;\": \"\\u229B\",\n            \"&ocir;\": \"\\u229A\",\n            \"&ocirc\": \"\\xf4\",\n            \"&ocirc;\": \"\\xf4\",\n            \"&ocy;\": \"\\u043E\",\n            \"&odash;\": \"\\u229D\",\n            \"&odblac;\": \"\\u0151\",\n            \"&odiv;\": \"\\u2A38\",\n            \"&odot;\": \"\\u2299\",\n            \"&odsold;\": \"\\u29BC\",\n            \"&oelig;\": \"\\u0153\",\n            \"&ofcir;\": \"\\u29BF\",\n            \"&ofr;\": \"\\uD835\\uDD2C\",\n            \"&ogon;\": \"\\u02DB\",\n            \"&ograve\": \"\\xf2\",\n            \"&ograve;\": \"\\xf2\",\n            \"&ogt;\": \"\\u29C1\",\n            \"&ohbar;\": \"\\u29B5\",\n            \"&ohm;\": \"\\u03A9\",\n            \"&oint;\": \"\\u222E\",\n            \"&olarr;\": \"\\u21BA\",\n            \"&olcir;\": \"\\u29BE\",\n            \"&olcross;\": \"\\u29BB\",\n            \"&oline;\": \"\\u203E\",\n            \"&olt;\": \"\\u29C0\",\n            \"&omacr;\": \"\\u014D\",\n            \"&omega;\": \"\\u03C9\",\n            \"&omicron;\": \"\\u03BF\",\n            \"&omid;\": \"\\u29B6\",\n            \"&ominus;\": \"\\u2296\",\n            \"&oopf;\": \"\\uD835\\uDD60\",\n            \"&opar;\": \"\\u29B7\",\n            \"&operp;\": \"\\u29B9\",\n            \"&oplus;\": \"\\u2295\",\n            \"&or;\": \"\\u2228\",\n            \"&orarr;\": \"\\u21BB\",\n            \"&ord;\": \"\\u2A5D\",\n            \"&order;\": \"\\u2134\",\n            \"&orderof;\": \"\\u2134\",\n            \"&ordf\": \"\\xaa\",\n            \"&ordf;\": \"\\xaa\",\n            \"&ordm\": \"\\xba\",\n            \"&ordm;\": \"\\xba\",\n            \"&origof;\": \"\\u22B6\",\n            \"&oror;\": \"\\u2A56\",\n            \"&orslope;\": \"\\u2A57\",\n            \"&orv;\": \"\\u2A5B\",\n            \"&oscr;\": \"\\u2134\",\n            \"&oslash\": \"\\xf8\",\n            \"&oslash;\": \"\\xf8\",\n            \"&osol;\": \"\\u2298\",\n            \"&otilde\": \"\\xf5\",\n            \"&otilde;\": \"\\xf5\",\n            \"&otimes;\": \"\\u2297\",\n            \"&otimesas;\": \"\\u2A36\",\n            \"&ouml\": \"\\xf6\",\n            \"&ouml;\": \"\\xf6\",\n            \"&ovbar;\": \"\\u233D\",\n            \"&par;\": \"\\u2225\",\n            \"&para\": \"\\xb6\",\n            \"&para;\": \"\\xb6\",\n            \"&parallel;\": \"\\u2225\",\n            \"&parsim;\": \"\\u2AF3\",\n            \"&parsl;\": \"\\u2AFD\",\n            \"&part;\": \"\\u2202\",\n            \"&pcy;\": \"\\u043F\",\n            \"&percnt;\": \"%\",\n            \"&period;\": \".\",\n            \"&permil;\": \"\\u2030\",\n            \"&perp;\": \"\\u22A5\",\n            \"&pertenk;\": \"\\u2031\",\n            \"&pfr;\": \"\\uD835\\uDD2D\",\n            \"&phi;\": \"\\u03C6\",\n            \"&phiv;\": \"\\u03D5\",\n            \"&phmmat;\": \"\\u2133\",\n            \"&phone;\": \"\\u260E\",\n            \"&pi;\": \"\\u03C0\",\n            \"&pitchfork;\": \"\\u22D4\",\n            \"&piv;\": \"\\u03D6\",\n            \"&planck;\": \"\\u210F\",\n            \"&planckh;\": \"\\u210E\",\n            \"&plankv;\": \"\\u210F\",\n            \"&plus;\": \"+\",\n            \"&plusacir;\": \"\\u2A23\",\n            \"&plusb;\": \"\\u229E\",\n            \"&pluscir;\": \"\\u2A22\",\n            \"&plusdo;\": \"\\u2214\",\n            \"&plusdu;\": \"\\u2A25\",\n            \"&pluse;\": \"\\u2A72\",\n            \"&plusmn\": \"\\xb1\",\n            \"&plusmn;\": \"\\xb1\",\n            \"&plussim;\": \"\\u2A26\",\n            \"&plustwo;\": \"\\u2A27\",\n            \"&pm;\": \"\\xb1\",\n            \"&pointint;\": \"\\u2A15\",\n            \"&popf;\": \"\\uD835\\uDD61\",\n            \"&pound\": \"\\xa3\",\n            \"&pound;\": \"\\xa3\",\n            \"&pr;\": \"\\u227A\",\n            \"&prE;\": \"\\u2AB3\",\n            \"&prap;\": \"\\u2AB7\",\n            \"&prcue;\": \"\\u227C\",\n            \"&pre;\": \"\\u2AAF\",\n            \"&prec;\": \"\\u227A\",\n            \"&precapprox;\": \"\\u2AB7\",\n            \"&preccurlyeq;\": \"\\u227C\",\n            \"&preceq;\": \"\\u2AAF\",\n            \"&precnapprox;\": \"\\u2AB9\",\n            \"&precneqq;\": \"\\u2AB5\",\n            \"&precnsim;\": \"\\u22E8\",\n            \"&precsim;\": \"\\u227E\",\n            \"&prime;\": \"\\u2032\",\n            \"&primes;\": \"\\u2119\",\n            \"&prnE;\": \"\\u2AB5\",\n            \"&prnap;\": \"\\u2AB9\",\n            \"&prnsim;\": \"\\u22E8\",\n            \"&prod;\": \"\\u220F\",\n            \"&profalar;\": \"\\u232E\",\n            \"&profline;\": \"\\u2312\",\n            \"&profsurf;\": \"\\u2313\",\n            \"&prop;\": \"\\u221D\",\n            \"&propto;\": \"\\u221D\",\n            \"&prsim;\": \"\\u227E\",\n            \"&prurel;\": \"\\u22B0\",\n            \"&pscr;\": \"\\uD835\\uDCC5\",\n            \"&psi;\": \"\\u03C8\",\n            \"&puncsp;\": \"\\u2008\",\n            \"&qfr;\": \"\\uD835\\uDD2E\",\n            \"&qint;\": \"\\u2A0C\",\n            \"&qopf;\": \"\\uD835\\uDD62\",\n            \"&qprime;\": \"\\u2057\",\n            \"&qscr;\": \"\\uD835\\uDCC6\",\n            \"&quaternions;\": \"\\u210D\",\n            \"&quatint;\": \"\\u2A16\",\n            \"&quest;\": \"?\",\n            \"&questeq;\": \"\\u225F\",\n            \"&quot\": '\"',\n            \"&quot;\": '\"',\n            \"&rAarr;\": \"\\u21DB\",\n            \"&rArr;\": \"\\u21D2\",\n            \"&rAtail;\": \"\\u291C\",\n            \"&rBarr;\": \"\\u290F\",\n            \"&rHar;\": \"\\u2964\",\n            \"&race;\": \"\\u223D\\u0331\",\n            \"&racute;\": \"\\u0155\",\n            \"&radic;\": \"\\u221A\",\n            \"&raemptyv;\": \"\\u29B3\",\n            \"&rang;\": \"\\u27E9\",\n            \"&rangd;\": \"\\u2992\",\n            \"&range;\": \"\\u29A5\",\n            \"&rangle;\": \"\\u27E9\",\n            \"&raquo\": \"\\xbb\",\n            \"&raquo;\": \"\\xbb\",\n            \"&rarr;\": \"\\u2192\",\n            \"&rarrap;\": \"\\u2975\",\n            \"&rarrb;\": \"\\u21E5\",\n            \"&rarrbfs;\": \"\\u2920\",\n            \"&rarrc;\": \"\\u2933\",\n            \"&rarrfs;\": \"\\u291E\",\n            \"&rarrhk;\": \"\\u21AA\",\n            \"&rarrlp;\": \"\\u21AC\",\n            \"&rarrpl;\": \"\\u2945\",\n            \"&rarrsim;\": \"\\u2974\",\n            \"&rarrtl;\": \"\\u21A3\",\n            \"&rarrw;\": \"\\u219D\",\n            \"&ratail;\": \"\\u291A\",\n            \"&ratio;\": \"\\u2236\",\n            \"&rationals;\": \"\\u211A\",\n            \"&rbarr;\": \"\\u290D\",\n            \"&rbbrk;\": \"\\u2773\",\n            \"&rbrace;\": \"}\",\n            \"&rbrack;\": \"]\",\n            \"&rbrke;\": \"\\u298C\",\n            \"&rbrksld;\": \"\\u298E\",\n            \"&rbrkslu;\": \"\\u2990\",\n            \"&rcaron;\": \"\\u0159\",\n            \"&rcedil;\": \"\\u0157\",\n            \"&rceil;\": \"\\u2309\",\n            \"&rcub;\": \"}\",\n            \"&rcy;\": \"\\u0440\",\n            \"&rdca;\": \"\\u2937\",\n            \"&rdldhar;\": \"\\u2969\",\n            \"&rdquo;\": \"\\u201D\",\n            \"&rdquor;\": \"\\u201D\",\n            \"&rdsh;\": \"\\u21B3\",\n            \"&real;\": \"\\u211C\",\n            \"&realine;\": \"\\u211B\",\n            \"&realpart;\": \"\\u211C\",\n            \"&reals;\": \"\\u211D\",\n            \"&rect;\": \"\\u25AD\",\n            \"&reg\": \"\\xae\",\n            \"&reg;\": \"\\xae\",\n            \"&rfisht;\": \"\\u297D\",\n            \"&rfloor;\": \"\\u230B\",\n            \"&rfr;\": \"\\uD835\\uDD2F\",\n            \"&rhard;\": \"\\u21C1\",\n            \"&rharu;\": \"\\u21C0\",\n            \"&rharul;\": \"\\u296C\",\n            \"&rho;\": \"\\u03C1\",\n            \"&rhov;\": \"\\u03F1\",\n            \"&rightarrow;\": \"\\u2192\",\n            \"&rightarrowtail;\": \"\\u21A3\",\n            \"&rightharpoondown;\": \"\\u21C1\",\n            \"&rightharpoonup;\": \"\\u21C0\",\n            \"&rightleftarrows;\": \"\\u21C4\",\n            \"&rightleftharpoons;\": \"\\u21CC\",\n            \"&rightrightarrows;\": \"\\u21C9\",\n            \"&rightsquigarrow;\": \"\\u219D\",\n            \"&rightthreetimes;\": \"\\u22CC\",\n            \"&ring;\": \"\\u02DA\",\n            \"&risingdotseq;\": \"\\u2253\",\n            \"&rlarr;\": \"\\u21C4\",\n            \"&rlhar;\": \"\\u21CC\",\n            \"&rlm;\": \"\\u200F\",\n            \"&rmoust;\": \"\\u23B1\",\n            \"&rmoustache;\": \"\\u23B1\",\n            \"&rnmid;\": \"\\u2AEE\",\n            \"&roang;\": \"\\u27ED\",\n            \"&roarr;\": \"\\u21FE\",\n            \"&robrk;\": \"\\u27E7\",\n            \"&ropar;\": \"\\u2986\",\n            \"&ropf;\": \"\\uD835\\uDD63\",\n            \"&roplus;\": \"\\u2A2E\",\n            \"&rotimes;\": \"\\u2A35\",\n            \"&rpar;\": \")\",\n            \"&rpargt;\": \"\\u2994\",\n            \"&rppolint;\": \"\\u2A12\",\n            \"&rrarr;\": \"\\u21C9\",\n            \"&rsaquo;\": \"\\u203A\",\n            \"&rscr;\": \"\\uD835\\uDCC7\",\n            \"&rsh;\": \"\\u21B1\",\n            \"&rsqb;\": \"]\",\n            \"&rsquo;\": \"\\u2019\",\n            \"&rsquor;\": \"\\u2019\",\n            \"&rthree;\": \"\\u22CC\",\n            \"&rtimes;\": \"\\u22CA\",\n            \"&rtri;\": \"\\u25B9\",\n            \"&rtrie;\": \"\\u22B5\",\n            \"&rtrif;\": \"\\u25B8\",\n            \"&rtriltri;\": \"\\u29CE\",\n            \"&ruluhar;\": \"\\u2968\",\n            \"&rx;\": \"\\u211E\",\n            \"&sacute;\": \"\\u015B\",\n            \"&sbquo;\": \"\\u201A\",\n            \"&sc;\": \"\\u227B\",\n            \"&scE;\": \"\\u2AB4\",\n            \"&scap;\": \"\\u2AB8\",\n            \"&scaron;\": \"\\u0161\",\n            \"&sccue;\": \"\\u227D\",\n            \"&sce;\": \"\\u2AB0\",\n            \"&scedil;\": \"\\u015F\",\n            \"&scirc;\": \"\\u015D\",\n            \"&scnE;\": \"\\u2AB6\",\n            \"&scnap;\": \"\\u2ABA\",\n            \"&scnsim;\": \"\\u22E9\",\n            \"&scpolint;\": \"\\u2A13\",\n            \"&scsim;\": \"\\u227F\",\n            \"&scy;\": \"\\u0441\",\n            \"&sdot;\": \"\\u22C5\",\n            \"&sdotb;\": \"\\u22A1\",\n            \"&sdote;\": \"\\u2A66\",\n            \"&seArr;\": \"\\u21D8\",\n            \"&searhk;\": \"\\u2925\",\n            \"&searr;\": \"\\u2198\",\n            \"&searrow;\": \"\\u2198\",\n            \"&sect\": \"\\xa7\",\n            \"&sect;\": \"\\xa7\",\n            \"&semi;\": \";\",\n            \"&seswar;\": \"\\u2929\",\n            \"&setminus;\": \"\\u2216\",\n            \"&setmn;\": \"\\u2216\",\n            \"&sext;\": \"\\u2736\",\n            \"&sfr;\": \"\\uD835\\uDD30\",\n            \"&sfrown;\": \"\\u2322\",\n            \"&sharp;\": \"\\u266F\",\n            \"&shchcy;\": \"\\u0449\",\n            \"&shcy;\": \"\\u0448\",\n            \"&shortmid;\": \"\\u2223\",\n            \"&shortparallel;\": \"\\u2225\",\n            \"&shy\": \"\\xad\",\n            \"&shy;\": \"\\xad\",\n            \"&sigma;\": \"\\u03C3\",\n            \"&sigmaf;\": \"\\u03C2\",\n            \"&sigmav;\": \"\\u03C2\",\n            \"&sim;\": \"\\u223C\",\n            \"&simdot;\": \"\\u2A6A\",\n            \"&sime;\": \"\\u2243\",\n            \"&simeq;\": \"\\u2243\",\n            \"&simg;\": \"\\u2A9E\",\n            \"&simgE;\": \"\\u2AA0\",\n            \"&siml;\": \"\\u2A9D\",\n            \"&simlE;\": \"\\u2A9F\",\n            \"&simne;\": \"\\u2246\",\n            \"&simplus;\": \"\\u2A24\",\n            \"&simrarr;\": \"\\u2972\",\n            \"&slarr;\": \"\\u2190\",\n            \"&smallsetminus;\": \"\\u2216\",\n            \"&smashp;\": \"\\u2A33\",\n            \"&smeparsl;\": \"\\u29E4\",\n            \"&smid;\": \"\\u2223\",\n            \"&smile;\": \"\\u2323\",\n            \"&smt;\": \"\\u2AAA\",\n            \"&smte;\": \"\\u2AAC\",\n            \"&smtes;\": \"\\u2AAC\\uFE00\",\n            \"&softcy;\": \"\\u044C\",\n            \"&sol;\": \"/\",\n            \"&solb;\": \"\\u29C4\",\n            \"&solbar;\": \"\\u233F\",\n            \"&sopf;\": \"\\uD835\\uDD64\",\n            \"&spades;\": \"\\u2660\",\n            \"&spadesuit;\": \"\\u2660\",\n            \"&spar;\": \"\\u2225\",\n            \"&sqcap;\": \"\\u2293\",\n            \"&sqcaps;\": \"\\u2293\\uFE00\",\n            \"&sqcup;\": \"\\u2294\",\n            \"&sqcups;\": \"\\u2294\\uFE00\",\n            \"&sqsub;\": \"\\u228F\",\n            \"&sqsube;\": \"\\u2291\",\n            \"&sqsubset;\": \"\\u228F\",\n            \"&sqsubseteq;\": \"\\u2291\",\n            \"&sqsup;\": \"\\u2290\",\n            \"&sqsupe;\": \"\\u2292\",\n            \"&sqsupset;\": \"\\u2290\",\n            \"&sqsupseteq;\": \"\\u2292\",\n            \"&squ;\": \"\\u25A1\",\n            \"&square;\": \"\\u25A1\",\n            \"&squarf;\": \"\\u25AA\",\n            \"&squf;\": \"\\u25AA\",\n            \"&srarr;\": \"\\u2192\",\n            \"&sscr;\": \"\\uD835\\uDCC8\",\n            \"&ssetmn;\": \"\\u2216\",\n            \"&ssmile;\": \"\\u2323\",\n            \"&sstarf;\": \"\\u22C6\",\n            \"&star;\": \"\\u2606\",\n            \"&starf;\": \"\\u2605\",\n            \"&straightepsilon;\": \"\\u03F5\",\n            \"&straightphi;\": \"\\u03D5\",\n            \"&strns;\": \"\\xaf\",\n            \"&sub;\": \"\\u2282\",\n            \"&subE;\": \"\\u2AC5\",\n            \"&subdot;\": \"\\u2ABD\",\n            \"&sube;\": \"\\u2286\",\n            \"&subedot;\": \"\\u2AC3\",\n            \"&submult;\": \"\\u2AC1\",\n            \"&subnE;\": \"\\u2ACB\",\n            \"&subne;\": \"\\u228A\",\n            \"&subplus;\": \"\\u2ABF\",\n            \"&subrarr;\": \"\\u2979\",\n            \"&subset;\": \"\\u2282\",\n            \"&subseteq;\": \"\\u2286\",\n            \"&subseteqq;\": \"\\u2AC5\",\n            \"&subsetneq;\": \"\\u228A\",\n            \"&subsetneqq;\": \"\\u2ACB\",\n            \"&subsim;\": \"\\u2AC7\",\n            \"&subsub;\": \"\\u2AD5\",\n            \"&subsup;\": \"\\u2AD3\",\n            \"&succ;\": \"\\u227B\",\n            \"&succapprox;\": \"\\u2AB8\",\n            \"&succcurlyeq;\": \"\\u227D\",\n            \"&succeq;\": \"\\u2AB0\",\n            \"&succnapprox;\": \"\\u2ABA\",\n            \"&succneqq;\": \"\\u2AB6\",\n            \"&succnsim;\": \"\\u22E9\",\n            \"&succsim;\": \"\\u227F\",\n            \"&sum;\": \"\\u2211\",\n            \"&sung;\": \"\\u266A\",\n            \"&sup1\": \"\\xb9\",\n            \"&sup1;\": \"\\xb9\",\n            \"&sup2\": \"\\xb2\",\n            \"&sup2;\": \"\\xb2\",\n            \"&sup3\": \"\\xb3\",\n            \"&sup3;\": \"\\xb3\",\n            \"&sup;\": \"\\u2283\",\n            \"&supE;\": \"\\u2AC6\",\n            \"&supdot;\": \"\\u2ABE\",\n            \"&supdsub;\": \"\\u2AD8\",\n            \"&supe;\": \"\\u2287\",\n            \"&supedot;\": \"\\u2AC4\",\n            \"&suphsol;\": \"\\u27C9\",\n            \"&suphsub;\": \"\\u2AD7\",\n            \"&suplarr;\": \"\\u297B\",\n            \"&supmult;\": \"\\u2AC2\",\n            \"&supnE;\": \"\\u2ACC\",\n            \"&supne;\": \"\\u228B\",\n            \"&supplus;\": \"\\u2AC0\",\n            \"&supset;\": \"\\u2283\",\n            \"&supseteq;\": \"\\u2287\",\n            \"&supseteqq;\": \"\\u2AC6\",\n            \"&supsetneq;\": \"\\u228B\",\n            \"&supsetneqq;\": \"\\u2ACC\",\n            \"&supsim;\": \"\\u2AC8\",\n            \"&supsub;\": \"\\u2AD4\",\n            \"&supsup;\": \"\\u2AD6\",\n            \"&swArr;\": \"\\u21D9\",\n            \"&swarhk;\": \"\\u2926\",\n            \"&swarr;\": \"\\u2199\",\n            \"&swarrow;\": \"\\u2199\",\n            \"&swnwar;\": \"\\u292A\",\n            \"&szlig\": \"\\xdf\",\n            \"&szlig;\": \"\\xdf\",\n            \"&target;\": \"\\u2316\",\n            \"&tau;\": \"\\u03C4\",\n            \"&tbrk;\": \"\\u23B4\",\n            \"&tcaron;\": \"\\u0165\",\n            \"&tcedil;\": \"\\u0163\",\n            \"&tcy;\": \"\\u0442\",\n            \"&tdot;\": \"\\u20DB\",\n            \"&telrec;\": \"\\u2315\",\n            \"&tfr;\": \"\\uD835\\uDD31\",\n            \"&there4;\": \"\\u2234\",\n            \"&therefore;\": \"\\u2234\",\n            \"&theta;\": \"\\u03B8\",\n            \"&thetasym;\": \"\\u03D1\",\n            \"&thetav;\": \"\\u03D1\",\n            \"&thickapprox;\": \"\\u2248\",\n            \"&thicksim;\": \"\\u223C\",\n            \"&thinsp;\": \"\\u2009\",\n            \"&thkap;\": \"\\u2248\",\n            \"&thksim;\": \"\\u223C\",\n            \"&thorn\": \"\\xfe\",\n            \"&thorn;\": \"\\xfe\",\n            \"&tilde;\": \"\\u02DC\",\n            \"&times\": \"\\xd7\",\n            \"&times;\": \"\\xd7\",\n            \"&timesb;\": \"\\u22A0\",\n            \"&timesbar;\": \"\\u2A31\",\n            \"&timesd;\": \"\\u2A30\",\n            \"&tint;\": \"\\u222D\",\n            \"&toea;\": \"\\u2928\",\n            \"&top;\": \"\\u22A4\",\n            \"&topbot;\": \"\\u2336\",\n            \"&topcir;\": \"\\u2AF1\",\n            \"&topf;\": \"\\uD835\\uDD65\",\n            \"&topfork;\": \"\\u2ADA\",\n            \"&tosa;\": \"\\u2929\",\n            \"&tprime;\": \"\\u2034\",\n            \"&trade;\": \"\\u2122\",\n            \"&triangle;\": \"\\u25B5\",\n            \"&triangledown;\": \"\\u25BF\",\n            \"&triangleleft;\": \"\\u25C3\",\n            \"&trianglelefteq;\": \"\\u22B4\",\n            \"&triangleq;\": \"\\u225C\",\n            \"&triangleright;\": \"\\u25B9\",\n            \"&trianglerighteq;\": \"\\u22B5\",\n            \"&tridot;\": \"\\u25EC\",\n            \"&trie;\": \"\\u225C\",\n            \"&triminus;\": \"\\u2A3A\",\n            \"&triplus;\": \"\\u2A39\",\n            \"&trisb;\": \"\\u29CD\",\n            \"&tritime;\": \"\\u2A3B\",\n            \"&trpezium;\": \"\\u23E2\",\n            \"&tscr;\": \"\\uD835\\uDCC9\",\n            \"&tscy;\": \"\\u0446\",\n            \"&tshcy;\": \"\\u045B\",\n            \"&tstrok;\": \"\\u0167\",\n            \"&twixt;\": \"\\u226C\",\n            \"&twoheadleftarrow;\": \"\\u219E\",\n            \"&twoheadrightarrow;\": \"\\u21A0\",\n            \"&uArr;\": \"\\u21D1\",\n            \"&uHar;\": \"\\u2963\",\n            \"&uacute\": \"\\xfa\",\n            \"&uacute;\": \"\\xfa\",\n            \"&uarr;\": \"\\u2191\",\n            \"&ubrcy;\": \"\\u045E\",\n            \"&ubreve;\": \"\\u016D\",\n            \"&ucirc\": \"\\xfb\",\n            \"&ucirc;\": \"\\xfb\",\n            \"&ucy;\": \"\\u0443\",\n            \"&udarr;\": \"\\u21C5\",\n            \"&udblac;\": \"\\u0171\",\n            \"&udhar;\": \"\\u296E\",\n            \"&ufisht;\": \"\\u297E\",\n            \"&ufr;\": \"\\uD835\\uDD32\",\n            \"&ugrave\": \"\\xf9\",\n            \"&ugrave;\": \"\\xf9\",\n            \"&uharl;\": \"\\u21BF\",\n            \"&uharr;\": \"\\u21BE\",\n            \"&uhblk;\": \"\\u2580\",\n            \"&ulcorn;\": \"\\u231C\",\n            \"&ulcorner;\": \"\\u231C\",\n            \"&ulcrop;\": \"\\u230F\",\n            \"&ultri;\": \"\\u25F8\",\n            \"&umacr;\": \"\\u016B\",\n            \"&uml\": \"\\xa8\",\n            \"&uml;\": \"\\xa8\",\n            \"&uogon;\": \"\\u0173\",\n            \"&uopf;\": \"\\uD835\\uDD66\",\n            \"&uparrow;\": \"\\u2191\",\n            \"&updownarrow;\": \"\\u2195\",\n            \"&upharpoonleft;\": \"\\u21BF\",\n            \"&upharpoonright;\": \"\\u21BE\",\n            \"&uplus;\": \"\\u228E\",\n            \"&upsi;\": \"\\u03C5\",\n            \"&upsih;\": \"\\u03D2\",\n            \"&upsilon;\": \"\\u03C5\",\n            \"&upuparrows;\": \"\\u21C8\",\n            \"&urcorn;\": \"\\u231D\",\n            \"&urcorner;\": \"\\u231D\",\n            \"&urcrop;\": \"\\u230E\",\n            \"&uring;\": \"\\u016F\",\n            \"&urtri;\": \"\\u25F9\",\n            \"&uscr;\": \"\\uD835\\uDCCA\",\n            \"&utdot;\": \"\\u22F0\",\n            \"&utilde;\": \"\\u0169\",\n            \"&utri;\": \"\\u25B5\",\n            \"&utrif;\": \"\\u25B4\",\n            \"&uuarr;\": \"\\u21C8\",\n            \"&uuml\": \"\\xfc\",\n            \"&uuml;\": \"\\xfc\",\n            \"&uwangle;\": \"\\u29A7\",\n            \"&vArr;\": \"\\u21D5\",\n            \"&vBar;\": \"\\u2AE8\",\n            \"&vBarv;\": \"\\u2AE9\",\n            \"&vDash;\": \"\\u22A8\",\n            \"&vangrt;\": \"\\u299C\",\n            \"&varepsilon;\": \"\\u03F5\",\n            \"&varkappa;\": \"\\u03F0\",\n            \"&varnothing;\": \"\\u2205\",\n            \"&varphi;\": \"\\u03D5\",\n            \"&varpi;\": \"\\u03D6\",\n            \"&varpropto;\": \"\\u221D\",\n            \"&varr;\": \"\\u2195\",\n            \"&varrho;\": \"\\u03F1\",\n            \"&varsigma;\": \"\\u03C2\",\n            \"&varsubsetneq;\": \"\\u228A\\uFE00\",\n            \"&varsubsetneqq;\": \"\\u2ACB\\uFE00\",\n            \"&varsupsetneq;\": \"\\u228B\\uFE00\",\n            \"&varsupsetneqq;\": \"\\u2ACC\\uFE00\",\n            \"&vartheta;\": \"\\u03D1\",\n            \"&vartriangleleft;\": \"\\u22B2\",\n            \"&vartriangleright;\": \"\\u22B3\",\n            \"&vcy;\": \"\\u0432\",\n            \"&vdash;\": \"\\u22A2\",\n            \"&vee;\": \"\\u2228\",\n            \"&veebar;\": \"\\u22BB\",\n            \"&veeeq;\": \"\\u225A\",\n            \"&vellip;\": \"\\u22EE\",\n            \"&verbar;\": \"|\",\n            \"&vert;\": \"|\",\n            \"&vfr;\": \"\\uD835\\uDD33\",\n            \"&vltri;\": \"\\u22B2\",\n            \"&vnsub;\": \"\\u2282\\u20D2\",\n            \"&vnsup;\": \"\\u2283\\u20D2\",\n            \"&vopf;\": \"\\uD835\\uDD67\",\n            \"&vprop;\": \"\\u221D\",\n            \"&vrtri;\": \"\\u22B3\",\n            \"&vscr;\": \"\\uD835\\uDCCB\",\n            \"&vsubnE;\": \"\\u2ACB\\uFE00\",\n            \"&vsubne;\": \"\\u228A\\uFE00\",\n            \"&vsupnE;\": \"\\u2ACC\\uFE00\",\n            \"&vsupne;\": \"\\u228B\\uFE00\",\n            \"&vzigzag;\": \"\\u299A\",\n            \"&wcirc;\": \"\\u0175\",\n            \"&wedbar;\": \"\\u2A5F\",\n            \"&wedge;\": \"\\u2227\",\n            \"&wedgeq;\": \"\\u2259\",\n            \"&weierp;\": \"\\u2118\",\n            \"&wfr;\": \"\\uD835\\uDD34\",\n            \"&wopf;\": \"\\uD835\\uDD68\",\n            \"&wp;\": \"\\u2118\",\n            \"&wr;\": \"\\u2240\",\n            \"&wreath;\": \"\\u2240\",\n            \"&wscr;\": \"\\uD835\\uDCCC\",\n            \"&xcap;\": \"\\u22C2\",\n            \"&xcirc;\": \"\\u25EF\",\n            \"&xcup;\": \"\\u22C3\",\n            \"&xdtri;\": \"\\u25BD\",\n            \"&xfr;\": \"\\uD835\\uDD35\",\n            \"&xhArr;\": \"\\u27FA\",\n            \"&xharr;\": \"\\u27F7\",\n            \"&xi;\": \"\\u03BE\",\n            \"&xlArr;\": \"\\u27F8\",\n            \"&xlarr;\": \"\\u27F5\",\n            \"&xmap;\": \"\\u27FC\",\n            \"&xnis;\": \"\\u22FB\",\n            \"&xodot;\": \"\\u2A00\",\n            \"&xopf;\": \"\\uD835\\uDD69\",\n            \"&xoplus;\": \"\\u2A01\",\n            \"&xotime;\": \"\\u2A02\",\n            \"&xrArr;\": \"\\u27F9\",\n            \"&xrarr;\": \"\\u27F6\",\n            \"&xscr;\": \"\\uD835\\uDCCD\",\n            \"&xsqcup;\": \"\\u2A06\",\n            \"&xuplus;\": \"\\u2A04\",\n            \"&xutri;\": \"\\u25B3\",\n            \"&xvee;\": \"\\u22C1\",\n            \"&xwedge;\": \"\\u22C0\",\n            \"&yacute\": \"\\xfd\",\n            \"&yacute;\": \"\\xfd\",\n            \"&yacy;\": \"\\u044F\",\n            \"&ycirc;\": \"\\u0177\",\n            \"&ycy;\": \"\\u044B\",\n            \"&yen\": \"\\xa5\",\n            \"&yen;\": \"\\xa5\",\n            \"&yfr;\": \"\\uD835\\uDD36\",\n            \"&yicy;\": \"\\u0457\",\n            \"&yopf;\": \"\\uD835\\uDD6A\",\n            \"&yscr;\": \"\\uD835\\uDCCE\",\n            \"&yucy;\": \"\\u044E\",\n            \"&yuml\": \"\\xff\",\n            \"&yuml;\": \"\\xff\",\n            \"&zacute;\": \"\\u017A\",\n            \"&zcaron;\": \"\\u017E\",\n            \"&zcy;\": \"\\u0437\",\n            \"&zdot;\": \"\\u017C\",\n            \"&zeetrf;\": \"\\u2128\",\n            \"&zeta;\": \"\\u03B6\",\n            \"&zfr;\": \"\\uD835\\uDD37\",\n            \"&zhcy;\": \"\\u0436\",\n            \"&zigrarr;\": \"\\u21DD\",\n            \"&zopf;\": \"\\uD835\\uDD6B\",\n            \"&zscr;\": \"\\uD835\\uDCCF\",\n            \"&zwj;\": \"\\u200D\",\n            \"&zwnj;\": \"\\u200C\"\n        },\n        characters: {\n            \"\\xc6\": \"&AElig;\",\n            \"&\": \"&amp;\",\n            \"\\xc1\": \"&Aacute;\",\n            \"\\u0102\": \"&Abreve;\",\n            \"\\xc2\": \"&Acirc;\",\n            \"\\u0410\": \"&Acy;\",\n            \"\\uD835\\uDD04\": \"&Afr;\",\n            \"\\xc0\": \"&Agrave;\",\n            \"\\u0391\": \"&Alpha;\",\n            \"\\u0100\": \"&Amacr;\",\n            \"\\u2A53\": \"&And;\",\n            \"\\u0104\": \"&Aogon;\",\n            \"\\uD835\\uDD38\": \"&Aopf;\",\n            \"\\u2061\": \"&af;\",\n            \"\\xc5\": \"&angst;\",\n            \"\\uD835\\uDC9C\": \"&Ascr;\",\n            \"\\u2254\": \"&coloneq;\",\n            \"\\xc3\": \"&Atilde;\",\n            \"\\xc4\": \"&Auml;\",\n            \"\\u2216\": \"&ssetmn;\",\n            \"\\u2AE7\": \"&Barv;\",\n            \"\\u2306\": \"&doublebarwedge;\",\n            \"\\u0411\": \"&Bcy;\",\n            \"\\u2235\": \"&because;\",\n            \"\\u212C\": \"&bernou;\",\n            \"\\u0392\": \"&Beta;\",\n            \"\\uD835\\uDD05\": \"&Bfr;\",\n            \"\\uD835\\uDD39\": \"&Bopf;\",\n            \"\\u02D8\": \"&breve;\",\n            \"\\u224E\": \"&bump;\",\n            \"\\u0427\": \"&CHcy;\",\n            \"\\xa9\": \"&copy;\",\n            \"\\u0106\": \"&Cacute;\",\n            \"\\u22D2\": \"&Cap;\",\n            \"\\u2145\": \"&DD;\",\n            \"\\u212D\": \"&Cfr;\",\n            \"\\u010C\": \"&Ccaron;\",\n            \"\\xc7\": \"&Ccedil;\",\n            \"\\u0108\": \"&Ccirc;\",\n            \"\\u2230\": \"&Cconint;\",\n            \"\\u010A\": \"&Cdot;\",\n            \"\\xb8\": \"&cedil;\",\n            \"\\xb7\": \"&middot;\",\n            \"\\u03A7\": \"&Chi;\",\n            \"\\u2299\": \"&odot;\",\n            \"\\u2296\": \"&ominus;\",\n            \"\\u2295\": \"&oplus;\",\n            \"\\u2297\": \"&otimes;\",\n            \"\\u2232\": \"&cwconint;\",\n            \"\\u201D\": \"&rdquor;\",\n            \"\\u2019\": \"&rsquor;\",\n            \"\\u2237\": \"&Proportion;\",\n            \"\\u2A74\": \"&Colone;\",\n            \"\\u2261\": \"&equiv;\",\n            \"\\u222F\": \"&DoubleContourIntegral;\",\n            \"\\u222E\": \"&oint;\",\n            \"\\u2102\": \"&complexes;\",\n            \"\\u2210\": \"&coprod;\",\n            \"\\u2233\": \"&awconint;\",\n            \"\\u2A2F\": \"&Cross;\",\n            \"\\uD835\\uDC9E\": \"&Cscr;\",\n            \"\\u22D3\": \"&Cup;\",\n            \"\\u224D\": \"&asympeq;\",\n            \"\\u2911\": \"&DDotrahd;\",\n            \"\\u0402\": \"&DJcy;\",\n            \"\\u0405\": \"&DScy;\",\n            \"\\u040F\": \"&DZcy;\",\n            \"\\u2021\": \"&ddagger;\",\n            \"\\u21A1\": \"&Darr;\",\n            \"\\u2AE4\": \"&DoubleLeftTee;\",\n            \"\\u010E\": \"&Dcaron;\",\n            \"\\u0414\": \"&Dcy;\",\n            \"\\u2207\": \"&nabla;\",\n            \"\\u0394\": \"&Delta;\",\n            \"\\uD835\\uDD07\": \"&Dfr;\",\n            \"\\xb4\": \"&acute;\",\n            \"\\u02D9\": \"&dot;\",\n            \"\\u02DD\": \"&dblac;\",\n            \"`\": \"&grave;\",\n            \"\\u02DC\": \"&tilde;\",\n            \"\\u22C4\": \"&diamond;\",\n            \"\\u2146\": \"&dd;\",\n            \"\\uD835\\uDD3B\": \"&Dopf;\",\n            \"\\xa8\": \"&uml;\",\n            \"\\u20DC\": \"&DotDot;\",\n            \"\\u2250\": \"&esdot;\",\n            \"\\u21D3\": \"&dArr;\",\n            \"\\u21D0\": \"&lArr;\",\n            \"\\u21D4\": \"&iff;\",\n            \"\\u27F8\": \"&xlArr;\",\n            \"\\u27FA\": \"&xhArr;\",\n            \"\\u27F9\": \"&xrArr;\",\n            \"\\u21D2\": \"&rArr;\",\n            \"\\u22A8\": \"&vDash;\",\n            \"\\u21D1\": \"&uArr;\",\n            \"\\u21D5\": \"&vArr;\",\n            \"\\u2225\": \"&spar;\",\n            \"\\u2193\": \"&downarrow;\",\n            \"\\u2913\": \"&DownArrowBar;\",\n            \"\\u21F5\": \"&duarr;\",\n            \"\\u0311\": \"&DownBreve;\",\n            \"\\u2950\": \"&DownLeftRightVector;\",\n            \"\\u295E\": \"&DownLeftTeeVector;\",\n            \"\\u21BD\": \"&lhard;\",\n            \"\\u2956\": \"&DownLeftVectorBar;\",\n            \"\\u295F\": \"&DownRightTeeVector;\",\n            \"\\u21C1\": \"&rightharpoondown;\",\n            \"\\u2957\": \"&DownRightVectorBar;\",\n            \"\\u22A4\": \"&top;\",\n            \"\\u21A7\": \"&mapstodown;\",\n            \"\\uD835\\uDC9F\": \"&Dscr;\",\n            \"\\u0110\": \"&Dstrok;\",\n            \"\\u014A\": \"&ENG;\",\n            \"\\xd0\": \"&ETH;\",\n            \"\\xc9\": \"&Eacute;\",\n            \"\\u011A\": \"&Ecaron;\",\n            \"\\xca\": \"&Ecirc;\",\n            \"\\u042D\": \"&Ecy;\",\n            \"\\u0116\": \"&Edot;\",\n            \"\\uD835\\uDD08\": \"&Efr;\",\n            \"\\xc8\": \"&Egrave;\",\n            \"\\u2208\": \"&isinv;\",\n            \"\\u0112\": \"&Emacr;\",\n            \"\\u25FB\": \"&EmptySmallSquare;\",\n            \"\\u25AB\": \"&EmptyVerySmallSquare;\",\n            \"\\u0118\": \"&Eogon;\",\n            \"\\uD835\\uDD3C\": \"&Eopf;\",\n            \"\\u0395\": \"&Epsilon;\",\n            \"\\u2A75\": \"&Equal;\",\n            \"\\u2242\": \"&esim;\",\n            \"\\u21CC\": \"&rlhar;\",\n            \"\\u2130\": \"&expectation;\",\n            \"\\u2A73\": \"&Esim;\",\n            \"\\u0397\": \"&Eta;\",\n            \"\\xcb\": \"&Euml;\",\n            \"\\u2203\": \"&exist;\",\n            \"\\u2147\": \"&exponentiale;\",\n            \"\\u0424\": \"&Fcy;\",\n            \"\\uD835\\uDD09\": \"&Ffr;\",\n            \"\\u25FC\": \"&FilledSmallSquare;\",\n            \"\\u25AA\": \"&squf;\",\n            \"\\uD835\\uDD3D\": \"&Fopf;\",\n            \"\\u2200\": \"&forall;\",\n            \"\\u2131\": \"&Fscr;\",\n            \"\\u0403\": \"&GJcy;\",\n            \">\": \"&gt;\",\n            \"\\u0393\": \"&Gamma;\",\n            \"\\u03DC\": \"&Gammad;\",\n            \"\\u011E\": \"&Gbreve;\",\n            \"\\u0122\": \"&Gcedil;\",\n            \"\\u011C\": \"&Gcirc;\",\n            \"\\u0413\": \"&Gcy;\",\n            \"\\u0120\": \"&Gdot;\",\n            \"\\uD835\\uDD0A\": \"&Gfr;\",\n            \"\\u22D9\": \"&ggg;\",\n            \"\\uD835\\uDD3E\": \"&Gopf;\",\n            \"\\u2265\": \"&geq;\",\n            \"\\u22DB\": \"&gtreqless;\",\n            \"\\u2267\": \"&geqq;\",\n            \"\\u2AA2\": \"&GreaterGreater;\",\n            \"\\u2277\": \"&gtrless;\",\n            \"\\u2A7E\": \"&ges;\",\n            \"\\u2273\": \"&gtrsim;\",\n            \"\\uD835\\uDCA2\": \"&Gscr;\",\n            \"\\u226B\": \"&gg;\",\n            \"\\u042A\": \"&HARDcy;\",\n            \"\\u02C7\": \"&caron;\",\n            \"^\": \"&Hat;\",\n            \"\\u0124\": \"&Hcirc;\",\n            \"\\u210C\": \"&Poincareplane;\",\n            \"\\u210B\": \"&hamilt;\",\n            \"\\u210D\": \"&quaternions;\",\n            \"\\u2500\": \"&boxh;\",\n            \"\\u0126\": \"&Hstrok;\",\n            \"\\u224F\": \"&bumpeq;\",\n            \"\\u0415\": \"&IEcy;\",\n            \"\\u0132\": \"&IJlig;\",\n            \"\\u0401\": \"&IOcy;\",\n            \"\\xcd\": \"&Iacute;\",\n            \"\\xce\": \"&Icirc;\",\n            \"\\u0418\": \"&Icy;\",\n            \"\\u0130\": \"&Idot;\",\n            \"\\u2111\": \"&imagpart;\",\n            \"\\xcc\": \"&Igrave;\",\n            \"\\u012A\": \"&Imacr;\",\n            \"\\u2148\": \"&ii;\",\n            \"\\u222C\": \"&Int;\",\n            \"\\u222B\": \"&int;\",\n            \"\\u22C2\": \"&xcap;\",\n            \"\\u2063\": \"&ic;\",\n            \"\\u2062\": \"&it;\",\n            \"\\u012E\": \"&Iogon;\",\n            \"\\uD835\\uDD40\": \"&Iopf;\",\n            \"\\u0399\": \"&Iota;\",\n            \"\\u2110\": \"&imagline;\",\n            \"\\u0128\": \"&Itilde;\",\n            \"\\u0406\": \"&Iukcy;\",\n            \"\\xcf\": \"&Iuml;\",\n            \"\\u0134\": \"&Jcirc;\",\n            \"\\u0419\": \"&Jcy;\",\n            \"\\uD835\\uDD0D\": \"&Jfr;\",\n            \"\\uD835\\uDD41\": \"&Jopf;\",\n            \"\\uD835\\uDCA5\": \"&Jscr;\",\n            \"\\u0408\": \"&Jsercy;\",\n            \"\\u0404\": \"&Jukcy;\",\n            \"\\u0425\": \"&KHcy;\",\n            \"\\u040C\": \"&KJcy;\",\n            \"\\u039A\": \"&Kappa;\",\n            \"\\u0136\": \"&Kcedil;\",\n            \"\\u041A\": \"&Kcy;\",\n            \"\\uD835\\uDD0E\": \"&Kfr;\",\n            \"\\uD835\\uDD42\": \"&Kopf;\",\n            \"\\uD835\\uDCA6\": \"&Kscr;\",\n            \"\\u0409\": \"&LJcy;\",\n            \"<\": \"&lt;\",\n            \"\\u0139\": \"&Lacute;\",\n            \"\\u039B\": \"&Lambda;\",\n            \"\\u27EA\": \"&Lang;\",\n            \"\\u2112\": \"&lagran;\",\n            \"\\u219E\": \"&twoheadleftarrow;\",\n            \"\\u013D\": \"&Lcaron;\",\n            \"\\u013B\": \"&Lcedil;\",\n            \"\\u041B\": \"&Lcy;\",\n            \"\\u27E8\": \"&langle;\",\n            \"\\u2190\": \"&slarr;\",\n            \"\\u21E4\": \"&larrb;\",\n            \"\\u21C6\": \"&lrarr;\",\n            \"\\u2308\": \"&lceil;\",\n            \"\\u27E6\": \"&lobrk;\",\n            \"\\u2961\": \"&LeftDownTeeVector;\",\n            \"\\u21C3\": \"&downharpoonleft;\",\n            \"\\u2959\": \"&LeftDownVectorBar;\",\n            \"\\u230A\": \"&lfloor;\",\n            \"\\u2194\": \"&leftrightarrow;\",\n            \"\\u294E\": \"&LeftRightVector;\",\n            \"\\u22A3\": \"&dashv;\",\n            \"\\u21A4\": \"&mapstoleft;\",\n            \"\\u295A\": \"&LeftTeeVector;\",\n            \"\\u22B2\": \"&vltri;\",\n            \"\\u29CF\": \"&LeftTriangleBar;\",\n            \"\\u22B4\": \"&trianglelefteq;\",\n            \"\\u2951\": \"&LeftUpDownVector;\",\n            \"\\u2960\": \"&LeftUpTeeVector;\",\n            \"\\u21BF\": \"&upharpoonleft;\",\n            \"\\u2958\": \"&LeftUpVectorBar;\",\n            \"\\u21BC\": \"&lharu;\",\n            \"\\u2952\": \"&LeftVectorBar;\",\n            \"\\u22DA\": \"&lesseqgtr;\",\n            \"\\u2266\": \"&leqq;\",\n            \"\\u2276\": \"&lg;\",\n            \"\\u2AA1\": \"&LessLess;\",\n            \"\\u2A7D\": \"&les;\",\n            \"\\u2272\": \"&lsim;\",\n            \"\\uD835\\uDD0F\": \"&Lfr;\",\n            \"\\u22D8\": \"&Ll;\",\n            \"\\u21DA\": \"&lAarr;\",\n            \"\\u013F\": \"&Lmidot;\",\n            \"\\u27F5\": \"&xlarr;\",\n            \"\\u27F7\": \"&xharr;\",\n            \"\\u27F6\": \"&xrarr;\",\n            \"\\uD835\\uDD43\": \"&Lopf;\",\n            \"\\u2199\": \"&swarrow;\",\n            \"\\u2198\": \"&searrow;\",\n            \"\\u21B0\": \"&lsh;\",\n            \"\\u0141\": \"&Lstrok;\",\n            \"\\u226A\": \"&ll;\",\n            \"\\u2905\": \"&Map;\",\n            \"\\u041C\": \"&Mcy;\",\n            \"\\u205F\": \"&MediumSpace;\",\n            \"\\u2133\": \"&phmmat;\",\n            \"\\uD835\\uDD10\": \"&Mfr;\",\n            \"\\u2213\": \"&mp;\",\n            \"\\uD835\\uDD44\": \"&Mopf;\",\n            \"\\u039C\": \"&Mu;\",\n            \"\\u040A\": \"&NJcy;\",\n            \"\\u0143\": \"&Nacute;\",\n            \"\\u0147\": \"&Ncaron;\",\n            \"\\u0145\": \"&Ncedil;\",\n            \"\\u041D\": \"&Ncy;\",\n            \"\\u200B\": \"&ZeroWidthSpace;\",\n            \"\\n\": \"&NewLine;\",\n            \"\\uD835\\uDD11\": \"&Nfr;\",\n            \"\\u2060\": \"&NoBreak;\",\n            \"\\xa0\": \"&nbsp;\",\n            \"\\u2115\": \"&naturals;\",\n            \"\\u2AEC\": \"&Not;\",\n            \"\\u2262\": \"&nequiv;\",\n            \"\\u226D\": \"&NotCupCap;\",\n            \"\\u2226\": \"&nspar;\",\n            \"\\u2209\": \"&notinva;\",\n            \"\\u2260\": \"&ne;\",\n            \"\\u2242\\u0338\": \"&nesim;\",\n            \"\\u2204\": \"&nexists;\",\n            \"\\u226F\": \"&ngtr;\",\n            \"\\u2271\": \"&ngeq;\",\n            \"\\u2267\\u0338\": \"&ngeqq;\",\n            \"\\u226B\\u0338\": \"&nGtv;\",\n            \"\\u2279\": \"&ntgl;\",\n            \"\\u2A7E\\u0338\": \"&nges;\",\n            \"\\u2275\": \"&ngsim;\",\n            \"\\u224E\\u0338\": \"&nbump;\",\n            \"\\u224F\\u0338\": \"&nbumpe;\",\n            \"\\u22EA\": \"&ntriangleleft;\",\n            \"\\u29CF\\u0338\": \"&NotLeftTriangleBar;\",\n            \"\\u22EC\": \"&ntrianglelefteq;\",\n            \"\\u226E\": \"&nlt;\",\n            \"\\u2270\": \"&nleq;\",\n            \"\\u2278\": \"&ntlg;\",\n            \"\\u226A\\u0338\": \"&nLtv;\",\n            \"\\u2A7D\\u0338\": \"&nles;\",\n            \"\\u2274\": \"&nlsim;\",\n            \"\\u2AA2\\u0338\": \"&NotNestedGreaterGreater;\",\n            \"\\u2AA1\\u0338\": \"&NotNestedLessLess;\",\n            \"\\u2280\": \"&nprec;\",\n            \"\\u2AAF\\u0338\": \"&npreceq;\",\n            \"\\u22E0\": \"&nprcue;\",\n            \"\\u220C\": \"&notniva;\",\n            \"\\u22EB\": \"&ntriangleright;\",\n            \"\\u29D0\\u0338\": \"&NotRightTriangleBar;\",\n            \"\\u22ED\": \"&ntrianglerighteq;\",\n            \"\\u228F\\u0338\": \"&NotSquareSubset;\",\n            \"\\u22E2\": \"&nsqsube;\",\n            \"\\u2290\\u0338\": \"&NotSquareSuperset;\",\n            \"\\u22E3\": \"&nsqsupe;\",\n            \"\\u2282\\u20D2\": \"&vnsub;\",\n            \"\\u2288\": \"&nsubseteq;\",\n            \"\\u2281\": \"&nsucc;\",\n            \"\\u2AB0\\u0338\": \"&nsucceq;\",\n            \"\\u22E1\": \"&nsccue;\",\n            \"\\u227F\\u0338\": \"&NotSucceedsTilde;\",\n            \"\\u2283\\u20D2\": \"&vnsup;\",\n            \"\\u2289\": \"&nsupseteq;\",\n            \"\\u2241\": \"&nsim;\",\n            \"\\u2244\": \"&nsimeq;\",\n            \"\\u2247\": \"&ncong;\",\n            \"\\u2249\": \"&napprox;\",\n            \"\\u2224\": \"&nsmid;\",\n            \"\\uD835\\uDCA9\": \"&Nscr;\",\n            \"\\xd1\": \"&Ntilde;\",\n            \"\\u039D\": \"&Nu;\",\n            \"\\u0152\": \"&OElig;\",\n            \"\\xd3\": \"&Oacute;\",\n            \"\\xd4\": \"&Ocirc;\",\n            \"\\u041E\": \"&Ocy;\",\n            \"\\u0150\": \"&Odblac;\",\n            \"\\uD835\\uDD12\": \"&Ofr;\",\n            \"\\xd2\": \"&Ograve;\",\n            \"\\u014C\": \"&Omacr;\",\n            \"\\u03A9\": \"&ohm;\",\n            \"\\u039F\": \"&Omicron;\",\n            \"\\uD835\\uDD46\": \"&Oopf;\",\n            \"\\u201C\": \"&ldquo;\",\n            \"\\u2018\": \"&lsquo;\",\n            \"\\u2A54\": \"&Or;\",\n            \"\\uD835\\uDCAA\": \"&Oscr;\",\n            \"\\xd8\": \"&Oslash;\",\n            \"\\xd5\": \"&Otilde;\",\n            \"\\u2A37\": \"&Otimes;\",\n            \"\\xd6\": \"&Ouml;\",\n            \"\\u203E\": \"&oline;\",\n            \"\\u23DE\": \"&OverBrace;\",\n            \"\\u23B4\": \"&tbrk;\",\n            \"\\u23DC\": \"&OverParenthesis;\",\n            \"\\u2202\": \"&part;\",\n            \"\\u041F\": \"&Pcy;\",\n            \"\\uD835\\uDD13\": \"&Pfr;\",\n            \"\\u03A6\": \"&Phi;\",\n            \"\\u03A0\": \"&Pi;\",\n            \"\\xb1\": \"&pm;\",\n            \"\\u2119\": \"&primes;\",\n            \"\\u2ABB\": \"&Pr;\",\n            \"\\u227A\": \"&prec;\",\n            \"\\u2AAF\": \"&preceq;\",\n            \"\\u227C\": \"&preccurlyeq;\",\n            \"\\u227E\": \"&prsim;\",\n            \"\\u2033\": \"&Prime;\",\n            \"\\u220F\": \"&prod;\",\n            \"\\u221D\": \"&vprop;\",\n            \"\\uD835\\uDCAB\": \"&Pscr;\",\n            \"\\u03A8\": \"&Psi;\",\n            '\"': \"&quot;\",\n            \"\\uD835\\uDD14\": \"&Qfr;\",\n            \"\\u211A\": \"&rationals;\",\n            \"\\uD835\\uDCAC\": \"&Qscr;\",\n            \"\\u2910\": \"&drbkarow;\",\n            \"\\xae\": \"&reg;\",\n            \"\\u0154\": \"&Racute;\",\n            \"\\u27EB\": \"&Rang;\",\n            \"\\u21A0\": \"&twoheadrightarrow;\",\n            \"\\u2916\": \"&Rarrtl;\",\n            \"\\u0158\": \"&Rcaron;\",\n            \"\\u0156\": \"&Rcedil;\",\n            \"\\u0420\": \"&Rcy;\",\n            \"\\u211C\": \"&realpart;\",\n            \"\\u220B\": \"&niv;\",\n            \"\\u21CB\": \"&lrhar;\",\n            \"\\u296F\": \"&duhar;\",\n            \"\\u03A1\": \"&Rho;\",\n            \"\\u27E9\": \"&rangle;\",\n            \"\\u2192\": \"&srarr;\",\n            \"\\u21E5\": \"&rarrb;\",\n            \"\\u21C4\": \"&rlarr;\",\n            \"\\u2309\": \"&rceil;\",\n            \"\\u27E7\": \"&robrk;\",\n            \"\\u295D\": \"&RightDownTeeVector;\",\n            \"\\u21C2\": \"&downharpoonright;\",\n            \"\\u2955\": \"&RightDownVectorBar;\",\n            \"\\u230B\": \"&rfloor;\",\n            \"\\u22A2\": \"&vdash;\",\n            \"\\u21A6\": \"&mapsto;\",\n            \"\\u295B\": \"&RightTeeVector;\",\n            \"\\u22B3\": \"&vrtri;\",\n            \"\\u29D0\": \"&RightTriangleBar;\",\n            \"\\u22B5\": \"&trianglerighteq;\",\n            \"\\u294F\": \"&RightUpDownVector;\",\n            \"\\u295C\": \"&RightUpTeeVector;\",\n            \"\\u21BE\": \"&upharpoonright;\",\n            \"\\u2954\": \"&RightUpVectorBar;\",\n            \"\\u21C0\": \"&rightharpoonup;\",\n            \"\\u2953\": \"&RightVectorBar;\",\n            \"\\u211D\": \"&reals;\",\n            \"\\u2970\": \"&RoundImplies;\",\n            \"\\u21DB\": \"&rAarr;\",\n            \"\\u211B\": \"&realine;\",\n            \"\\u21B1\": \"&rsh;\",\n            \"\\u29F4\": \"&RuleDelayed;\",\n            \"\\u0429\": \"&SHCHcy;\",\n            \"\\u0428\": \"&SHcy;\",\n            \"\\u042C\": \"&SOFTcy;\",\n            \"\\u015A\": \"&Sacute;\",\n            \"\\u2ABC\": \"&Sc;\",\n            \"\\u0160\": \"&Scaron;\",\n            \"\\u015E\": \"&Scedil;\",\n            \"\\u015C\": \"&Scirc;\",\n            \"\\u0421\": \"&Scy;\",\n            \"\\uD835\\uDD16\": \"&Sfr;\",\n            \"\\u2191\": \"&uparrow;\",\n            \"\\u03A3\": \"&Sigma;\",\n            \"\\u2218\": \"&compfn;\",\n            \"\\uD835\\uDD4A\": \"&Sopf;\",\n            \"\\u221A\": \"&radic;\",\n            \"\\u25A1\": \"&square;\",\n            \"\\u2293\": \"&sqcap;\",\n            \"\\u228F\": \"&sqsubset;\",\n            \"\\u2291\": \"&sqsubseteq;\",\n            \"\\u2290\": \"&sqsupset;\",\n            \"\\u2292\": \"&sqsupseteq;\",\n            \"\\u2294\": \"&sqcup;\",\n            \"\\uD835\\uDCAE\": \"&Sscr;\",\n            \"\\u22C6\": \"&sstarf;\",\n            \"\\u22D0\": \"&Subset;\",\n            \"\\u2286\": \"&subseteq;\",\n            \"\\u227B\": \"&succ;\",\n            \"\\u2AB0\": \"&succeq;\",\n            \"\\u227D\": \"&succcurlyeq;\",\n            \"\\u227F\": \"&succsim;\",\n            \"\\u2211\": \"&sum;\",\n            \"\\u22D1\": \"&Supset;\",\n            \"\\u2283\": \"&supset;\",\n            \"\\u2287\": \"&supseteq;\",\n            \"\\xde\": \"&THORN;\",\n            \"\\u2122\": \"&trade;\",\n            \"\\u040B\": \"&TSHcy;\",\n            \"\\u0426\": \"&TScy;\",\n            \"\t\": \"&Tab;\",\n            \"\\u03A4\": \"&Tau;\",\n            \"\\u0164\": \"&Tcaron;\",\n            \"\\u0162\": \"&Tcedil;\",\n            \"\\u0422\": \"&Tcy;\",\n            \"\\uD835\\uDD17\": \"&Tfr;\",\n            \"\\u2234\": \"&therefore;\",\n            \"\\u0398\": \"&Theta;\",\n            \"\\u205F\\u200A\": \"&ThickSpace;\",\n            \"\\u2009\": \"&thinsp;\",\n            \"\\u223C\": \"&thksim;\",\n            \"\\u2243\": \"&simeq;\",\n            \"\\u2245\": \"&cong;\",\n            \"\\u2248\": \"&thkap;\",\n            \"\\uD835\\uDD4B\": \"&Topf;\",\n            \"\\u20DB\": \"&tdot;\",\n            \"\\uD835\\uDCAF\": \"&Tscr;\",\n            \"\\u0166\": \"&Tstrok;\",\n            \"\\xda\": \"&Uacute;\",\n            \"\\u219F\": \"&Uarr;\",\n            \"\\u2949\": \"&Uarrocir;\",\n            \"\\u040E\": \"&Ubrcy;\",\n            \"\\u016C\": \"&Ubreve;\",\n            \"\\xdb\": \"&Ucirc;\",\n            \"\\u0423\": \"&Ucy;\",\n            \"\\u0170\": \"&Udblac;\",\n            \"\\uD835\\uDD18\": \"&Ufr;\",\n            \"\\xd9\": \"&Ugrave;\",\n            \"\\u016A\": \"&Umacr;\",\n            _: \"&lowbar;\",\n            \"\\u23DF\": \"&UnderBrace;\",\n            \"\\u23B5\": \"&bbrk;\",\n            \"\\u23DD\": \"&UnderParenthesis;\",\n            \"\\u22C3\": \"&xcup;\",\n            \"\\u228E\": \"&uplus;\",\n            \"\\u0172\": \"&Uogon;\",\n            \"\\uD835\\uDD4C\": \"&Uopf;\",\n            \"\\u2912\": \"&UpArrowBar;\",\n            \"\\u21C5\": \"&udarr;\",\n            \"\\u2195\": \"&varr;\",\n            \"\\u296E\": \"&udhar;\",\n            \"\\u22A5\": \"&perp;\",\n            \"\\u21A5\": \"&mapstoup;\",\n            \"\\u2196\": \"&nwarrow;\",\n            \"\\u2197\": \"&nearrow;\",\n            \"\\u03D2\": \"&upsih;\",\n            \"\\u03A5\": \"&Upsilon;\",\n            \"\\u016E\": \"&Uring;\",\n            \"\\uD835\\uDCB0\": \"&Uscr;\",\n            \"\\u0168\": \"&Utilde;\",\n            \"\\xdc\": \"&Uuml;\",\n            \"\\u22AB\": \"&VDash;\",\n            \"\\u2AEB\": \"&Vbar;\",\n            \"\\u0412\": \"&Vcy;\",\n            \"\\u22A9\": \"&Vdash;\",\n            \"\\u2AE6\": \"&Vdashl;\",\n            \"\\u22C1\": \"&xvee;\",\n            \"\\u2016\": \"&Vert;\",\n            \"\\u2223\": \"&smid;\",\n            \"|\": \"&vert;\",\n            \"\\u2758\": \"&VerticalSeparator;\",\n            \"\\u2240\": \"&wreath;\",\n            \"\\u200A\": \"&hairsp;\",\n            \"\\uD835\\uDD19\": \"&Vfr;\",\n            \"\\uD835\\uDD4D\": \"&Vopf;\",\n            \"\\uD835\\uDCB1\": \"&Vscr;\",\n            \"\\u22AA\": \"&Vvdash;\",\n            \"\\u0174\": \"&Wcirc;\",\n            \"\\u22C0\": \"&xwedge;\",\n            \"\\uD835\\uDD1A\": \"&Wfr;\",\n            \"\\uD835\\uDD4E\": \"&Wopf;\",\n            \"\\uD835\\uDCB2\": \"&Wscr;\",\n            \"\\uD835\\uDD1B\": \"&Xfr;\",\n            \"\\u039E\": \"&Xi;\",\n            \"\\uD835\\uDD4F\": \"&Xopf;\",\n            \"\\uD835\\uDCB3\": \"&Xscr;\",\n            \"\\u042F\": \"&YAcy;\",\n            \"\\u0407\": \"&YIcy;\",\n            \"\\u042E\": \"&YUcy;\",\n            \"\\xdd\": \"&Yacute;\",\n            \"\\u0176\": \"&Ycirc;\",\n            \"\\u042B\": \"&Ycy;\",\n            \"\\uD835\\uDD1C\": \"&Yfr;\",\n            \"\\uD835\\uDD50\": \"&Yopf;\",\n            \"\\uD835\\uDCB4\": \"&Yscr;\",\n            \"\\u0178\": \"&Yuml;\",\n            \"\\u0416\": \"&ZHcy;\",\n            \"\\u0179\": \"&Zacute;\",\n            \"\\u017D\": \"&Zcaron;\",\n            \"\\u0417\": \"&Zcy;\",\n            \"\\u017B\": \"&Zdot;\",\n            \"\\u0396\": \"&Zeta;\",\n            \"\\u2128\": \"&zeetrf;\",\n            \"\\u2124\": \"&integers;\",\n            \"\\uD835\\uDCB5\": \"&Zscr;\",\n            \"\\xe1\": \"&aacute;\",\n            \"\\u0103\": \"&abreve;\",\n            \"\\u223E\": \"&mstpos;\",\n            \"\\u223E\\u0333\": \"&acE;\",\n            \"\\u223F\": \"&acd;\",\n            \"\\xe2\": \"&acirc;\",\n            \"\\u0430\": \"&acy;\",\n            \"\\xe6\": \"&aelig;\",\n            \"\\uD835\\uDD1E\": \"&afr;\",\n            \"\\xe0\": \"&agrave;\",\n            \"\\u2135\": \"&aleph;\",\n            \"\\u03B1\": \"&alpha;\",\n            \"\\u0101\": \"&amacr;\",\n            \"\\u2A3F\": \"&amalg;\",\n            \"\\u2227\": \"&wedge;\",\n            \"\\u2A55\": \"&andand;\",\n            \"\\u2A5C\": \"&andd;\",\n            \"\\u2A58\": \"&andslope;\",\n            \"\\u2A5A\": \"&andv;\",\n            \"\\u2220\": \"&angle;\",\n            \"\\u29A4\": \"&ange;\",\n            \"\\u2221\": \"&measuredangle;\",\n            \"\\u29A8\": \"&angmsdaa;\",\n            \"\\u29A9\": \"&angmsdab;\",\n            \"\\u29AA\": \"&angmsdac;\",\n            \"\\u29AB\": \"&angmsdad;\",\n            \"\\u29AC\": \"&angmsdae;\",\n            \"\\u29AD\": \"&angmsdaf;\",\n            \"\\u29AE\": \"&angmsdag;\",\n            \"\\u29AF\": \"&angmsdah;\",\n            \"\\u221F\": \"&angrt;\",\n            \"\\u22BE\": \"&angrtvb;\",\n            \"\\u299D\": \"&angrtvbd;\",\n            \"\\u2222\": \"&angsph;\",\n            \"\\u237C\": \"&angzarr;\",\n            \"\\u0105\": \"&aogon;\",\n            \"\\uD835\\uDD52\": \"&aopf;\",\n            \"\\u2A70\": \"&apE;\",\n            \"\\u2A6F\": \"&apacir;\",\n            \"\\u224A\": \"&approxeq;\",\n            \"\\u224B\": \"&apid;\",\n            \"'\": \"&apos;\",\n            \"\\xe5\": \"&aring;\",\n            \"\\uD835\\uDCB6\": \"&ascr;\",\n            \"*\": \"&midast;\",\n            \"\\xe3\": \"&atilde;\",\n            \"\\xe4\": \"&auml;\",\n            \"\\u2A11\": \"&awint;\",\n            \"\\u2AED\": \"&bNot;\",\n            \"\\u224C\": \"&bcong;\",\n            \"\\u03F6\": \"&bepsi;\",\n            \"\\u2035\": \"&bprime;\",\n            \"\\u223D\": \"&bsim;\",\n            \"\\u22CD\": \"&bsime;\",\n            \"\\u22BD\": \"&barvee;\",\n            \"\\u2305\": \"&barwedge;\",\n            \"\\u23B6\": \"&bbrktbrk;\",\n            \"\\u0431\": \"&bcy;\",\n            \"\\u201E\": \"&ldquor;\",\n            \"\\u29B0\": \"&bemptyv;\",\n            \"\\u03B2\": \"&beta;\",\n            \"\\u2136\": \"&beth;\",\n            \"\\u226C\": \"&twixt;\",\n            \"\\uD835\\uDD1F\": \"&bfr;\",\n            \"\\u25EF\": \"&xcirc;\",\n            \"\\u2A00\": \"&xodot;\",\n            \"\\u2A01\": \"&xoplus;\",\n            \"\\u2A02\": \"&xotime;\",\n            \"\\u2A06\": \"&xsqcup;\",\n            \"\\u2605\": \"&starf;\",\n            \"\\u25BD\": \"&xdtri;\",\n            \"\\u25B3\": \"&xutri;\",\n            \"\\u2A04\": \"&xuplus;\",\n            \"\\u290D\": \"&rbarr;\",\n            \"\\u29EB\": \"&lozf;\",\n            \"\\u25B4\": \"&utrif;\",\n            \"\\u25BE\": \"&dtrif;\",\n            \"\\u25C2\": \"&ltrif;\",\n            \"\\u25B8\": \"&rtrif;\",\n            \"\\u2423\": \"&blank;\",\n            \"\\u2592\": \"&blk12;\",\n            \"\\u2591\": \"&blk14;\",\n            \"\\u2593\": \"&blk34;\",\n            \"\\u2588\": \"&block;\",\n            \"=\\u20E5\": \"&bne;\",\n            \"\\u2261\\u20E5\": \"&bnequiv;\",\n            \"\\u2310\": \"&bnot;\",\n            \"\\uD835\\uDD53\": \"&bopf;\",\n            \"\\u22C8\": \"&bowtie;\",\n            \"\\u2557\": \"&boxDL;\",\n            \"\\u2554\": \"&boxDR;\",\n            \"\\u2556\": \"&boxDl;\",\n            \"\\u2553\": \"&boxDr;\",\n            \"\\u2550\": \"&boxH;\",\n            \"\\u2566\": \"&boxHD;\",\n            \"\\u2569\": \"&boxHU;\",\n            \"\\u2564\": \"&boxHd;\",\n            \"\\u2567\": \"&boxHu;\",\n            \"\\u255D\": \"&boxUL;\",\n            \"\\u255A\": \"&boxUR;\",\n            \"\\u255C\": \"&boxUl;\",\n            \"\\u2559\": \"&boxUr;\",\n            \"\\u2551\": \"&boxV;\",\n            \"\\u256C\": \"&boxVH;\",\n            \"\\u2563\": \"&boxVL;\",\n            \"\\u2560\": \"&boxVR;\",\n            \"\\u256B\": \"&boxVh;\",\n            \"\\u2562\": \"&boxVl;\",\n            \"\\u255F\": \"&boxVr;\",\n            \"\\u29C9\": \"&boxbox;\",\n            \"\\u2555\": \"&boxdL;\",\n            \"\\u2552\": \"&boxdR;\",\n            \"\\u2510\": \"&boxdl;\",\n            \"\\u250C\": \"&boxdr;\",\n            \"\\u2565\": \"&boxhD;\",\n            \"\\u2568\": \"&boxhU;\",\n            \"\\u252C\": \"&boxhd;\",\n            \"\\u2534\": \"&boxhu;\",\n            \"\\u229F\": \"&minusb;\",\n            \"\\u229E\": \"&plusb;\",\n            \"\\u22A0\": \"&timesb;\",\n            \"\\u255B\": \"&boxuL;\",\n            \"\\u2558\": \"&boxuR;\",\n            \"\\u2518\": \"&boxul;\",\n            \"\\u2514\": \"&boxur;\",\n            \"\\u2502\": \"&boxv;\",\n            \"\\u256A\": \"&boxvH;\",\n            \"\\u2561\": \"&boxvL;\",\n            \"\\u255E\": \"&boxvR;\",\n            \"\\u253C\": \"&boxvh;\",\n            \"\\u2524\": \"&boxvl;\",\n            \"\\u251C\": \"&boxvr;\",\n            \"\\xa6\": \"&brvbar;\",\n            \"\\uD835\\uDCB7\": \"&bscr;\",\n            \"\\u204F\": \"&bsemi;\",\n            \"\\\\\": \"&bsol;\",\n            \"\\u29C5\": \"&bsolb;\",\n            \"\\u27C8\": \"&bsolhsub;\",\n            \"\\u2022\": \"&bullet;\",\n            \"\\u2AAE\": \"&bumpE;\",\n            \"\\u0107\": \"&cacute;\",\n            \"\\u2229\": \"&cap;\",\n            \"\\u2A44\": \"&capand;\",\n            \"\\u2A49\": \"&capbrcup;\",\n            \"\\u2A4B\": \"&capcap;\",\n            \"\\u2A47\": \"&capcup;\",\n            \"\\u2A40\": \"&capdot;\",\n            \"\\u2229\\uFE00\": \"&caps;\",\n            \"\\u2041\": \"&caret;\",\n            \"\\u2A4D\": \"&ccaps;\",\n            \"\\u010D\": \"&ccaron;\",\n            \"\\xe7\": \"&ccedil;\",\n            \"\\u0109\": \"&ccirc;\",\n            \"\\u2A4C\": \"&ccups;\",\n            \"\\u2A50\": \"&ccupssm;\",\n            \"\\u010B\": \"&cdot;\",\n            \"\\u29B2\": \"&cemptyv;\",\n            \"\\xa2\": \"&cent;\",\n            \"\\uD835\\uDD20\": \"&cfr;\",\n            \"\\u0447\": \"&chcy;\",\n            \"\\u2713\": \"&checkmark;\",\n            \"\\u03C7\": \"&chi;\",\n            \"\\u25CB\": \"&cir;\",\n            \"\\u29C3\": \"&cirE;\",\n            \"\\u02C6\": \"&circ;\",\n            \"\\u2257\": \"&cire;\",\n            \"\\u21BA\": \"&olarr;\",\n            \"\\u21BB\": \"&orarr;\",\n            \"\\u24C8\": \"&oS;\",\n            \"\\u229B\": \"&oast;\",\n            \"\\u229A\": \"&ocir;\",\n            \"\\u229D\": \"&odash;\",\n            \"\\u2A10\": \"&cirfnint;\",\n            \"\\u2AEF\": \"&cirmid;\",\n            \"\\u29C2\": \"&cirscir;\",\n            \"\\u2663\": \"&clubsuit;\",\n            \":\": \"&colon;\",\n            \",\": \"&comma;\",\n            \"@\": \"&commat;\",\n            \"\\u2201\": \"&complement;\",\n            \"\\u2A6D\": \"&congdot;\",\n            \"\\uD835\\uDD54\": \"&copf;\",\n            \"\\u2117\": \"&copysr;\",\n            \"\\u21B5\": \"&crarr;\",\n            \"\\u2717\": \"&cross;\",\n            \"\\uD835\\uDCB8\": \"&cscr;\",\n            \"\\u2ACF\": \"&csub;\",\n            \"\\u2AD1\": \"&csube;\",\n            \"\\u2AD0\": \"&csup;\",\n            \"\\u2AD2\": \"&csupe;\",\n            \"\\u22EF\": \"&ctdot;\",\n            \"\\u2938\": \"&cudarrl;\",\n            \"\\u2935\": \"&cudarrr;\",\n            \"\\u22DE\": \"&curlyeqprec;\",\n            \"\\u22DF\": \"&curlyeqsucc;\",\n            \"\\u21B6\": \"&curvearrowleft;\",\n            \"\\u293D\": \"&cularrp;\",\n            \"\\u222A\": \"&cup;\",\n            \"\\u2A48\": \"&cupbrcap;\",\n            \"\\u2A46\": \"&cupcap;\",\n            \"\\u2A4A\": \"&cupcup;\",\n            \"\\u228D\": \"&cupdot;\",\n            \"\\u2A45\": \"&cupor;\",\n            \"\\u222A\\uFE00\": \"&cups;\",\n            \"\\u21B7\": \"&curvearrowright;\",\n            \"\\u293C\": \"&curarrm;\",\n            \"\\u22CE\": \"&cuvee;\",\n            \"\\u22CF\": \"&cuwed;\",\n            \"\\xa4\": \"&curren;\",\n            \"\\u2231\": \"&cwint;\",\n            \"\\u232D\": \"&cylcty;\",\n            \"\\u2965\": \"&dHar;\",\n            \"\\u2020\": \"&dagger;\",\n            \"\\u2138\": \"&daleth;\",\n            \"\\u2010\": \"&hyphen;\",\n            \"\\u290F\": \"&rBarr;\",\n            \"\\u010F\": \"&dcaron;\",\n            \"\\u0434\": \"&dcy;\",\n            \"\\u21CA\": \"&downdownarrows;\",\n            \"\\u2A77\": \"&eDDot;\",\n            \"\\xb0\": \"&deg;\",\n            \"\\u03B4\": \"&delta;\",\n            \"\\u29B1\": \"&demptyv;\",\n            \"\\u297F\": \"&dfisht;\",\n            \"\\uD835\\uDD21\": \"&dfr;\",\n            \"\\u2666\": \"&diams;\",\n            \"\\u03DD\": \"&gammad;\",\n            \"\\u22F2\": \"&disin;\",\n            \"\\xf7\": \"&divide;\",\n            \"\\u22C7\": \"&divonx;\",\n            \"\\u0452\": \"&djcy;\",\n            \"\\u231E\": \"&llcorner;\",\n            \"\\u230D\": \"&dlcrop;\",\n            $: \"&dollar;\",\n            \"\\uD835\\uDD55\": \"&dopf;\",\n            \"\\u2251\": \"&eDot;\",\n            \"\\u2238\": \"&minusd;\",\n            \"\\u2214\": \"&plusdo;\",\n            \"\\u22A1\": \"&sdotb;\",\n            \"\\u231F\": \"&lrcorner;\",\n            \"\\u230C\": \"&drcrop;\",\n            \"\\uD835\\uDCB9\": \"&dscr;\",\n            \"\\u0455\": \"&dscy;\",\n            \"\\u29F6\": \"&dsol;\",\n            \"\\u0111\": \"&dstrok;\",\n            \"\\u22F1\": \"&dtdot;\",\n            \"\\u25BF\": \"&triangledown;\",\n            \"\\u29A6\": \"&dwangle;\",\n            \"\\u045F\": \"&dzcy;\",\n            \"\\u27FF\": \"&dzigrarr;\",\n            \"\\xe9\": \"&eacute;\",\n            \"\\u2A6E\": \"&easter;\",\n            \"\\u011B\": \"&ecaron;\",\n            \"\\u2256\": \"&eqcirc;\",\n            \"\\xea\": \"&ecirc;\",\n            \"\\u2255\": \"&eqcolon;\",\n            \"\\u044D\": \"&ecy;\",\n            \"\\u0117\": \"&edot;\",\n            \"\\u2252\": \"&fallingdotseq;\",\n            \"\\uD835\\uDD22\": \"&efr;\",\n            \"\\u2A9A\": \"&eg;\",\n            \"\\xe8\": \"&egrave;\",\n            \"\\u2A96\": \"&eqslantgtr;\",\n            \"\\u2A98\": \"&egsdot;\",\n            \"\\u2A99\": \"&el;\",\n            \"\\u23E7\": \"&elinters;\",\n            \"\\u2113\": \"&ell;\",\n            \"\\u2A95\": \"&eqslantless;\",\n            \"\\u2A97\": \"&elsdot;\",\n            \"\\u0113\": \"&emacr;\",\n            \"\\u2205\": \"&varnothing;\",\n            \"\\u2004\": \"&emsp13;\",\n            \"\\u2005\": \"&emsp14;\",\n            \"\\u2003\": \"&emsp;\",\n            \"\\u014B\": \"&eng;\",\n            \"\\u2002\": \"&ensp;\",\n            \"\\u0119\": \"&eogon;\",\n            \"\\uD835\\uDD56\": \"&eopf;\",\n            \"\\u22D5\": \"&epar;\",\n            \"\\u29E3\": \"&eparsl;\",\n            \"\\u2A71\": \"&eplus;\",\n            \"\\u03B5\": \"&epsilon;\",\n            \"\\u03F5\": \"&varepsilon;\",\n            \"=\": \"&equals;\",\n            \"\\u225F\": \"&questeq;\",\n            \"\\u2A78\": \"&equivDD;\",\n            \"\\u29E5\": \"&eqvparsl;\",\n            \"\\u2253\": \"&risingdotseq;\",\n            \"\\u2971\": \"&erarr;\",\n            \"\\u212F\": \"&escr;\",\n            \"\\u03B7\": \"&eta;\",\n            \"\\xf0\": \"&eth;\",\n            \"\\xeb\": \"&euml;\",\n            \"\\u20AC\": \"&euro;\",\n            \"!\": \"&excl;\",\n            \"\\u0444\": \"&fcy;\",\n            \"\\u2640\": \"&female;\",\n            \"\\uFB03\": \"&ffilig;\",\n            \"\\uFB00\": \"&fflig;\",\n            \"\\uFB04\": \"&ffllig;\",\n            \"\\uD835\\uDD23\": \"&ffr;\",\n            \"\\uFB01\": \"&filig;\",\n            fj: \"&fjlig;\",\n            \"\\u266D\": \"&flat;\",\n            \"\\uFB02\": \"&fllig;\",\n            \"\\u25B1\": \"&fltns;\",\n            \"\\u0192\": \"&fnof;\",\n            \"\\uD835\\uDD57\": \"&fopf;\",\n            \"\\u22D4\": \"&pitchfork;\",\n            \"\\u2AD9\": \"&forkv;\",\n            \"\\u2A0D\": \"&fpartint;\",\n            \"\\xbd\": \"&half;\",\n            \"\\u2153\": \"&frac13;\",\n            \"\\xbc\": \"&frac14;\",\n            \"\\u2155\": \"&frac15;\",\n            \"\\u2159\": \"&frac16;\",\n            \"\\u215B\": \"&frac18;\",\n            \"\\u2154\": \"&frac23;\",\n            \"\\u2156\": \"&frac25;\",\n            \"\\xbe\": \"&frac34;\",\n            \"\\u2157\": \"&frac35;\",\n            \"\\u215C\": \"&frac38;\",\n            \"\\u2158\": \"&frac45;\",\n            \"\\u215A\": \"&frac56;\",\n            \"\\u215D\": \"&frac58;\",\n            \"\\u215E\": \"&frac78;\",\n            \"\\u2044\": \"&frasl;\",\n            \"\\u2322\": \"&sfrown;\",\n            \"\\uD835\\uDCBB\": \"&fscr;\",\n            \"\\u2A8C\": \"&gtreqqless;\",\n            \"\\u01F5\": \"&gacute;\",\n            \"\\u03B3\": \"&gamma;\",\n            \"\\u2A86\": \"&gtrapprox;\",\n            \"\\u011F\": \"&gbreve;\",\n            \"\\u011D\": \"&gcirc;\",\n            \"\\u0433\": \"&gcy;\",\n            \"\\u0121\": \"&gdot;\",\n            \"\\u2AA9\": \"&gescc;\",\n            \"\\u2A80\": \"&gesdot;\",\n            \"\\u2A82\": \"&gesdoto;\",\n            \"\\u2A84\": \"&gesdotol;\",\n            \"\\u22DB\\uFE00\": \"&gesl;\",\n            \"\\u2A94\": \"&gesles;\",\n            \"\\uD835\\uDD24\": \"&gfr;\",\n            \"\\u2137\": \"&gimel;\",\n            \"\\u0453\": \"&gjcy;\",\n            \"\\u2A92\": \"&glE;\",\n            \"\\u2AA5\": \"&gla;\",\n            \"\\u2AA4\": \"&glj;\",\n            \"\\u2269\": \"&gneqq;\",\n            \"\\u2A8A\": \"&gnapprox;\",\n            \"\\u2A88\": \"&gneq;\",\n            \"\\u22E7\": \"&gnsim;\",\n            \"\\uD835\\uDD58\": \"&gopf;\",\n            \"\\u210A\": \"&gscr;\",\n            \"\\u2A8E\": \"&gsime;\",\n            \"\\u2A90\": \"&gsiml;\",\n            \"\\u2AA7\": \"&gtcc;\",\n            \"\\u2A7A\": \"&gtcir;\",\n            \"\\u22D7\": \"&gtrdot;\",\n            \"\\u2995\": \"&gtlPar;\",\n            \"\\u2A7C\": \"&gtquest;\",\n            \"\\u2978\": \"&gtrarr;\",\n            \"\\u2269\\uFE00\": \"&gvnE;\",\n            \"\\u044A\": \"&hardcy;\",\n            \"\\u2948\": \"&harrcir;\",\n            \"\\u21AD\": \"&leftrightsquigarrow;\",\n            \"\\u210F\": \"&plankv;\",\n            \"\\u0125\": \"&hcirc;\",\n            \"\\u2665\": \"&heartsuit;\",\n            \"\\u2026\": \"&mldr;\",\n            \"\\u22B9\": \"&hercon;\",\n            \"\\uD835\\uDD25\": \"&hfr;\",\n            \"\\u2925\": \"&searhk;\",\n            \"\\u2926\": \"&swarhk;\",\n            \"\\u21FF\": \"&hoarr;\",\n            \"\\u223B\": \"&homtht;\",\n            \"\\u21A9\": \"&larrhk;\",\n            \"\\u21AA\": \"&rarrhk;\",\n            \"\\uD835\\uDD59\": \"&hopf;\",\n            \"\\u2015\": \"&horbar;\",\n            \"\\uD835\\uDCBD\": \"&hscr;\",\n            \"\\u0127\": \"&hstrok;\",\n            \"\\u2043\": \"&hybull;\",\n            \"\\xed\": \"&iacute;\",\n            \"\\xee\": \"&icirc;\",\n            \"\\u0438\": \"&icy;\",\n            \"\\u0435\": \"&iecy;\",\n            \"\\xa1\": \"&iexcl;\",\n            \"\\uD835\\uDD26\": \"&ifr;\",\n            \"\\xec\": \"&igrave;\",\n            \"\\u2A0C\": \"&qint;\",\n            \"\\u222D\": \"&tint;\",\n            \"\\u29DC\": \"&iinfin;\",\n            \"\\u2129\": \"&iiota;\",\n            \"\\u0133\": \"&ijlig;\",\n            \"\\u012B\": \"&imacr;\",\n            \"\\u0131\": \"&inodot;\",\n            \"\\u22B7\": \"&imof;\",\n            \"\\u01B5\": \"&imped;\",\n            \"\\u2105\": \"&incare;\",\n            \"\\u221E\": \"&infin;\",\n            \"\\u29DD\": \"&infintie;\",\n            \"\\u22BA\": \"&intercal;\",\n            \"\\u2A17\": \"&intlarhk;\",\n            \"\\u2A3C\": \"&iprod;\",\n            \"\\u0451\": \"&iocy;\",\n            \"\\u012F\": \"&iogon;\",\n            \"\\uD835\\uDD5A\": \"&iopf;\",\n            \"\\u03B9\": \"&iota;\",\n            \"\\xbf\": \"&iquest;\",\n            \"\\uD835\\uDCBE\": \"&iscr;\",\n            \"\\u22F9\": \"&isinE;\",\n            \"\\u22F5\": \"&isindot;\",\n            \"\\u22F4\": \"&isins;\",\n            \"\\u22F3\": \"&isinsv;\",\n            \"\\u0129\": \"&itilde;\",\n            \"\\u0456\": \"&iukcy;\",\n            \"\\xef\": \"&iuml;\",\n            \"\\u0135\": \"&jcirc;\",\n            \"\\u0439\": \"&jcy;\",\n            \"\\uD835\\uDD27\": \"&jfr;\",\n            \"\\u0237\": \"&jmath;\",\n            \"\\uD835\\uDD5B\": \"&jopf;\",\n            \"\\uD835\\uDCBF\": \"&jscr;\",\n            \"\\u0458\": \"&jsercy;\",\n            \"\\u0454\": \"&jukcy;\",\n            \"\\u03BA\": \"&kappa;\",\n            \"\\u03F0\": \"&varkappa;\",\n            \"\\u0137\": \"&kcedil;\",\n            \"\\u043A\": \"&kcy;\",\n            \"\\uD835\\uDD28\": \"&kfr;\",\n            \"\\u0138\": \"&kgreen;\",\n            \"\\u0445\": \"&khcy;\",\n            \"\\u045C\": \"&kjcy;\",\n            \"\\uD835\\uDD5C\": \"&kopf;\",\n            \"\\uD835\\uDCC0\": \"&kscr;\",\n            \"\\u291B\": \"&lAtail;\",\n            \"\\u290E\": \"&lBarr;\",\n            \"\\u2A8B\": \"&lesseqqgtr;\",\n            \"\\u2962\": \"&lHar;\",\n            \"\\u013A\": \"&lacute;\",\n            \"\\u29B4\": \"&laemptyv;\",\n            \"\\u03BB\": \"&lambda;\",\n            \"\\u2991\": \"&langd;\",\n            \"\\u2A85\": \"&lessapprox;\",\n            \"\\xab\": \"&laquo;\",\n            \"\\u291F\": \"&larrbfs;\",\n            \"\\u291D\": \"&larrfs;\",\n            \"\\u21AB\": \"&looparrowleft;\",\n            \"\\u2939\": \"&larrpl;\",\n            \"\\u2973\": \"&larrsim;\",\n            \"\\u21A2\": \"&leftarrowtail;\",\n            \"\\u2AAB\": \"&lat;\",\n            \"\\u2919\": \"&latail;\",\n            \"\\u2AAD\": \"&late;\",\n            \"\\u2AAD\\uFE00\": \"&lates;\",\n            \"\\u290C\": \"&lbarr;\",\n            \"\\u2772\": \"&lbbrk;\",\n            \"{\": \"&lcub;\",\n            \"[\": \"&lsqb;\",\n            \"\\u298B\": \"&lbrke;\",\n            \"\\u298F\": \"&lbrksld;\",\n            \"\\u298D\": \"&lbrkslu;\",\n            \"\\u013E\": \"&lcaron;\",\n            \"\\u013C\": \"&lcedil;\",\n            \"\\u043B\": \"&lcy;\",\n            \"\\u2936\": \"&ldca;\",\n            \"\\u2967\": \"&ldrdhar;\",\n            \"\\u294B\": \"&ldrushar;\",\n            \"\\u21B2\": \"&ldsh;\",\n            \"\\u2264\": \"&leq;\",\n            \"\\u21C7\": \"&llarr;\",\n            \"\\u22CB\": \"&lthree;\",\n            \"\\u2AA8\": \"&lescc;\",\n            \"\\u2A7F\": \"&lesdot;\",\n            \"\\u2A81\": \"&lesdoto;\",\n            \"\\u2A83\": \"&lesdotor;\",\n            \"\\u22DA\\uFE00\": \"&lesg;\",\n            \"\\u2A93\": \"&lesges;\",\n            \"\\u22D6\": \"&ltdot;\",\n            \"\\u297C\": \"&lfisht;\",\n            \"\\uD835\\uDD29\": \"&lfr;\",\n            \"\\u2A91\": \"&lgE;\",\n            \"\\u296A\": \"&lharul;\",\n            \"\\u2584\": \"&lhblk;\",\n            \"\\u0459\": \"&ljcy;\",\n            \"\\u296B\": \"&llhard;\",\n            \"\\u25FA\": \"&lltri;\",\n            \"\\u0140\": \"&lmidot;\",\n            \"\\u23B0\": \"&lmoustache;\",\n            \"\\u2268\": \"&lneqq;\",\n            \"\\u2A89\": \"&lnapprox;\",\n            \"\\u2A87\": \"&lneq;\",\n            \"\\u22E6\": \"&lnsim;\",\n            \"\\u27EC\": \"&loang;\",\n            \"\\u21FD\": \"&loarr;\",\n            \"\\u27FC\": \"&xmap;\",\n            \"\\u21AC\": \"&rarrlp;\",\n            \"\\u2985\": \"&lopar;\",\n            \"\\uD835\\uDD5D\": \"&lopf;\",\n            \"\\u2A2D\": \"&loplus;\",\n            \"\\u2A34\": \"&lotimes;\",\n            \"\\u2217\": \"&lowast;\",\n            \"\\u25CA\": \"&lozenge;\",\n            \"(\": \"&lpar;\",\n            \"\\u2993\": \"&lparlt;\",\n            \"\\u296D\": \"&lrhard;\",\n            \"\\u200E\": \"&lrm;\",\n            \"\\u22BF\": \"&lrtri;\",\n            \"\\u2039\": \"&lsaquo;\",\n            \"\\uD835\\uDCC1\": \"&lscr;\",\n            \"\\u2A8D\": \"&lsime;\",\n            \"\\u2A8F\": \"&lsimg;\",\n            \"\\u201A\": \"&sbquo;\",\n            \"\\u0142\": \"&lstrok;\",\n            \"\\u2AA6\": \"&ltcc;\",\n            \"\\u2A79\": \"&ltcir;\",\n            \"\\u22C9\": \"&ltimes;\",\n            \"\\u2976\": \"&ltlarr;\",\n            \"\\u2A7B\": \"&ltquest;\",\n            \"\\u2996\": \"&ltrPar;\",\n            \"\\u25C3\": \"&triangleleft;\",\n            \"\\u294A\": \"&lurdshar;\",\n            \"\\u2966\": \"&luruhar;\",\n            \"\\u2268\\uFE00\": \"&lvnE;\",\n            \"\\u223A\": \"&mDDot;\",\n            \"\\xaf\": \"&strns;\",\n            \"\\u2642\": \"&male;\",\n            \"\\u2720\": \"&maltese;\",\n            \"\\u25AE\": \"&marker;\",\n            \"\\u2A29\": \"&mcomma;\",\n            \"\\u043C\": \"&mcy;\",\n            \"\\u2014\": \"&mdash;\",\n            \"\\uD835\\uDD2A\": \"&mfr;\",\n            \"\\u2127\": \"&mho;\",\n            \"\\xb5\": \"&micro;\",\n            \"\\u2AF0\": \"&midcir;\",\n            \"\\u2212\": \"&minus;\",\n            \"\\u2A2A\": \"&minusdu;\",\n            \"\\u2ADB\": \"&mlcp;\",\n            \"\\u22A7\": \"&models;\",\n            \"\\uD835\\uDD5E\": \"&mopf;\",\n            \"\\uD835\\uDCC2\": \"&mscr;\",\n            \"\\u03BC\": \"&mu;\",\n            \"\\u22B8\": \"&mumap;\",\n            \"\\u22D9\\u0338\": \"&nGg;\",\n            \"\\u226B\\u20D2\": \"&nGt;\",\n            \"\\u21CD\": \"&nlArr;\",\n            \"\\u21CE\": \"&nhArr;\",\n            \"\\u22D8\\u0338\": \"&nLl;\",\n            \"\\u226A\\u20D2\": \"&nLt;\",\n            \"\\u21CF\": \"&nrArr;\",\n            \"\\u22AF\": \"&nVDash;\",\n            \"\\u22AE\": \"&nVdash;\",\n            \"\\u0144\": \"&nacute;\",\n            \"\\u2220\\u20D2\": \"&nang;\",\n            \"\\u2A70\\u0338\": \"&napE;\",\n            \"\\u224B\\u0338\": \"&napid;\",\n            \"\\u0149\": \"&napos;\",\n            \"\\u266E\": \"&natural;\",\n            \"\\u2A43\": \"&ncap;\",\n            \"\\u0148\": \"&ncaron;\",\n            \"\\u0146\": \"&ncedil;\",\n            \"\\u2A6D\\u0338\": \"&ncongdot;\",\n            \"\\u2A42\": \"&ncup;\",\n            \"\\u043D\": \"&ncy;\",\n            \"\\u2013\": \"&ndash;\",\n            \"\\u21D7\": \"&neArr;\",\n            \"\\u2924\": \"&nearhk;\",\n            \"\\u2250\\u0338\": \"&nedot;\",\n            \"\\u2928\": \"&toea;\",\n            \"\\uD835\\uDD2B\": \"&nfr;\",\n            \"\\u21AE\": \"&nleftrightarrow;\",\n            \"\\u2AF2\": \"&nhpar;\",\n            \"\\u22FC\": \"&nis;\",\n            \"\\u22FA\": \"&nisd;\",\n            \"\\u045A\": \"&njcy;\",\n            \"\\u2266\\u0338\": \"&nleqq;\",\n            \"\\u219A\": \"&nleftarrow;\",\n            \"\\u2025\": \"&nldr;\",\n            \"\\uD835\\uDD5F\": \"&nopf;\",\n            \"\\xac\": \"&not;\",\n            \"\\u22F9\\u0338\": \"&notinE;\",\n            \"\\u22F5\\u0338\": \"&notindot;\",\n            \"\\u22F7\": \"&notinvb;\",\n            \"\\u22F6\": \"&notinvc;\",\n            \"\\u22FE\": \"&notnivb;\",\n            \"\\u22FD\": \"&notnivc;\",\n            \"\\u2AFD\\u20E5\": \"&nparsl;\",\n            \"\\u2202\\u0338\": \"&npart;\",\n            \"\\u2A14\": \"&npolint;\",\n            \"\\u219B\": \"&nrightarrow;\",\n            \"\\u2933\\u0338\": \"&nrarrc;\",\n            \"\\u219D\\u0338\": \"&nrarrw;\",\n            \"\\uD835\\uDCC3\": \"&nscr;\",\n            \"\\u2284\": \"&nsub;\",\n            \"\\u2AC5\\u0338\": \"&nsubseteqq;\",\n            \"\\u2285\": \"&nsup;\",\n            \"\\u2AC6\\u0338\": \"&nsupseteqq;\",\n            \"\\xf1\": \"&ntilde;\",\n            \"\\u03BD\": \"&nu;\",\n            \"#\": \"&num;\",\n            \"\\u2116\": \"&numero;\",\n            \"\\u2007\": \"&numsp;\",\n            \"\\u22AD\": \"&nvDash;\",\n            \"\\u2904\": \"&nvHarr;\",\n            \"\\u224D\\u20D2\": \"&nvap;\",\n            \"\\u22AC\": \"&nvdash;\",\n            \"\\u2265\\u20D2\": \"&nvge;\",\n            \">\\u20D2\": \"&nvgt;\",\n            \"\\u29DE\": \"&nvinfin;\",\n            \"\\u2902\": \"&nvlArr;\",\n            \"\\u2264\\u20D2\": \"&nvle;\",\n            \"<\\u20D2\": \"&nvlt;\",\n            \"\\u22B4\\u20D2\": \"&nvltrie;\",\n            \"\\u2903\": \"&nvrArr;\",\n            \"\\u22B5\\u20D2\": \"&nvrtrie;\",\n            \"\\u223C\\u20D2\": \"&nvsim;\",\n            \"\\u21D6\": \"&nwArr;\",\n            \"\\u2923\": \"&nwarhk;\",\n            \"\\u2927\": \"&nwnear;\",\n            \"\\xf3\": \"&oacute;\",\n            \"\\xf4\": \"&ocirc;\",\n            \"\\u043E\": \"&ocy;\",\n            \"\\u0151\": \"&odblac;\",\n            \"\\u2A38\": \"&odiv;\",\n            \"\\u29BC\": \"&odsold;\",\n            \"\\u0153\": \"&oelig;\",\n            \"\\u29BF\": \"&ofcir;\",\n            \"\\uD835\\uDD2C\": \"&ofr;\",\n            \"\\u02DB\": \"&ogon;\",\n            \"\\xf2\": \"&ograve;\",\n            \"\\u29C1\": \"&ogt;\",\n            \"\\u29B5\": \"&ohbar;\",\n            \"\\u29BE\": \"&olcir;\",\n            \"\\u29BB\": \"&olcross;\",\n            \"\\u29C0\": \"&olt;\",\n            \"\\u014D\": \"&omacr;\",\n            \"\\u03C9\": \"&omega;\",\n            \"\\u03BF\": \"&omicron;\",\n            \"\\u29B6\": \"&omid;\",\n            \"\\uD835\\uDD60\": \"&oopf;\",\n            \"\\u29B7\": \"&opar;\",\n            \"\\u29B9\": \"&operp;\",\n            \"\\u2228\": \"&vee;\",\n            \"\\u2A5D\": \"&ord;\",\n            \"\\u2134\": \"&oscr;\",\n            \"\\xaa\": \"&ordf;\",\n            \"\\xba\": \"&ordm;\",\n            \"\\u22B6\": \"&origof;\",\n            \"\\u2A56\": \"&oror;\",\n            \"\\u2A57\": \"&orslope;\",\n            \"\\u2A5B\": \"&orv;\",\n            \"\\xf8\": \"&oslash;\",\n            \"\\u2298\": \"&osol;\",\n            \"\\xf5\": \"&otilde;\",\n            \"\\u2A36\": \"&otimesas;\",\n            \"\\xf6\": \"&ouml;\",\n            \"\\u233D\": \"&ovbar;\",\n            \"\\xb6\": \"&para;\",\n            \"\\u2AF3\": \"&parsim;\",\n            \"\\u2AFD\": \"&parsl;\",\n            \"\\u043F\": \"&pcy;\",\n            \"%\": \"&percnt;\",\n            \".\": \"&period;\",\n            \"\\u2030\": \"&permil;\",\n            \"\\u2031\": \"&pertenk;\",\n            \"\\uD835\\uDD2D\": \"&pfr;\",\n            \"\\u03C6\": \"&phi;\",\n            \"\\u03D5\": \"&varphi;\",\n            \"\\u260E\": \"&phone;\",\n            \"\\u03C0\": \"&pi;\",\n            \"\\u03D6\": \"&varpi;\",\n            \"\\u210E\": \"&planckh;\",\n            \"+\": \"&plus;\",\n            \"\\u2A23\": \"&plusacir;\",\n            \"\\u2A22\": \"&pluscir;\",\n            \"\\u2A25\": \"&plusdu;\",\n            \"\\u2A72\": \"&pluse;\",\n            \"\\u2A26\": \"&plussim;\",\n            \"\\u2A27\": \"&plustwo;\",\n            \"\\u2A15\": \"&pointint;\",\n            \"\\uD835\\uDD61\": \"&popf;\",\n            \"\\xa3\": \"&pound;\",\n            \"\\u2AB3\": \"&prE;\",\n            \"\\u2AB7\": \"&precapprox;\",\n            \"\\u2AB9\": \"&prnap;\",\n            \"\\u2AB5\": \"&prnE;\",\n            \"\\u22E8\": \"&prnsim;\",\n            \"\\u2032\": \"&prime;\",\n            \"\\u232E\": \"&profalar;\",\n            \"\\u2312\": \"&profline;\",\n            \"\\u2313\": \"&profsurf;\",\n            \"\\u22B0\": \"&prurel;\",\n            \"\\uD835\\uDCC5\": \"&pscr;\",\n            \"\\u03C8\": \"&psi;\",\n            \"\\u2008\": \"&puncsp;\",\n            \"\\uD835\\uDD2E\": \"&qfr;\",\n            \"\\uD835\\uDD62\": \"&qopf;\",\n            \"\\u2057\": \"&qprime;\",\n            \"\\uD835\\uDCC6\": \"&qscr;\",\n            \"\\u2A16\": \"&quatint;\",\n            \"?\": \"&quest;\",\n            \"\\u291C\": \"&rAtail;\",\n            \"\\u2964\": \"&rHar;\",\n            \"\\u223D\\u0331\": \"&race;\",\n            \"\\u0155\": \"&racute;\",\n            \"\\u29B3\": \"&raemptyv;\",\n            \"\\u2992\": \"&rangd;\",\n            \"\\u29A5\": \"&range;\",\n            \"\\xbb\": \"&raquo;\",\n            \"\\u2975\": \"&rarrap;\",\n            \"\\u2920\": \"&rarrbfs;\",\n            \"\\u2933\": \"&rarrc;\",\n            \"\\u291E\": \"&rarrfs;\",\n            \"\\u2945\": \"&rarrpl;\",\n            \"\\u2974\": \"&rarrsim;\",\n            \"\\u21A3\": \"&rightarrowtail;\",\n            \"\\u219D\": \"&rightsquigarrow;\",\n            \"\\u291A\": \"&ratail;\",\n            \"\\u2236\": \"&ratio;\",\n            \"\\u2773\": \"&rbbrk;\",\n            \"}\": \"&rcub;\",\n            \"]\": \"&rsqb;\",\n            \"\\u298C\": \"&rbrke;\",\n            \"\\u298E\": \"&rbrksld;\",\n            \"\\u2990\": \"&rbrkslu;\",\n            \"\\u0159\": \"&rcaron;\",\n            \"\\u0157\": \"&rcedil;\",\n            \"\\u0440\": \"&rcy;\",\n            \"\\u2937\": \"&rdca;\",\n            \"\\u2969\": \"&rdldhar;\",\n            \"\\u21B3\": \"&rdsh;\",\n            \"\\u25AD\": \"&rect;\",\n            \"\\u297D\": \"&rfisht;\",\n            \"\\uD835\\uDD2F\": \"&rfr;\",\n            \"\\u296C\": \"&rharul;\",\n            \"\\u03C1\": \"&rho;\",\n            \"\\u03F1\": \"&varrho;\",\n            \"\\u21C9\": \"&rrarr;\",\n            \"\\u22CC\": \"&rthree;\",\n            \"\\u02DA\": \"&ring;\",\n            \"\\u200F\": \"&rlm;\",\n            \"\\u23B1\": \"&rmoustache;\",\n            \"\\u2AEE\": \"&rnmid;\",\n            \"\\u27ED\": \"&roang;\",\n            \"\\u21FE\": \"&roarr;\",\n            \"\\u2986\": \"&ropar;\",\n            \"\\uD835\\uDD63\": \"&ropf;\",\n            \"\\u2A2E\": \"&roplus;\",\n            \"\\u2A35\": \"&rotimes;\",\n            \")\": \"&rpar;\",\n            \"\\u2994\": \"&rpargt;\",\n            \"\\u2A12\": \"&rppolint;\",\n            \"\\u203A\": \"&rsaquo;\",\n            \"\\uD835\\uDCC7\": \"&rscr;\",\n            \"\\u22CA\": \"&rtimes;\",\n            \"\\u25B9\": \"&triangleright;\",\n            \"\\u29CE\": \"&rtriltri;\",\n            \"\\u2968\": \"&ruluhar;\",\n            \"\\u211E\": \"&rx;\",\n            \"\\u015B\": \"&sacute;\",\n            \"\\u2AB4\": \"&scE;\",\n            \"\\u2AB8\": \"&succapprox;\",\n            \"\\u0161\": \"&scaron;\",\n            \"\\u015F\": \"&scedil;\",\n            \"\\u015D\": \"&scirc;\",\n            \"\\u2AB6\": \"&succneqq;\",\n            \"\\u2ABA\": \"&succnapprox;\",\n            \"\\u22E9\": \"&succnsim;\",\n            \"\\u2A13\": \"&scpolint;\",\n            \"\\u0441\": \"&scy;\",\n            \"\\u22C5\": \"&sdot;\",\n            \"\\u2A66\": \"&sdote;\",\n            \"\\u21D8\": \"&seArr;\",\n            \"\\xa7\": \"&sect;\",\n            \";\": \"&semi;\",\n            \"\\u2929\": \"&tosa;\",\n            \"\\u2736\": \"&sext;\",\n            \"\\uD835\\uDD30\": \"&sfr;\",\n            \"\\u266F\": \"&sharp;\",\n            \"\\u0449\": \"&shchcy;\",\n            \"\\u0448\": \"&shcy;\",\n            \"\\xad\": \"&shy;\",\n            \"\\u03C3\": \"&sigma;\",\n            \"\\u03C2\": \"&varsigma;\",\n            \"\\u2A6A\": \"&simdot;\",\n            \"\\u2A9E\": \"&simg;\",\n            \"\\u2AA0\": \"&simgE;\",\n            \"\\u2A9D\": \"&siml;\",\n            \"\\u2A9F\": \"&simlE;\",\n            \"\\u2246\": \"&simne;\",\n            \"\\u2A24\": \"&simplus;\",\n            \"\\u2972\": \"&simrarr;\",\n            \"\\u2A33\": \"&smashp;\",\n            \"\\u29E4\": \"&smeparsl;\",\n            \"\\u2323\": \"&ssmile;\",\n            \"\\u2AAA\": \"&smt;\",\n            \"\\u2AAC\": \"&smte;\",\n            \"\\u2AAC\\uFE00\": \"&smtes;\",\n            \"\\u044C\": \"&softcy;\",\n            \"/\": \"&sol;\",\n            \"\\u29C4\": \"&solb;\",\n            \"\\u233F\": \"&solbar;\",\n            \"\\uD835\\uDD64\": \"&sopf;\",\n            \"\\u2660\": \"&spadesuit;\",\n            \"\\u2293\\uFE00\": \"&sqcaps;\",\n            \"\\u2294\\uFE00\": \"&sqcups;\",\n            \"\\uD835\\uDCC8\": \"&sscr;\",\n            \"\\u2606\": \"&star;\",\n            \"\\u2282\": \"&subset;\",\n            \"\\u2AC5\": \"&subseteqq;\",\n            \"\\u2ABD\": \"&subdot;\",\n            \"\\u2AC3\": \"&subedot;\",\n            \"\\u2AC1\": \"&submult;\",\n            \"\\u2ACB\": \"&subsetneqq;\",\n            \"\\u228A\": \"&subsetneq;\",\n            \"\\u2ABF\": \"&subplus;\",\n            \"\\u2979\": \"&subrarr;\",\n            \"\\u2AC7\": \"&subsim;\",\n            \"\\u2AD5\": \"&subsub;\",\n            \"\\u2AD3\": \"&subsup;\",\n            \"\\u266A\": \"&sung;\",\n            \"\\xb9\": \"&sup1;\",\n            \"\\xb2\": \"&sup2;\",\n            \"\\xb3\": \"&sup3;\",\n            \"\\u2AC6\": \"&supseteqq;\",\n            \"\\u2ABE\": \"&supdot;\",\n            \"\\u2AD8\": \"&supdsub;\",\n            \"\\u2AC4\": \"&supedot;\",\n            \"\\u27C9\": \"&suphsol;\",\n            \"\\u2AD7\": \"&suphsub;\",\n            \"\\u297B\": \"&suplarr;\",\n            \"\\u2AC2\": \"&supmult;\",\n            \"\\u2ACC\": \"&supsetneqq;\",\n            \"\\u228B\": \"&supsetneq;\",\n            \"\\u2AC0\": \"&supplus;\",\n            \"\\u2AC8\": \"&supsim;\",\n            \"\\u2AD4\": \"&supsub;\",\n            \"\\u2AD6\": \"&supsup;\",\n            \"\\u21D9\": \"&swArr;\",\n            \"\\u292A\": \"&swnwar;\",\n            \"\\xdf\": \"&szlig;\",\n            \"\\u2316\": \"&target;\",\n            \"\\u03C4\": \"&tau;\",\n            \"\\u0165\": \"&tcaron;\",\n            \"\\u0163\": \"&tcedil;\",\n            \"\\u0442\": \"&tcy;\",\n            \"\\u2315\": \"&telrec;\",\n            \"\\uD835\\uDD31\": \"&tfr;\",\n            \"\\u03B8\": \"&theta;\",\n            \"\\u03D1\": \"&vartheta;\",\n            \"\\xfe\": \"&thorn;\",\n            \"\\xd7\": \"&times;\",\n            \"\\u2A31\": \"&timesbar;\",\n            \"\\u2A30\": \"&timesd;\",\n            \"\\u2336\": \"&topbot;\",\n            \"\\u2AF1\": \"&topcir;\",\n            \"\\uD835\\uDD65\": \"&topf;\",\n            \"\\u2ADA\": \"&topfork;\",\n            \"\\u2034\": \"&tprime;\",\n            \"\\u25B5\": \"&utri;\",\n            \"\\u225C\": \"&trie;\",\n            \"\\u25EC\": \"&tridot;\",\n            \"\\u2A3A\": \"&triminus;\",\n            \"\\u2A39\": \"&triplus;\",\n            \"\\u29CD\": \"&trisb;\",\n            \"\\u2A3B\": \"&tritime;\",\n            \"\\u23E2\": \"&trpezium;\",\n            \"\\uD835\\uDCC9\": \"&tscr;\",\n            \"\\u0446\": \"&tscy;\",\n            \"\\u045B\": \"&tshcy;\",\n            \"\\u0167\": \"&tstrok;\",\n            \"\\u2963\": \"&uHar;\",\n            \"\\xfa\": \"&uacute;\",\n            \"\\u045E\": \"&ubrcy;\",\n            \"\\u016D\": \"&ubreve;\",\n            \"\\xfb\": \"&ucirc;\",\n            \"\\u0443\": \"&ucy;\",\n            \"\\u0171\": \"&udblac;\",\n            \"\\u297E\": \"&ufisht;\",\n            \"\\uD835\\uDD32\": \"&ufr;\",\n            \"\\xf9\": \"&ugrave;\",\n            \"\\u2580\": \"&uhblk;\",\n            \"\\u231C\": \"&ulcorner;\",\n            \"\\u230F\": \"&ulcrop;\",\n            \"\\u25F8\": \"&ultri;\",\n            \"\\u016B\": \"&umacr;\",\n            \"\\u0173\": \"&uogon;\",\n            \"\\uD835\\uDD66\": \"&uopf;\",\n            \"\\u03C5\": \"&upsilon;\",\n            \"\\u21C8\": \"&uuarr;\",\n            \"\\u231D\": \"&urcorner;\",\n            \"\\u230E\": \"&urcrop;\",\n            \"\\u016F\": \"&uring;\",\n            \"\\u25F9\": \"&urtri;\",\n            \"\\uD835\\uDCCA\": \"&uscr;\",\n            \"\\u22F0\": \"&utdot;\",\n            \"\\u0169\": \"&utilde;\",\n            \"\\xfc\": \"&uuml;\",\n            \"\\u29A7\": \"&uwangle;\",\n            \"\\u2AE8\": \"&vBar;\",\n            \"\\u2AE9\": \"&vBarv;\",\n            \"\\u299C\": \"&vangrt;\",\n            \"\\u228A\\uFE00\": \"&vsubne;\",\n            \"\\u2ACB\\uFE00\": \"&vsubnE;\",\n            \"\\u228B\\uFE00\": \"&vsupne;\",\n            \"\\u2ACC\\uFE00\": \"&vsupnE;\",\n            \"\\u0432\": \"&vcy;\",\n            \"\\u22BB\": \"&veebar;\",\n            \"\\u225A\": \"&veeeq;\",\n            \"\\u22EE\": \"&vellip;\",\n            \"\\uD835\\uDD33\": \"&vfr;\",\n            \"\\uD835\\uDD67\": \"&vopf;\",\n            \"\\uD835\\uDCCB\": \"&vscr;\",\n            \"\\u299A\": \"&vzigzag;\",\n            \"\\u0175\": \"&wcirc;\",\n            \"\\u2A5F\": \"&wedbar;\",\n            \"\\u2259\": \"&wedgeq;\",\n            \"\\u2118\": \"&wp;\",\n            \"\\uD835\\uDD34\": \"&wfr;\",\n            \"\\uD835\\uDD68\": \"&wopf;\",\n            \"\\uD835\\uDCCC\": \"&wscr;\",\n            \"\\uD835\\uDD35\": \"&xfr;\",\n            \"\\u03BE\": \"&xi;\",\n            \"\\u22FB\": \"&xnis;\",\n            \"\\uD835\\uDD69\": \"&xopf;\",\n            \"\\uD835\\uDCCD\": \"&xscr;\",\n            \"\\xfd\": \"&yacute;\",\n            \"\\u044F\": \"&yacy;\",\n            \"\\u0177\": \"&ycirc;\",\n            \"\\u044B\": \"&ycy;\",\n            \"\\xa5\": \"&yen;\",\n            \"\\uD835\\uDD36\": \"&yfr;\",\n            \"\\u0457\": \"&yicy;\",\n            \"\\uD835\\uDD6A\": \"&yopf;\",\n            \"\\uD835\\uDCCE\": \"&yscr;\",\n            \"\\u044E\": \"&yucy;\",\n            \"\\xff\": \"&yuml;\",\n            \"\\u017A\": \"&zacute;\",\n            \"\\u017E\": \"&zcaron;\",\n            \"\\u0437\": \"&zcy;\",\n            \"\\u017C\": \"&zdot;\",\n            \"\\u03B6\": \"&zeta;\",\n            \"\\uD835\\uDD37\": \"&zfr;\",\n            \"\\u0436\": \"&zhcy;\",\n            \"\\u21DD\": \"&zigrarr;\",\n            \"\\uD835\\uDD6B\": \"&zopf;\",\n            \"\\uD835\\uDCCF\": \"&zscr;\",\n            \"\\u200D\": \"&zwj;\",\n            \"\\u200C\": \"&zwnj;\"\n        }\n    }\n};\n\n},{}],\"bBMFa\":[function(require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.numericUnicodeMap = {\n    0: 65533,\n    128: 8364,\n    130: 8218,\n    131: 402,\n    132: 8222,\n    133: 8230,\n    134: 8224,\n    135: 8225,\n    136: 710,\n    137: 8240,\n    138: 352,\n    139: 8249,\n    140: 338,\n    142: 381,\n    145: 8216,\n    146: 8217,\n    147: 8220,\n    148: 8221,\n    149: 8226,\n    150: 8211,\n    151: 8212,\n    152: 732,\n    153: 8482,\n    154: 353,\n    155: 8250,\n    156: 339,\n    158: 382,\n    159: 376\n};\n\n},{}],\"6NR3U\":[function(require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.fromCodePoint = String.fromCodePoint || function(astralCodePoint) {\n    return String.fromCharCode(Math.floor((astralCodePoint - 65536) / 1024) + 55296, (astralCodePoint - 65536) % 1024 + 56320);\n};\nexports.getCodePoint = String.prototype.codePointAt ? function(input, position) {\n    return input.codePointAt(position);\n} : function(input, position) {\n    return (input.charCodeAt(position) - 55296) * 1024 + input.charCodeAt(position + 1) - 56320 + 65536;\n};\nexports.highSurrogateFrom = 55296;\nexports.highSurrogateTo = 56319;\n\n},{}],\"3fyls\":[function(require,module,exports) {\nconst { onlyValidChildren, onlyValidParents, knownInvalidChildren, knownInvalidParents } = require(\"65e9c012e9f6df70\");\n/**\n * returns true if given parent-child nesting is valid HTML\n * @param {string} child\n * @param {string} parent\n * @returns {boolean}\n */ function isValidHTMLNesting(parent, child) {\n    // if we know the list of children that are the only valid children for the given parent\n    if (parent in onlyValidChildren) return onlyValidChildren[parent].has(child);\n    // if we know the list of parents that are the only valid parents for the given child\n    if (child in onlyValidParents) return onlyValidParents[child].has(parent);\n    // if we know the list of children that are NOT valid for the given parent\n    if (parent in knownInvalidChildren) {\n        // check if the child is in the list of invalid children\n        // if so, return false\n        if (knownInvalidChildren[parent].has(child)) return false;\n    }\n    // if we know the list of parents that are NOT valid for the given child\n    if (child in knownInvalidParents) {\n        // check if the parent is in the list of invalid parents\n        // if so, return false\n        if (knownInvalidParents[child].has(parent)) return false;\n    }\n    return true;\n}\nmodule.exports = {\n    isValidHTMLNesting\n};\n\n},{\"65e9c012e9f6df70\":\"6DRkN\"}],\"6DRkN\":[function(require,module,exports) {\nconst headings = new Set([\n    \"h1\",\n    \"h2\",\n    \"h3\",\n    \"h4\",\n    \"h5\",\n    \"h6\"\n]);\nconst emptySet = new Set([]);\n/**\n * maps element to set of elements that can be it's children, no other */ const onlyValidChildren = {\n    head: new Set([\n        \"base\",\n        \"basefront\",\n        \"bgsound\",\n        \"link\",\n        \"meta\",\n        \"title\",\n        \"noscript\",\n        \"noframes\",\n        \"style\",\n        \"script\",\n        \"template\"\n    ]),\n    optgroup: new Set([\n        \"option\"\n    ]),\n    select: new Set([\n        \"optgroup\",\n        \"option\"\n    ]),\n    math: new Set([\n        \"mrow\"\n    ]),\n    script: new Set(),\n    // table\n    table: new Set([\n        \"caption\",\n        \"colgroup\",\n        \"tbody\",\n        \"tfoot\",\n        \"thead\"\n    ]),\n    tr: new Set([\n        \"td\",\n        \"th\"\n    ]),\n    colgroup: new Set([\n        \"col\"\n    ]),\n    tbody: new Set([\n        \"tr\"\n    ]),\n    thead: new Set([\n        \"tr\"\n    ]),\n    tfoot: new Set([\n        \"tr\"\n    ]),\n    // these elements can not have any children elements\n    iframe: emptySet,\n    option: emptySet,\n    textarea: emptySet,\n    style: emptySet,\n    title: emptySet\n};\n/** maps elements to set of elements which can be it's parent, no other */ const onlyValidParents = {\n    // sections\n    html: emptySet,\n    body: new Set([\n        \"html\"\n    ]),\n    head: new Set([\n        \"html\"\n    ]),\n    // table\n    td: new Set([\n        \"tr\"\n    ]),\n    colgroup: new Set([\n        \"table\"\n    ]),\n    caption: new Set([\n        \"table\"\n    ]),\n    tbody: new Set([\n        \"table\"\n    ]),\n    tfoot: new Set([\n        \"table\"\n    ]),\n    col: new Set([\n        \"colgroup\"\n    ]),\n    th: new Set([\n        \"tr\"\n    ]),\n    thead: new Set([\n        \"table\"\n    ]),\n    tr: new Set([\n        \"tbody\",\n        \"thead\",\n        \"tfoot\"\n    ]),\n    // data list\n    dd: new Set([\n        \"dl\",\n        \"div\"\n    ]),\n    dt: new Set([\n        \"dl\",\n        \"div\"\n    ]),\n    // other\n    figcaption: new Set([\n        \"figure\"\n    ]),\n    // li: new Set([\"ul\", \"ol\"]),\n    summary: new Set([\n        \"details\"\n    ]),\n    area: new Set([\n        \"map\"\n    ])\n};\n/** maps element to set of elements that can not be it's children, others can */ const knownInvalidChildren = {\n    p: new Set([\n        \"address\",\n        \"article\",\n        \"aside\",\n        \"blockquote\",\n        \"center\",\n        \"details\",\n        \"dialog\",\n        \"dir\",\n        \"div\",\n        \"dl\",\n        \"fieldset\",\n        \"figure\",\n        \"footer\",\n        \"form\",\n        \"h1\",\n        \"h2\",\n        \"h3\",\n        \"h4\",\n        \"h5\",\n        \"h6\",\n        \"header\",\n        \"hgroup\",\n        \"hr\",\n        \"li\",\n        \"main\",\n        \"nav\",\n        \"menu\",\n        \"ol\",\n        \"p\",\n        \"pre\",\n        \"section\",\n        \"table\",\n        \"ul\"\n    ]),\n    svg: new Set([\n        \"b\",\n        \"blockquote\",\n        \"br\",\n        \"code\",\n        \"dd\",\n        \"div\",\n        \"dl\",\n        \"dt\",\n        \"em\",\n        \"embed\",\n        \"h1\",\n        \"h2\",\n        \"h3\",\n        \"h4\",\n        \"h5\",\n        \"h6\",\n        \"hr\",\n        \"i\",\n        \"img\",\n        \"li\",\n        \"menu\",\n        \"meta\",\n        \"ol\",\n        \"p\",\n        \"pre\",\n        \"ruby\",\n        \"s\",\n        \"small\",\n        \"span\",\n        \"strong\",\n        \"sub\",\n        \"sup\",\n        \"table\",\n        \"u\",\n        \"ul\",\n        \"var\"\n    ])\n};\n/** maps element to set of elements that can not be it's parent, others can */ const knownInvalidParents = {\n    a: new Set([\n        \"a\"\n    ]),\n    button: new Set([\n        \"button\"\n    ]),\n    dd: new Set([\n        \"dd\",\n        \"dt\"\n    ]),\n    dt: new Set([\n        \"dd\",\n        \"dt\"\n    ]),\n    form: new Set([\n        \"form\"\n    ]),\n    li: new Set([\n        \"li\"\n    ]),\n    h1: headings,\n    h2: headings,\n    h3: headings,\n    h4: headings,\n    h5: headings,\n    h6: headings\n};\nmodule.exports = {\n    onlyValidChildren,\n    onlyValidParents,\n    knownInvalidChildren,\n    knownInvalidParents\n};\n\n},{}],\"fQ21u\":[function(require,module,exports) {\n// shim for using process in browser\nvar process = module.exports = {};\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\nvar cachedSetTimeout;\nvar cachedClearTimeout;\nfunction defaultSetTimout() {\n    throw new Error(\"setTimeout has not been defined\");\n}\nfunction defaultClearTimeout() {\n    throw new Error(\"clearTimeout has not been defined\");\n}\n(function() {\n    try {\n        if (typeof setTimeout === \"function\") cachedSetTimeout = setTimeout;\n        else cachedSetTimeout = defaultSetTimout;\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === \"function\") cachedClearTimeout = clearTimeout;\n        else cachedClearTimeout = defaultClearTimeout;\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n})();\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) //normal enviroments in sane situations\n    return clearTimeout(marker);\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) return;\n    draining = false;\n    if (currentQueue.length) queue = currentQueue.concat(queue);\n    else queueIndex = -1;\n    if (queue.length) drainQueue();\n}\nfunction drainQueue() {\n    if (draining) return;\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n    var len = queue.length;\n    while(len){\n        currentQueue = queue;\n        queue = [];\n        while(++queueIndex < len)if (currentQueue) currentQueue[queueIndex].run();\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\nprocess.nextTick = function(fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) for(var i = 1; i < arguments.length; i++)args[i - 1] = arguments[i];\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) runTimeout(drainQueue);\n};\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function() {\n    this.fun.apply(null, this.array);\n};\nprocess.title = \"browser\";\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = \"\"; // empty string to avoid regexp issues\nprocess.versions = {};\nfunction noop() {}\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\nprocess.listeners = function(name) {\n    return [];\n};\nprocess.binding = function(name) {\n    throw new Error(\"process.binding is not supported\");\n};\nprocess.cwd = function() {\n    return \"/\";\n};\nprocess.chdir = function(dir) {\n    throw new Error(\"process.chdir is not supported\");\n};\nprocess.umask = function() {\n    return 0;\n};\n\n},{}],\"gI9Ar\":[function(require,module,exports) {\nif (typeof Object.create === \"function\") // implementation from standard node.js 'util' module\nmodule.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n        ctor.super_ = superCtor;\n        ctor.prototype = Object.create(superCtor.prototype, {\n            constructor: {\n                value: ctor,\n                enumerable: false,\n                writable: true,\n                configurable: true\n            }\n        });\n    }\n};\nelse // old school shim for old browsers\nmodule.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n        ctor.super_ = superCtor;\n        var TempCtor = function() {};\n        TempCtor.prototype = superCtor.prototype;\n        ctor.prototype = new TempCtor();\n        ctor.prototype.constructor = ctor;\n    }\n};\n\n},{}]},[\"5Q6DS\"], \"5Q6DS\", \"parcelRequire4ef6\")\n\n//# sourceMappingURL=babel-preset-solid.72103b68.js.map\n","const jsxTransform = require(\"babel-plugin-jsx-dom-expressions\");\n\nmodule.exports = function (context, options = {}) {\n  const plugins = [\n    [\n      jsxTransform,\n      Object.assign(\n        {\n          moduleName: \"solid-js/web\",\n          builtIns: [\n            \"For\",\n            \"Show\",\n            \"Switch\",\n            \"Match\",\n            \"Suspense\",\n            \"SuspenseList\",\n            \"Portal\",\n            \"Index\",\n            \"Dynamic\",\n            \"ErrorBoundary\"\n          ],\n          contextToCustomElements: true,\n          wrapConditionals: true,\n          generate: \"dom\"\n        },\n        options\n      )\n    ]\n  ];\n\n  return {\n    plugins\n  };\n};\n","'use strict';\n\nvar SyntaxJSX = require('@babel/plugin-syntax-jsx');\nvar t = require('@babel/types');\nvar helperModuleImports = require('@babel/helper-module-imports');\nvar htmlEntities = require('html-entities');\n\nfunction _interopNamespaceDefault(e) {\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n.default = e;\n  return Object.freeze(n);\n}\n\nvar t__namespace = /*#__PURE__*/_interopNamespaceDefault(t);\n\nconst booleans = [\n  \"allowfullscreen\",\n  \"async\",\n  \"autofocus\",\n  \"autoplay\",\n  \"checked\",\n  \"controls\",\n  \"default\",\n  \"disabled\",\n  \"formnovalidate\",\n  \"hidden\",\n  \"indeterminate\",\n  \"ismap\",\n  \"loop\",\n  \"multiple\",\n  \"muted\",\n  \"nomodule\",\n  \"novalidate\",\n  \"open\",\n  \"playsinline\",\n  \"readonly\",\n  \"required\",\n  \"reversed\",\n  \"seamless\",\n  \"selected\"\n];\n\nconst BooleanAttributes = /*#__PURE__*/ new Set(booleans);\n\nconst Properties = /*#__PURE__*/ new Set([\n  \"className\",\n  \"value\",\n  \"readOnly\",\n  \"formNoValidate\",\n  \"isMap\",\n  \"noModule\",\n  \"playsInline\",\n  ...booleans\n]);\n\nconst ChildProperties = /*#__PURE__*/ new Set([\n  \"innerHTML\",\n  \"textContent\",\n  \"innerText\",\n  \"children\"\n]);\n\n// React Compat\nconst Aliases = /*#__PURE__*/ Object.assign(Object.create(null), {\n  className: \"class\",\n  htmlFor: \"for\"\n});\n\nconst PropAliases = /*#__PURE__*/ Object.assign(Object.create(null), {\n  class: \"className\",\n  formnovalidate: {\n    $: \"formNoValidate\",\n    BUTTON: 1,\n    INPUT: 1\n  },\n  ismap: {\n    $: \"isMap\",\n    IMG: 1\n  },\n  nomodule: {\n    $: \"noModule\",\n    SCRIPT: 1\n  },\n  playsinline: {\n    $: \"playsInline\",\n    VIDEO: 1\n  },\n  readonly: {\n    $: \"readOnly\",\n    INPUT: 1,\n    TEXTAREA: 1\n  }\n});\n\nfunction getPropAlias(prop, tagName) {\n  const a = PropAliases[prop];\n  return typeof a === \"object\" ? (a[tagName] ? a[\"$\"] : undefined) : a;\n}\n\n// list of Element events that will be delegated\nconst DelegatedEvents = /*#__PURE__*/ new Set([\n  \"beforeinput\",\n  \"click\",\n  \"dblclick\",\n  \"contextmenu\",\n  \"focusin\",\n  \"focusout\",\n  \"input\",\n  \"keydown\",\n  \"keyup\",\n  \"mousedown\",\n  \"mousemove\",\n  \"mouseout\",\n  \"mouseover\",\n  \"mouseup\",\n  \"pointerdown\",\n  \"pointermove\",\n  \"pointerout\",\n  \"pointerover\",\n  \"pointerup\",\n  \"touchend\",\n  \"touchmove\",\n  \"touchstart\"\n]);\n\nconst SVGElements = /*#__PURE__*/ new Set([\n  // \"a\",\n  \"altGlyph\",\n  \"altGlyphDef\",\n  \"altGlyphItem\",\n  \"animate\",\n  \"animateColor\",\n  \"animateMotion\",\n  \"animateTransform\",\n  \"circle\",\n  \"clipPath\",\n  \"color-profile\",\n  \"cursor\",\n  \"defs\",\n  \"desc\",\n  \"ellipse\",\n  \"feBlend\",\n  \"feColorMatrix\",\n  \"feComponentTransfer\",\n  \"feComposite\",\n  \"feConvolveMatrix\",\n  \"feDiffuseLighting\",\n  \"feDisplacementMap\",\n  \"feDistantLight\",\n  \"feFlood\",\n  \"feFuncA\",\n  \"feFuncB\",\n  \"feFuncG\",\n  \"feFuncR\",\n  \"feGaussianBlur\",\n  \"feImage\",\n  \"feMerge\",\n  \"feMergeNode\",\n  \"feMorphology\",\n  \"feOffset\",\n  \"fePointLight\",\n  \"feSpecularLighting\",\n  \"feSpotLight\",\n  \"feTile\",\n  \"feTurbulence\",\n  \"filter\",\n  \"font\",\n  \"font-face\",\n  \"font-face-format\",\n  \"font-face-name\",\n  \"font-face-src\",\n  \"font-face-uri\",\n  \"foreignObject\",\n  \"g\",\n  \"glyph\",\n  \"glyphRef\",\n  \"hkern\",\n  \"image\",\n  \"line\",\n  \"linearGradient\",\n  \"marker\",\n  \"mask\",\n  \"metadata\",\n  \"missing-glyph\",\n  \"mpath\",\n  \"path\",\n  \"pattern\",\n  \"polygon\",\n  \"polyline\",\n  \"radialGradient\",\n  \"rect\",\n  // \"script\",\n  \"set\",\n  \"stop\",\n  // \"style\",\n  \"svg\",\n  \"switch\",\n  \"symbol\",\n  \"text\",\n  \"textPath\",\n  // \"title\",\n  \"tref\",\n  \"tspan\",\n  \"use\",\n  \"view\",\n  \"vkern\"\n]);\n\nconst SVGNamespace = {\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\"\n};\n\nvar VoidElements = [\n  'area',\n  'base',\n  'br',\n  'col',\n  'embed',\n  'hr',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'menuitem',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n];\n\nconst reservedNameSpaces = new Set([\n  \"class\",\n  \"on\",\n  \"oncapture\",\n  \"style\",\n  \"use\",\n  \"prop\",\n  \"attr\"\n]);\n\nconst nonSpreadNameSpaces = new Set([\"class\", \"style\", \"use\", \"prop\", \"attr\"]);\n\nfunction getConfig(path) {\n  return path.hub.file.metadata.config;\n}\n\nconst getRendererConfig = (path, renderer) => {\n  const config = getConfig(path);\n  return config?.renderers?.find(r => r.name === renderer) ?? config;\n};\n\nfunction registerImportMethod(path, name, moduleName) {\n  const imports =\n    path.scope.getProgramParent().data.imports ||\n    (path.scope.getProgramParent().data.imports = new Map());\n  moduleName = moduleName || getConfig(path).moduleName;\n  if (!imports.has(`${moduleName}:${name}`)) {\n    let id = helperModuleImports.addNamed(path, name, moduleName, {\n      nameHint: `_$${name}`\n    });\n    imports.set(`${moduleName}:${name}`, id);\n    return id;\n  } else {\n    let iden = imports.get(`${moduleName}:${name}`);\n    // the cloning is required to play well with babel-preset-env which is\n    // transpiling import as we add them and using the same identifier causes\n    // problems with the multiple identifiers of the same thing\n    return t__namespace.cloneNode(iden);\n  }\n}\n\nfunction jsxElementNameToString(node) {\n  if (t__namespace.isJSXMemberExpression(node)) {\n    return `${jsxElementNameToString(node.object)}.${node.property.name}`;\n  }\n  if (t__namespace.isJSXIdentifier(node) || t__namespace.isIdentifier(node)) {\n    return node.name;\n  }\n  return `${node.namespace.name}:${node.name.name}`;\n}\n\nfunction getTagName(tag) {\n  const jsxName = tag.openingElement.name;\n  return jsxElementNameToString(jsxName);\n}\n\nfunction isComponent(tagName) {\n  return (\n    (tagName[0] && tagName[0].toLowerCase() !== tagName[0]) ||\n    tagName.includes(\".\") ||\n    /[^a-zA-Z]/.test(tagName[0])\n  );\n}\n\nfunction isDynamic(path, { checkMember, checkTags, checkCallExpressions = true, native }) {\n  const config = getConfig(path);\n  if (config.generate === \"ssr\" && native) {\n    checkMember = false;\n    checkCallExpressions = false;\n  }\n  const expr = path.node;\n  if (t__namespace.isFunction(expr)) return false;\n  if (\n    expr.leadingComments &&\n    expr.leadingComments[0] &&\n    expr.leadingComments[0].value.trim() === config.staticMarker\n  ) {\n    expr.leadingComments.shift();\n    return false;\n  }\n  if (\n    (checkCallExpressions && (t__namespace.isCallExpression(expr) || t__namespace.isOptionalCallExpression(expr))) ||\n    (checkMember &&\n      (t__namespace.isMemberExpression(expr) ||\n        t__namespace.isOptionalMemberExpression(expr) ||\n        t__namespace.isSpreadElement(expr) ||\n        (t__namespace.isBinaryExpression(expr) && expr.operator === \"in\"))) ||\n    (checkTags && (t__namespace.isJSXElement(expr) || t__namespace.isJSXFragment(expr)))\n  )\n    return true;\n\n  let dynamic;\n  path.traverse({\n    Function(p) {\n      if (t__namespace.isObjectMethod(p.node) && p.node.computed) {\n        dynamic = isDynamic(p.get(\"key\"), { checkMember, checkTags, checkCallExpressions, native });\n      }\n      p.skip();\n    },\n    CallExpression(p) {\n      checkCallExpressions && (dynamic = true) && p.stop();\n    },\n    OptionalCallExpression(p) {\n      checkCallExpressions && (dynamic = true) && p.stop();\n    },\n    MemberExpression(p) {\n      checkMember && (dynamic = true) && p.stop();\n    },\n    OptionalMemberExpression(p) {\n      checkMember && (dynamic = true) && p.stop();\n    },\n    SpreadElement(p) {\n      checkMember && (dynamic = true) && p.stop();\n    },\n    BinaryExpression(p) {\n      checkMember && p.node.operator === \"in\" && (dynamic = true) && p.stop();\n    },\n    JSXElement(p) {\n      checkTags ? (dynamic = true) && p.stop() : p.skip();\n    },\n    JSXFragment(p) {\n      checkTags ? (dynamic = true) && p.stop() : p.skip();\n    }\n  });\n  return dynamic;\n}\n\nfunction getStaticExpression(path) {\n  const node = path.node;\n  let value, type;\n  return (\n    t__namespace.isJSXExpressionContainer(node) &&\n    t__namespace.isJSXElement(path.parent) &&\n    !isComponent(getTagName(path.parent)) &&\n    !t__namespace.isSequenceExpression(node.expression) &&\n    (value = path.get(\"expression\").evaluate().value) !== undefined &&\n    ((type = typeof value) === \"string\" || type === \"number\") &&\n    value\n  );\n}\n\n// remove unnecessary JSX Text nodes\nfunction filterChildren(children) {\n  return children.filter(\n    ({ node: child }) =>\n      !(t__namespace.isJSXExpressionContainer(child) && t__namespace.isJSXEmptyExpression(child.expression)) &&\n      (!t__namespace.isJSXText(child) || !/^[\\r\\n]\\s*$/.test(child.extra.raw))\n  );\n}\n\nfunction checkLength(children) {\n  let i = 0;\n  children.forEach(path => {\n    const child = path.node;\n    !(t__namespace.isJSXExpressionContainer(child) && t__namespace.isJSXEmptyExpression(child.expression)) &&\n      (!t__namespace.isJSXText(child) || !/^\\s*$/.test(child.extra.raw) || /^ *$/.test(child.extra.raw)) &&\n      i++;\n  });\n  return i > 1;\n}\n\nfunction trimWhitespace(text) {\n  text = text.replace(/\\r/g, \"\");\n  if (/\\n/g.test(text)) {\n    text = text\n      .split(\"\\n\")\n      .map((t, i) => (i ? t.replace(/^\\s*/g, \"\") : t))\n      .filter(s => !/^\\s*$/.test(s))\n      .join(\" \");\n  }\n  return text.replace(/\\s+/g, \" \");\n}\n\nfunction toEventName(name) {\n  return name.slice(2).toLowerCase();\n}\n\nfunction toPropertyName(name) {\n  return name.toLowerCase().replace(/-([a-z])/g, (_, w) => w.toUpperCase());\n}\n\nfunction wrappedByText(list, startIndex) {\n  let index = startIndex,\n    wrapped;\n  while (--index >= 0) {\n    const node = list[index];\n    if (!node) continue;\n    if (node.text) {\n      wrapped = true;\n      break;\n    }\n    if (node.id) return false;\n  }\n  if (!wrapped) return false;\n  index = startIndex;\n  while (++index < list.length) {\n    const node = list[index];\n    if (!node) continue;\n    if (node.text) return true;\n    if (node.id) return false;\n  }\n  return false;\n}\n\nfunction transformCondition(path, inline, deep) {\n  const config = getConfig(path);\n  const expr = path.node;\n  const memo = registerImportMethod(path, config.memoWrapper);\n  let dTest, cond, id;\n  if (\n    t__namespace.isConditionalExpression(expr) &&\n    (isDynamic(path.get(\"consequent\"), {\n      checkTags: true\n    }) ||\n      isDynamic(path.get(\"alternate\"), { checkTags: true }))\n  ) {\n    dTest = isDynamic(path.get(\"test\"), { checkMember: true });\n    if (dTest) {\n      cond = expr.test;\n      if (!t__namespace.isBinaryExpression(cond))\n        cond = t__namespace.unaryExpression(\"!\", t__namespace.unaryExpression(\"!\", cond, true), true);\n      id = inline\n        ? t__namespace.callExpression(memo, [t__namespace.arrowFunctionExpression([], cond)])\n        : path.scope.generateUidIdentifier(\"_c$\");\n      expr.test = t__namespace.callExpression(id, []);\n      if (t__namespace.isConditionalExpression(expr.consequent) || t__namespace.isLogicalExpression(expr.consequent)) {\n        expr.consequent = transformCondition(path.get(\"consequent\"), inline, true);\n      }\n      if (t__namespace.isConditionalExpression(expr.alternate) || t__namespace.isLogicalExpression(expr.alternate)) {\n        expr.alternate = transformCondition(path.get(\"alternate\"), inline, true);\n      }\n    }\n  } else if (t__namespace.isLogicalExpression(expr)) {\n    let nextPath = path;\n    // handle top-level or, ie cond && <A/> || <B/>\n    while (nextPath.node.operator !== \"&&\" && t__namespace.isLogicalExpression(nextPath.node.left)) {\n      nextPath = nextPath.get(\"left\");\n    }\n    nextPath.node.operator === \"&&\" &&\n      isDynamic(nextPath.get(\"right\"), { checkTags: true }) &&\n      (dTest = isDynamic(nextPath.get(\"left\"), {\n        checkMember: true\n      }));\n    if (dTest) {\n      cond = nextPath.node.left;\n      if (!t__namespace.isBinaryExpression(cond))\n        cond = t__namespace.unaryExpression(\"!\", t__namespace.unaryExpression(\"!\", cond, true), true);\n      id = inline\n        ? t__namespace.callExpression(memo, [t__namespace.arrowFunctionExpression([], cond)])\n        : path.scope.generateUidIdentifier(\"_c$\");\n      nextPath.node.left = t__namespace.callExpression(id, []);\n    }\n  }\n  if (dTest && !inline) {\n    const statements = [\n      t__namespace.variableDeclaration(\"const\", [\n        t__namespace.variableDeclarator(\n          id,\n          config.memoWrapper\n            ? t__namespace.callExpression(memo, [t__namespace.arrowFunctionExpression([], cond)])\n            : t__namespace.arrowFunctionExpression([], cond)\n        )\n      ]),\n      t__namespace.arrowFunctionExpression([], expr)\n    ];\n    return deep\n      ? t__namespace.callExpression(\n          t__namespace.arrowFunctionExpression(\n            [],\n            t__namespace.blockStatement([statements[0], t__namespace.returnStatement(statements[1])])\n          ),\n          []\n        )\n      : statements;\n  }\n  return deep ? expr : t__namespace.arrowFunctionExpression([], expr);\n}\n\nfunction escapeBackticks(value) {\n  return value.replace(/`/g, \"\\\\`\");\n}\n\nfunction escapeHTML(s, attr) {\n  if (typeof s !== \"string\") return s;\n  const delim = attr ? '\"' : \"<\";\n  const escDelim = attr ? \"&quot;\" : \"&lt;\";\n  let iDelim = s.indexOf(delim);\n  let iAmp = s.indexOf(\"&\");\n\n  if (iDelim < 0 && iAmp < 0) return s;\n\n  let left = 0,\n    out = \"\";\n\n  while (iDelim >= 0 && iAmp >= 0) {\n    if (iDelim < iAmp) {\n      if (left < iDelim) out += s.substring(left, iDelim);\n      out += escDelim;\n      left = iDelim + 1;\n      iDelim = s.indexOf(delim, left);\n    } else {\n      if (left < iAmp) out += s.substring(left, iAmp);\n      out += \"&amp;\";\n      left = iAmp + 1;\n      iAmp = s.indexOf(\"&\", left);\n    }\n  }\n\n  if (iDelim >= 0) {\n    do {\n      if (left < iDelim) out += s.substring(left, iDelim);\n      out += escDelim;\n      left = iDelim + 1;\n      iDelim = s.indexOf(delim, left);\n    } while (iDelim >= 0);\n  } else {\n    while (iAmp >= 0) {\n      if (left < iAmp) out += s.substring(left, iAmp);\n      out += \"&amp;\";\n      left = iAmp + 1;\n      iAmp = s.indexOf(\"&\", left);\n    }\n  }\n\n  return left < s.length ? out + s.substring(left) : out;\n}\n\nfunction convertJSXIdentifier(node) {\n  if (t__namespace.isJSXIdentifier(node)) {\n    if (t__namespace.isValidIdentifier(node.name)) {\n      node.type = \"Identifier\";\n    } else {\n      return t__namespace.stringLiteral(node.name);\n    }\n  } else if (t__namespace.isJSXMemberExpression(node)) {\n    return t__namespace.memberExpression(\n      convertJSXIdentifier(node.object),\n      convertJSXIdentifier(node.property)\n    );\n  } else if (t__namespace.isJSXNamespacedName(node)) {\n    return t__namespace.stringLiteral(`${node.namespace.name}:${node.name.name}`);\n  }\n\n  return node;\n}\n\nfunction canNativeSpread(key, { checkNameSpaces } = {}) {\n  if (checkNameSpaces && key.includes(\":\") && nonSpreadNameSpaces.has(key.split(\":\")[0]))\n    return false;\n  // TODO: figure out how to detect definitely function ref\n  if (key === \"ref\") return false;\n  return true;\n}\n\nconst InlineElements = [\n  \"a\",\n  \"abbr\",\n  \"acronym\",\n  \"b\",\n  \"bdi\",\n  \"bdo\",\n  \"big\",\n  \"br\",\n  \"button\",\n  \"canvas\",\n  \"cite\",\n  \"code\",\n  \"data\",\n  \"datalist\",\n  \"del\",\n  \"dfn\",\n  \"em\",\n  \"embed\",\n  \"i\",\n  \"iframe\",\n  \"img\",\n  \"input\",\n  \"ins\",\n  \"kbd\",\n  \"label\",\n  \"map\",\n  \"mark\",\n  \"meter\",\n  \"noscript\",\n  \"object\",\n  \"output\",\n  \"picture\",\n  \"progress\",\n  \"q\",\n  \"ruby\",\n  \"s\",\n  \"samp\",\n  \"script\",\n  \"select\",\n  \"slot\",\n  \"small\",\n  \"span\",\n  \"strong\",\n  \"sub\",\n  \"sup\",\n  \"svg\",\n  \"template\",\n  \"textarea\",\n  \"time\",\n  \"u\",\n  \"tt\",\n  \"var\",\n  \"video\"\n];\n\nconst BlockElements = [\n  \"address\",\n  \"article\",\n  \"aside\",\n  \"blockquote\",\n  \"dd\",\n  \"details\",\n  \"dialog\",\n  \"div\",\n  \"dl\",\n  \"dt\",\n  \"fieldset\",\n  \"figcaption\",\n  \"figure\",\n  \"footer\",\n  \"form\",\n  \"h1\",\n  \"h2\",\n  \"h3\",\n  \"h4\",\n  \"h5\",\n  \"h6\",\n  \"header\",\n  \"hgroup\",\n  \"hr\",\n  \"li\",\n  \"main\",\n  \"menu\",\n  \"nav\",\n  \"ol\",\n  \"p\",\n  \"pre\",\n  \"section\",\n  \"table\",\n  \"ul\"\n];\n\nconst alwaysClose = [\n  \"title\",\n  \"style\",\n  \"a\",\n  \"strong\",\n  \"small\",\n  \"b\",\n  \"u\",\n  \"i\",\n  \"em\",\n  \"s\",\n  \"code\",\n  \"object\",\n  \"table\",\n  \"button\",\n  \"textarea\",\n  \"select\",\n  \"iframe\",\n  \"script\",\n  \"template\",\n  \"fieldset\"\n];\n\nfunction transformElement$3(path, info) {\n  let tagName = getTagName(path.node),\n    config = getConfig(path),\n    wrapSVG = info.topLevel && tagName != \"svg\" && SVGElements.has(tagName),\n    voidTag = VoidElements.indexOf(tagName) > -1,\n    isCustomElement = tagName.indexOf(\"-\") > -1,\n    results = {\n      template: `<${tagName}`,\n      declarations: [],\n      exprs: [],\n      dynamics: [],\n      postExprs: [],\n      isSVG: wrapSVG,\n      hasCustomElement: isCustomElement,\n      tagName,\n      renderer: \"dom\"\n    };\n  if (config.hydratable && (tagName === \"html\" || tagName === \"head\" || tagName === \"body\")) {\n    results.skipTemplate = true;\n    if (tagName === \"head\" && info.topLevel) {\n      const createComponent = registerImportMethod(\n        path,\n        \"createComponent\",\n        getRendererConfig(path, \"dom\").moduleName\n      );\n      const NoHydration = registerImportMethod(\n        path,\n        \"NoHydration\",\n        getRendererConfig(path, \"dom\").moduleName\n      );\n      results.exprs.push(\n        t__namespace.expressionStatement(\n          t__namespace.callExpression(createComponent, [NoHydration, t__namespace.objectExpression([])])\n        )\n      );\n      return results;\n    }\n  }\n  if (wrapSVG) results.template = \"<svg>\" + results.template;\n  if (!info.skipId) results.id = path.scope.generateUidIdentifier(\"el$\");\n  transformAttributes$2(path, results);\n  if (config.contextToCustomElements && (tagName === \"slot\" || isCustomElement)) {\n    contextToCustomElement(path, results);\n  }\n  results.template += \">\";\n  if (!voidTag) {\n    // always close tags can still be skipped if they have no closing parents and are the last element\n    const toBeClosed =\n      !info.lastElement ||\n      (info.toBeClosed && (!config.omitNestedClosingTags || info.toBeClosed.has(tagName)));\n    if (toBeClosed) {\n      results.toBeClosed = new Set(info.toBeClosed || alwaysClose);\n      results.toBeClosed.add(tagName);\n      if (InlineElements.includes(tagName)) BlockElements.forEach(i => results.toBeClosed.add(i));\n    } else results.toBeClosed = info.toBeClosed;\n    transformChildren$2(path, results, config);\n    if (toBeClosed) results.template += `</${tagName}>`;\n  }\n  if (info.topLevel && config.hydratable && results.hasHydratableEvent) {\n    let runHydrationEvents = registerImportMethod(\n      path,\n      \"runHydrationEvents\",\n      getRendererConfig(path, \"dom\").moduleName\n    );\n    results.postExprs.push(t__namespace.expressionStatement(t__namespace.callExpression(runHydrationEvents, [])));\n  }\n  if (wrapSVG) results.template += \"</svg>\";\n  return results;\n}\n\nfunction setAttr$2(path, elem, name, value, { isSVG, dynamic, prevId, isCE, tagName }) {\n  // pull out namespace\n  const config = getConfig(path);\n  let parts, namespace;\n  if ((parts = name.split(\":\")) && parts[1] && reservedNameSpaces.has(parts[0])) {\n    name = parts[1];\n    namespace = parts[0];\n  }\n\n  // TODO: consider moving to a helper\n  if (namespace === \"style\") {\n    if (t__namespace.isStringLiteral(value)) {\n      return t__namespace.callExpression(\n        t__namespace.memberExpression(\n          t__namespace.memberExpression(elem, t__namespace.identifier(\"style\")),\n          t__namespace.identifier(\"setProperty\")\n        ),\n        [t__namespace.stringLiteral(name), value]\n      );\n    }\n    if (t__namespace.isNullLiteral(value) || t__namespace.isIdentifier(value, { name: \"undefined\" })) {\n      return t__namespace.callExpression(\n        t__namespace.memberExpression(\n          t__namespace.memberExpression(elem, t__namespace.identifier(\"style\")),\n          t__namespace.identifier(\"removeProperty\")\n        ),\n        [t__namespace.stringLiteral(name)]\n      );\n    }\n    return t__namespace.conditionalExpression(\n      t__namespace.binaryExpression(\"!=\", value, t__namespace.nullLiteral()),\n      t__namespace.callExpression(\n        t__namespace.memberExpression(\n          t__namespace.memberExpression(elem, t__namespace.identifier(\"style\")),\n          t__namespace.identifier(\"setProperty\")\n        ),\n        [t__namespace.stringLiteral(name), prevId ? prevId : value]\n      ),\n      t__namespace.callExpression(\n        t__namespace.memberExpression(\n          t__namespace.memberExpression(elem, t__namespace.identifier(\"style\")),\n          t__namespace.identifier(\"removeProperty\")\n        ),\n        [t__namespace.stringLiteral(name)]\n      )\n    );\n  }\n\n  if (namespace === \"class\") {\n    return t__namespace.callExpression(\n      t__namespace.memberExpression(\n        t__namespace.memberExpression(elem, t__namespace.identifier(\"classList\")),\n        t__namespace.identifier(\"toggle\")\n      ),\n      [\n        t__namespace.stringLiteral(name),\n        dynamic ? value : t__namespace.unaryExpression(\"!\", t__namespace.unaryExpression(\"!\", value))\n      ]\n    );\n  }\n\n  if (name === \"style\") {\n    return t__namespace.callExpression(\n      registerImportMethod(path, \"style\", getRendererConfig(path, \"dom\").moduleName),\n      prevId ? [elem, value, prevId] : [elem, value]\n    );\n  }\n\n  if (!isSVG && name === \"class\") {\n    return t__namespace.callExpression(\n      registerImportMethod(path, \"className\", getRendererConfig(path, \"dom\").moduleName),\n      [elem, value]\n    );\n  }\n\n  if (name === \"classList\") {\n    return t__namespace.callExpression(\n      registerImportMethod(path, \"classList\", getRendererConfig(path, \"dom\").moduleName),\n      prevId ? [elem, value, prevId] : [elem, value]\n    );\n  }\n\n  if (dynamic && name === \"textContent\") {\n    if (config.hydratable) {\n      return t__namespace.callExpression(registerImportMethod(path, \"setProperty\"), [elem, t__namespace.stringLiteral(\"data\"), value]);\n    }\n    return t__namespace.assignmentExpression(\"=\", t__namespace.memberExpression(elem, t__namespace.identifier(\"data\")), value);\n  }\n\n  const isChildProp = ChildProperties.has(name);\n  const isProp = Properties.has(name);\n  const alias = getPropAlias(name, tagName.toUpperCase());\n  if (namespace !== \"attr\" && (isChildProp || (!isSVG && isProp) || isCE || namespace === \"prop\")) {\n    if (isCE && !isChildProp && !isProp && namespace !== \"prop\") name = toPropertyName(name);\n    if (config.hydratable && namespace !== \"prop\") {\n      return t__namespace.callExpression(registerImportMethod(path, \"setProperty\"), [elem, t__namespace.stringLiteral(name), value]);\n    }\n    return t__namespace.assignmentExpression(\n      \"=\",\n      t__namespace.memberExpression(elem, t__namespace.identifier(alias || name)),\n      value\n    );\n  }\n\n  let isNameSpaced = name.indexOf(\":\") > -1;\n  name = Aliases[name] || name;\n  !isSVG && (name = name.toLowerCase());\n  const ns = isNameSpaced && SVGNamespace[name.split(\":\")[0]];\n  if (ns) {\n    return t__namespace.callExpression(\n      registerImportMethod(path, \"setAttributeNS\", getRendererConfig(path, \"dom\").moduleName),\n      [elem, t__namespace.stringLiteral(ns), t__namespace.stringLiteral(name), value]\n    );\n  } else {\n    return t__namespace.callExpression(\n      registerImportMethod(path, \"setAttribute\", getRendererConfig(path, \"dom\").moduleName),\n      [elem, t__namespace.stringLiteral(name), value]\n    );\n  }\n}\n\nfunction detectResolvableEventHandler(attribute, handler) {\n  while (t__namespace.isIdentifier(handler)) {\n    const lookup = attribute.scope.getBinding(handler.name);\n    if (lookup) {\n      if (t__namespace.isVariableDeclarator(lookup.path.node)) {\n        handler = lookup.path.node.init;\n      } else if (t__namespace.isFunctionDeclaration(lookup.path.node)) {\n        return true;\n      } else return false;\n    } else return false;\n  }\n  return t__namespace.isFunction(handler);\n}\n\nfunction transformAttributes$2(path, results) {\n  let elem = results.id,\n    hasHydratableEvent = false,\n    children,\n    spreadExpr,\n    attributes = path.get(\"openingElement\").get(\"attributes\");\n  const tagName = getTagName(path.node),\n    isSVG = SVGElements.has(tagName),\n    isCE = tagName.includes(\"-\"),\n    hasChildren = path.node.children.length > 0,\n    config = getConfig(path);\n\n  // preprocess spreads\n  if (attributes.some(attribute => t__namespace.isJSXSpreadAttribute(attribute.node))) {\n    [attributes, spreadExpr] = processSpreads$1(path, attributes, {\n      elem,\n      isSVG,\n      hasChildren,\n      wrapConditionals: config.wrapConditionals\n    });\n    path.get(\"openingElement\").set(\n      \"attributes\",\n      attributes.map(a => a.node)\n    );\n    //NOTE: can't be checked at compile time so add to compiled output\n    hasHydratableEvent = true;\n  }\n\n  // preprocess styles\n  const styleAttribute = path\n    .get(\"openingElement\")\n    .get(\"attributes\")\n    .find(\n      a =>\n        a.node.name &&\n        a.node.name.name === \"style\" &&\n        t__namespace.isJSXExpressionContainer(a.node.value) &&\n        t__namespace.isObjectExpression(a.node.value.expression) &&\n        !a.node.value.expression.properties.some(p => t__namespace.isSpreadElement(p))\n    );\n  if (styleAttribute) {\n    let i = 0,\n      leading = styleAttribute.node.value.expression.leadingComments;\n    styleAttribute.node.value.expression.properties.slice().forEach((p, index) => {\n      if (!p.computed) {\n        if (leading) p.value.leadingComments = leading;\n        path\n          .get(\"openingElement\")\n          .node.attributes.splice(\n            styleAttribute.key + ++i,\n            0,\n            t__namespace.JSXAttribute(\n              t__namespace.JSXNamespacedName(\n                t__namespace.JSXIdentifier(\"style\"),\n                t__namespace.JSXIdentifier(t__namespace.isIdentifier(p.key) ? p.key.name : p.key.value)\n              ),\n              t__namespace.JSXExpressionContainer(p.value)\n            )\n          );\n        styleAttribute.node.value.expression.properties.splice(index - i - 1, 1);\n      }\n    });\n    if (!styleAttribute.node.value.expression.properties.length)\n      path.get(\"openingElement\").node.attributes.splice(styleAttribute.key, 1);\n  }\n\n  // preprocess classList\n  attributes = path.get(\"openingElement\").get(\"attributes\");\n  const classListAttribute = attributes.find(\n    a =>\n      a.node.name &&\n      a.node.name.name === \"classList\" &&\n      t__namespace.isJSXExpressionContainer(a.node.value) &&\n      t__namespace.isObjectExpression(a.node.value.expression) &&\n      !a.node.value.expression.properties.some(\n        p =>\n          t__namespace.isSpreadElement(p) ||\n          p.computed ||\n          (t__namespace.isStringLiteral(p.key) && (p.key.value.includes(\" \") || p.key.value.includes(\":\")))\n      )\n  );\n  if (classListAttribute) {\n    let i = 0,\n      leading = classListAttribute.node.value.expression.leadingComments,\n      classListProperties = classListAttribute.get(\"value\").get(\"expression\").get(\"properties\");\n    classListProperties.slice().forEach((propPath, index) => {\n      const p = propPath.node;\n      const { confident, value: computed } = propPath.get(\"value\").evaluate();\n      if (leading) p.value.leadingComments = leading;\n      if (!confident) {\n        path\n          .get(\"openingElement\")\n          .node.attributes.splice(\n            classListAttribute.key + ++i,\n            0,\n            t__namespace.JSXAttribute(\n              t__namespace.JSXNamespacedName(\n                t__namespace.JSXIdentifier(\"class\"),\n                t__namespace.JSXIdentifier(t__namespace.isIdentifier(p.key) ? p.key.name : p.key.value)\n              ),\n              t__namespace.JSXExpressionContainer(p.value)\n            )\n          );\n      } else if (computed) {\n        path\n          .get(\"openingElement\")\n          .node.attributes.splice(\n            classListAttribute.key + ++i,\n            0,\n            t__namespace.JSXAttribute(\n              t__namespace.JSXIdentifier(\"class\"),\n              t__namespace.stringLiteral(t__namespace.isIdentifier(p.key) ? p.key.name : p.key.value)\n            )\n          );\n      }\n      classListProperties.splice(index - i - 1, 1);\n    });\n    if (!classListProperties.length)\n      path.get(\"openingElement\").node.attributes.splice(classListAttribute.key, 1);\n  }\n\n  // combine class properties\n  attributes = path.get(\"openingElement\").get(\"attributes\");\n  const classAttributes = attributes.filter(\n    a => a.node.name && (a.node.name.name === \"class\" || a.node.name.name === \"className\")\n  );\n  if (classAttributes.length > 1) {\n    const first = classAttributes[0].node,\n      values = [],\n      quasis = [t__namespace.TemplateElement({ raw: \"\" })];\n    for (let i = 0; i < classAttributes.length; i++) {\n      const attr = classAttributes[i].node,\n        isLast = i === classAttributes.length - 1;\n      if (!t__namespace.isJSXExpressionContainer(attr.value)) {\n        const prev = quasis.pop();\n        quasis.push(\n          t__namespace.TemplateElement({\n            raw: (prev ? prev.value.raw : \"\") + `${attr.value.value}` + (isLast ? \"\" : \" \")\n          })\n        );\n      } else {\n        values.push(t__namespace.logicalExpression(\"||\", attr.value.expression, t__namespace.stringLiteral(\"\")));\n        quasis.push(t__namespace.TemplateElement({ raw: isLast ? \"\" : \" \" }));\n      }\n      i && attributes.splice(attributes.indexOf(classAttributes[i]), 1);\n    }\n    if (values.length) first.value = t__namespace.JSXExpressionContainer(t__namespace.TemplateLiteral(quasis, values));\n    else first.value = t__namespace.stringLiteral(quasis[0].value.raw);\n  }\n  path.get(\"openingElement\").set(\n    \"attributes\",\n    attributes.map(a => a.node)\n  );\n\n  let needsSpacing = true;\n\n  path\n    .get(\"openingElement\")\n    .get(\"attributes\")\n    .forEach(attribute => {\n      const node = attribute.node;\n      let value = node.value,\n        key = t__namespace.isJSXNamespacedName(node.name)\n          ? `${node.name.namespace.name}:${node.name.name.name}`\n          : node.name.name,\n        reservedNameSpace =\n          t__namespace.isJSXNamespacedName(node.name) && reservedNameSpaces.has(node.name.namespace.name);\n      if (t__namespace.isJSXExpressionContainer(value) && !key.startsWith(\"use:\")) {\n        const evaluated = attribute.get(\"value\").get(\"expression\").evaluate().value;\n        let type;\n        if (\n          evaluated !== undefined &&\n          ((type = typeof evaluated) === \"string\" || type === \"number\")\n        ) {\n          value = t__namespace.stringLiteral(String(evaluated));\n        }\n      }\n      if (\n        t__namespace.isJSXNamespacedName(node.name) &&\n        reservedNameSpace &&\n        !t__namespace.isJSXExpressionContainer(value)\n      ) {\n        node.value = value = t__namespace.JSXExpressionContainer(value || t__namespace.JSXEmptyExpression());\n      }\n      if (\n        t__namespace.isJSXExpressionContainer(value) &&\n        (reservedNameSpace ||\n          !(t__namespace.isStringLiteral(value.expression) || t__namespace.isNumericLiteral(value.expression)))\n      ) {\n        if (key === \"ref\") {\n          // Normalize expressions for non-null and type-as\n          while (\n            t__namespace.isTSNonNullExpression(value.expression) ||\n            t__namespace.isTSAsExpression(value.expression)\n          ) {\n            value.expression = value.expression.expression;\n          }\n          let binding,\n            isFunction =\n              t__namespace.isIdentifier(value.expression) &&\n              (binding = path.scope.getBinding(value.expression.name)) &&\n              binding.kind === \"const\";\n          if (!isFunction && t__namespace.isLVal(value.expression)) {\n            const refIdentifier = path.scope.generateUidIdentifier(\"_ref$\");\n            results.exprs.unshift(\n              t__namespace.variableDeclaration(\"const\", [\n                t__namespace.variableDeclarator(refIdentifier, value.expression)\n              ]),\n              t__namespace.expressionStatement(\n                t__namespace.conditionalExpression(\n                  t__namespace.binaryExpression(\n                    \"===\",\n                    t__namespace.unaryExpression(\"typeof\", refIdentifier),\n                    t__namespace.stringLiteral(\"function\")\n                  ),\n                  t__namespace.callExpression(\n                    registerImportMethod(path, \"use\", getRendererConfig(path, \"dom\").moduleName),\n                    [refIdentifier, elem]\n                  ),\n                  t__namespace.assignmentExpression(\"=\", value.expression, elem)\n                )\n              )\n            );\n          } else if (isFunction || t__namespace.isFunction(value.expression)) {\n            results.exprs.unshift(\n              t__namespace.expressionStatement(\n                t__namespace.callExpression(\n                  registerImportMethod(path, \"use\", getRendererConfig(path, \"dom\").moduleName),\n                  [value.expression, elem]\n                )\n              )\n            );\n          } else if (t__namespace.isCallExpression(value.expression)) {\n            const refIdentifier = path.scope.generateUidIdentifier(\"_ref$\");\n            results.exprs.unshift(\n              t__namespace.variableDeclaration(\"const\", [\n                t__namespace.variableDeclarator(refIdentifier, value.expression)\n              ]),\n              t__namespace.expressionStatement(\n                t__namespace.logicalExpression(\n                  \"&&\",\n                  t__namespace.binaryExpression(\n                    \"===\",\n                    t__namespace.unaryExpression(\"typeof\", refIdentifier),\n                    t__namespace.stringLiteral(\"function\")\n                  ),\n                  t__namespace.callExpression(\n                    registerImportMethod(path, \"use\", getRendererConfig(path, \"dom\").moduleName),\n                    [refIdentifier, elem]\n                  )\n                )\n              )\n            );\n          }\n        } else if (key.startsWith(\"use:\")) {\n          // Some trick to treat JSXIdentifier as Identifier\n          node.name.name.type = \"Identifier\";\n          results.exprs.unshift(\n            t__namespace.expressionStatement(\n              t__namespace.callExpression(\n                registerImportMethod(path, \"use\", getRendererConfig(path, \"dom\").moduleName),\n                [\n                  node.name.name,\n                  elem,\n                  t__namespace.arrowFunctionExpression(\n                    [],\n                    t__namespace.isJSXEmptyExpression(value.expression)\n                      ? t__namespace.booleanLiteral(true)\n                      : value.expression\n                  )\n                ]\n              )\n            )\n          );\n        } else if (key === \"children\") {\n          children = value;\n        } else if (key.startsWith(\"on\")) {\n          const ev = toEventName(key);\n          if (key.startsWith(\"on:\") || key.startsWith(\"oncapture:\")) {\n            const listenerOptions = [t__namespace.stringLiteral(key.split(\":\")[1]), value.expression];\n            results.exprs.push(\n              t__namespace.expressionStatement(\n                t__namespace.callExpression(\n                  t__namespace.memberExpression(elem, t__namespace.identifier(\"addEventListener\")),\n                  key.startsWith(\"oncapture:\")\n                    ? listenerOptions.concat(t__namespace.booleanLiteral(true))\n                    : listenerOptions\n                )\n              )\n            );\n          } else if (\n            config.delegateEvents &&\n            (DelegatedEvents.has(ev) || config.delegatedEvents.indexOf(ev) !== -1)\n          ) {\n            // can only hydrate delegated events\n            hasHydratableEvent = true;\n            const events =\n              attribute.scope.getProgramParent().data.events ||\n              (attribute.scope.getProgramParent().data.events = new Set());\n            events.add(ev);\n            let handler = value.expression;\n            const resolveable = detectResolvableEventHandler(attribute, handler);\n            if (t__namespace.isArrayExpression(handler)) {\n              if (handler.elements.length > 1) {\n                results.exprs.unshift(\n                  t__namespace.expressionStatement(\n                    t__namespace.assignmentExpression(\n                      \"=\",\n                      t__namespace.memberExpression(elem, t__namespace.identifier(`$$${ev}Data`)),\n                      handler.elements[1]\n                    )\n                  )\n                );\n              }\n              handler = handler.elements[0];\n              results.exprs.unshift(\n                t__namespace.expressionStatement(\n                  t__namespace.assignmentExpression(\n                    \"=\",\n                    t__namespace.memberExpression(elem, t__namespace.identifier(`$$${ev}`)),\n                    handler\n                  )\n                )\n              );\n            } else if (t__namespace.isFunction(handler) || resolveable) {\n              results.exprs.unshift(\n                t__namespace.expressionStatement(\n                  t__namespace.assignmentExpression(\n                    \"=\",\n                    t__namespace.memberExpression(elem, t__namespace.identifier(`$$${ev}`)),\n                    handler\n                  )\n                )\n              );\n            } else {\n              results.exprs.unshift(\n                t__namespace.expressionStatement(\n                  t__namespace.callExpression(\n                    registerImportMethod(\n                      path,\n                      \"addEventListener\",\n                      getRendererConfig(path, \"dom\").moduleName\n                    ),\n                    [elem, t__namespace.stringLiteral(ev), handler, t__namespace.booleanLiteral(true)]\n                  )\n                )\n              );\n            }\n          } else {\n            let handler = value.expression;\n            const resolveable = detectResolvableEventHandler(attribute, handler);\n            if (t__namespace.isArrayExpression(handler)) {\n              if (handler.elements.length > 1) {\n                handler = t__namespace.arrowFunctionExpression(\n                  [t__namespace.identifier(\"e\")],\n                  t__namespace.callExpression(handler.elements[0], [handler.elements[1], t__namespace.identifier(\"e\")])\n                );\n              } else handler = handler.elements[0];\n              results.exprs.unshift(\n                t__namespace.expressionStatement(\n                  t__namespace.callExpression(t__namespace.memberExpression(elem, t__namespace.identifier(\"addEventListener\")), [\n                    t__namespace.stringLiteral(ev),\n                    handler\n                  ])\n                )\n              );\n            } else if (t__namespace.isFunction(handler) || resolveable) {\n              results.exprs.unshift(\n                t__namespace.expressionStatement(\n                  t__namespace.callExpression(t__namespace.memberExpression(elem, t__namespace.identifier(\"addEventListener\")), [\n                    t__namespace.stringLiteral(ev),\n                    handler\n                  ])\n                )\n              );\n            } else {\n              results.exprs.unshift(\n                t__namespace.expressionStatement(\n                  t__namespace.callExpression(\n                    registerImportMethod(\n                      path,\n                      \"addEventListener\",\n                      getRendererConfig(path, \"dom\").moduleName\n                    ),\n                    [elem, t__namespace.stringLiteral(ev), handler]\n                  )\n                )\n              );\n            }\n          }\n        } else if (\n          config.effectWrapper &&\n          (isDynamic(attribute.get(\"value\").get(\"expression\"), {\n            checkMember: true\n          }) ||\n            ((key === \"classList\" || key === \"style\") &&\n              !attribute.get(\"value\").get(\"expression\").evaluate().confident))\n        ) {\n          let nextElem = elem;\n          if (key === \"value\" || key === \"checked\") {\n            const effectWrapperId = registerImportMethod(path, config.effectWrapper);\n            results.postExprs.push(\n              t__namespace.expressionStatement(\n                t__namespace.callExpression(effectWrapperId, [\n                  t__namespace.arrowFunctionExpression(\n                    [],\n                    setAttr$2(path, elem, key, value.expression, {\n                      tagName,\n                      isSVG,\n                      isCE\n                    })\n                  )\n                ])\n              )\n            );\n            return;\n          }\n          if (key === \"textContent\") {\n            nextElem = attribute.scope.generateUidIdentifier(\"el$\");\n            children = t__namespace.JSXText(\" \");\n            children.extra = { raw: \" \", rawValue: \" \" };\n            results.declarations.push(\n              t__namespace.variableDeclarator(nextElem, t__namespace.memberExpression(elem, t__namespace.identifier(\"firstChild\")))\n            );\n          }\n          results.dynamics.push({\n            elem: nextElem,\n            key,\n            value: value.expression,\n            isSVG,\n            isCE,\n            tagName\n          });\n        } else {\n          results.exprs.push(\n            t__namespace.expressionStatement(\n              setAttr$2(attribute, elem, key, value.expression, { isSVG, isCE, tagName })\n            )\n          );\n        }\n      } else {\n        if (config.hydratable && key === \"$ServerOnly\") {\n          results.skipTemplate = true;\n          return;\n        }\n        if (t__namespace.isJSXExpressionContainer(value)) value = value.expression;\n        key = Aliases[key] || key;\n        if (value && ChildProperties.has(key)) {\n          results.exprs.push(\n            t__namespace.expressionStatement(setAttr$2(attribute, elem, key, value, { isSVG, isCE, tagName }))\n          );\n        } else {\n          !isSVG && (key = key.toLowerCase());\n          results.template += `${needsSpacing ? ' ' : ''}${key}`;\n          if (!value) {\n            needsSpacing = true;\n            return;\n          }\n\n          let text = value.value;\n          let needsQuoting = false;\n\n          if (key === \"style\" || key === \"class\") {\n            text = trimWhitespace(text);\n            if (key === \"style\") {\n              text = text.replace(/; /g, \";\").replace(/: /g, \":\");\n            }\n          }\n\n          if (!text.length) {\n            needsSpacing = false;\n            results.template += `=\"\"`;\n            return;\n          }\n\n          for (let i = 0, len = text.length; i < len; i++) {\n            let char = text[i];\n\n            if (\n              char === \"'\" ||\n              char === '\"' ||\n              char === \" \" ||\n              char === \"\\t\" ||\n              char === \"\\n\" ||\n              char === \"\\r\" ||\n              char === \"`\" ||\n              char === \"=\" ||\n              char === \"<\" ||\n              char === \">\"\n            ) {\n              needsQuoting = true;\n            }\n          }\n\n          if (needsQuoting) {\n            needsSpacing = false;\n            results.template += `=\"${escapeBackticks(escapeHTML(text, true))}\"`;\n          } else {\n            needsSpacing = true;\n            results.template += `=${escapeBackticks(escapeHTML(text, true))}`;\n          }\n        }\n      }\n    });\n  if (!hasChildren && children) {\n    path.node.children.push(children);\n  }\n  if (spreadExpr) results.exprs.push(spreadExpr);\n\n  results.hasHydratableEvent = results.hasHydratableEvent || hasHydratableEvent;\n}\n\nfunction findLastElement(children, hydratable) {\n  let lastElement = -1,\n    tagName;\n  for (let i = children.length - 1; i >= 0; i--) {\n    const node = children[i].node;\n    if (\n      hydratable ||\n      t__namespace.isJSXText(node) ||\n      getStaticExpression(children[i]) !== false ||\n      (t__namespace.isJSXElement(node) && (tagName = getTagName(node)) && !isComponent(tagName))\n    ) {\n      lastElement = i;\n      break;\n    }\n  }\n  return lastElement;\n}\n\nfunction transformChildren$2(path, results, config) {\n  let tempPath = results.id && results.id.name,\n    tagName = getTagName(path.node),\n    nextPlaceholder,\n    i = 0;\n  const filteredChildren = filterChildren(path.get(\"children\")),\n    lastElement = findLastElement(filteredChildren, config.hydratable),\n    childNodes = filteredChildren.reduce((memo, child, index) => {\n      if (child.isJSXFragment()) {\n        throw new Error(\n          `Fragments can only be used top level in JSX. Not used under a <${tagName}>.`\n        );\n      }\n      const transformed = transformNode(child, {\n        toBeClosed: results.toBeClosed,\n        lastElement: index === lastElement,\n        skipId: !results.id || !detectExpressions(filteredChildren, index, config)\n      });\n      if (!transformed) return memo;\n      const i = memo.length;\n      if (transformed.text && i && memo[i - 1].text) {\n        memo[i - 1].template += transformed.template;\n      } else memo.push(transformed);\n      return memo;\n    }, []);\n\n  childNodes.forEach((child, index) => {\n    if (!child) return;\n    if (child.tagName && child.renderer !== \"dom\") {\n      throw new Error(`<${child.tagName}> is not supported in <${tagName}>.\n      Wrap the usage with a component that would render this element, eg. Canvas`);\n    }\n\n    results.template += child.template;\n    if (child.id) {\n      if (child.tagName === \"head\") {\n        if (config.hydratable) {\n          const createComponent = registerImportMethod(\n            path,\n            \"createComponent\",\n            getRendererConfig(path, \"dom\").moduleName\n          );\n          const NoHydration = registerImportMethod(\n            path,\n            \"NoHydration\",\n            getRendererConfig(path, \"dom\").moduleName\n          );\n          results.exprs.push(\n            t__namespace.expressionStatement(\n              t__namespace.callExpression(createComponent, [NoHydration, t__namespace.objectExpression([])])\n            )\n          );\n        }\n        return;\n      }\n\n      let getNextMatch;\n      if (config.hydratable && tagName === \"html\") {\n        getNextMatch = registerImportMethod(\n          path,\n          \"getNextMatch\",\n          getRendererConfig(path, \"dom\").moduleName\n        );\n      }\n      const walk = t__namespace.memberExpression(\n        t__namespace.identifier(tempPath),\n        t__namespace.identifier(i === 0 ? \"firstChild\" : \"nextSibling\")\n      );\n      results.declarations.push(\n        t__namespace.variableDeclarator(\n          child.id,\n          config.hydratable && tagName === \"html\"\n            ? t__namespace.callExpression(getNextMatch, [walk, t__namespace.stringLiteral(child.tagName)])\n            : walk\n        )\n      );\n      results.declarations.push(...child.declarations);\n      results.exprs.push(...child.exprs);\n      results.dynamics.push(...child.dynamics);\n      results.postExprs.push(...child.postExprs);\n      results.hasHydratableEvent = results.hasHydratableEvent || child.hasHydratableEvent;\n      results.hasCustomElement = results.hasCustomElement || child.hasCustomElement;\n      tempPath = child.id.name;\n      nextPlaceholder = null;\n      i++;\n    } else if (child.exprs.length) {\n      let insert = registerImportMethod(path, \"insert\", getRendererConfig(path, \"dom\").moduleName);\n      const multi = checkLength(filteredChildren),\n        markers = config.hydratable && multi;\n      // boxed by textNodes\n      if (markers || wrappedByText(childNodes, index)) {\n        let exprId, contentId;\n        if (markers) tempPath = createPlaceholder(path, results, tempPath, i++, \"$\")[0].name;\n        if (nextPlaceholder) {\n          exprId = nextPlaceholder;\n        } else {\n          [exprId, contentId] = createPlaceholder(path, results, tempPath, i++, markers ? \"/\" : \"\");\n        }\n        if (!markers) nextPlaceholder = exprId;\n        results.exprs.push(\n          t__namespace.expressionStatement(\n            t__namespace.callExpression(\n              insert,\n              contentId\n                ? [results.id, child.exprs[0], exprId, contentId]\n                : [results.id, child.exprs[0], exprId]\n            )\n          )\n        );\n        tempPath = exprId.name;\n      } else if (multi) {\n        results.exprs.push(\n          t__namespace.expressionStatement(\n            t__namespace.callExpression(insert, [\n              results.id,\n              child.exprs[0],\n              nextChild$1(childNodes, index) || t__namespace.nullLiteral()\n            ])\n          )\n        );\n      } else {\n        results.exprs.push(\n          t__namespace.expressionStatement(t__namespace.callExpression(insert, [results.id, child.exprs[0]]))\n        );\n      }\n    } else nextPlaceholder = null;\n  });\n}\n\nfunction createPlaceholder(path, results, tempPath, i, char) {\n  const exprId = path.scope.generateUidIdentifier(\"el$\"),\n    config = getConfig(path);\n  let contentId;\n  results.template += `<!${char}>`;\n  if (config.hydratable && char === \"/\") {\n    contentId = path.scope.generateUidIdentifier(\"co$\");\n    results.declarations.push(\n      t__namespace.variableDeclarator(\n        t__namespace.arrayPattern([exprId, contentId]),\n        t__namespace.callExpression(\n          registerImportMethod(path, \"getNextMarker\", getRendererConfig(path, \"dom\").moduleName),\n          [t__namespace.memberExpression(t__namespace.identifier(tempPath), t__namespace.identifier(\"nextSibling\"))]\n        )\n      )\n    );\n  } else\n    results.declarations.push(\n      t__namespace.variableDeclarator(\n        exprId,\n        t__namespace.memberExpression(\n          t__namespace.identifier(tempPath),\n          t__namespace.identifier(i === 0 ? \"firstChild\" : \"nextSibling\")\n        )\n      )\n    );\n  return [exprId, contentId];\n}\n\nfunction nextChild$1(children, index) {\n  return children[index + 1] && (children[index + 1].id || nextChild$1(children, index + 1));\n}\n\n// reduce unnecessary refs\nfunction detectExpressions(children, index, config) {\n  if (children[index - 1]) {\n    const node = children[index - 1].node;\n    if (\n      t__namespace.isJSXExpressionContainer(node) &&\n      !t__namespace.isJSXEmptyExpression(node.expression) &&\n      getStaticExpression(children[index - 1]) === false\n    )\n      return true;\n    let tagName;\n    if (t__namespace.isJSXElement(node) && (tagName = getTagName(node)) && isComponent(tagName)) return true;\n  }\n  for (let i = index; i < children.length; i++) {\n    const child = children[i].node;\n    if (t__namespace.isJSXExpressionContainer(child)) {\n      if (!t__namespace.isJSXEmptyExpression(child.expression) && getStaticExpression(children[i]) === false)\n        return true;\n    } else if (t__namespace.isJSXElement(child)) {\n      const tagName = getTagName(child);\n      if (isComponent(tagName)) return true;\n      if (config.contextToCustomElements && (tagName === \"slot\" || tagName.indexOf(\"-\") > -1))\n        return true;\n      if (\n        child.openingElement.attributes.some(\n          attr =>\n            t__namespace.isJSXSpreadAttribute(attr) ||\n            [\"textContent\", \"innerHTML\", \"innerText\"].includes(attr.name.name) ||\n            (attr.name.namespace && attr.name.namespace.name === \"use\") ||\n            (t__namespace.isJSXExpressionContainer(attr.value) &&\n              !(\n                t__namespace.isStringLiteral(attr.value.expression) ||\n                t__namespace.isNumericLiteral(attr.value.expression)\n              ))\n        )\n      )\n        return true;\n      const nextChildren = filterChildren(children[i].get(\"children\"));\n      if (nextChildren.length) if (detectExpressions(nextChildren, 0, config)) return true;\n    }\n  }\n}\n\nfunction contextToCustomElement(path, results) {\n  results.exprs.push(\n    t__namespace.expressionStatement(\n      t__namespace.assignmentExpression(\n        \"=\",\n        t__namespace.memberExpression(results.id, t__namespace.identifier(\"_$owner\")),\n        t__namespace.callExpression(\n          registerImportMethod(path, \"getOwner\", getRendererConfig(path, \"dom\").moduleName),\n          []\n        )\n      )\n    )\n  );\n}\n\nfunction processSpreads$1(path, attributes, { elem, isSVG, hasChildren, wrapConditionals }) {\n  // TODO: skip but collect the names of any properties after the last spread to not overwrite them\n  const filteredAttributes = [];\n  const spreadArgs = [];\n  let runningObject = [];\n  let dynamicSpread = false;\n  let firstSpread = false;\n  attributes.forEach(attribute => {\n    const node = attribute.node;\n    const key =\n      !t__namespace.isJSXSpreadAttribute(node) &&\n      (t__namespace.isJSXNamespacedName(node.name)\n        ? `${node.name.namespace.name}:${node.name.name.name}`\n        : node.name.name);\n    if (t__namespace.isJSXSpreadAttribute(node)) {\n      firstSpread = true;\n      if (runningObject.length) {\n        spreadArgs.push(t__namespace.objectExpression(runningObject));\n        runningObject = [];\n      }\n      spreadArgs.push(\n        isDynamic(attribute.get(\"argument\"), {\n          checkMember: true\n        }) && (dynamicSpread = true)\n          ? t__namespace.isCallExpression(node.argument) &&\n            !node.argument.arguments.length &&\n            !t__namespace.isCallExpression(node.argument.callee) &&\n            !t__namespace.isMemberExpression(node.argument.callee)\n            ? node.argument.callee\n            : t__namespace.arrowFunctionExpression([], node.argument)\n          : node.argument\n      );\n    } else if (\n      (firstSpread ||\n        (t__namespace.isJSXExpressionContainer(node.value) &&\n          isDynamic(attribute.get(\"value\").get(\"expression\"), { checkMember: true }))) &&\n      canNativeSpread(key, { checkNameSpaces: true })\n    ) {\n      const isContainer = t__namespace.isJSXExpressionContainer(node.value);\n      const dynamic =\n        isContainer && isDynamic(attribute.get(\"value\").get(\"expression\"), { checkMember: true });\n      if (dynamic) {\n        const id = convertJSXIdentifier(node.name);\n        let expr =\n          wrapConditionals &&\n          (t__namespace.isLogicalExpression(node.value.expression) ||\n            t__namespace.isConditionalExpression(node.value.expression))\n            ? transformCondition(attribute.get(\"value\").get(\"expression\"), true)\n            : t__namespace.arrowFunctionExpression([], node.value.expression);\n        runningObject.push(\n          t__namespace.objectMethod(\n            \"get\",\n            id,\n            [],\n            t__namespace.blockStatement([t__namespace.returnStatement(expr.body)]),\n            !t__namespace.isValidIdentifier(key)\n          )\n        );\n      } else {\n        runningObject.push(\n          t__namespace.objectProperty(\n            t__namespace.stringLiteral(key),\n            isContainer\n              ? node.value.expression\n              : node.value || (Properties.has(key) ? t__namespace.booleanLiteral(true) : t__namespace.stringLiteral(\"\"))\n          )\n        );\n      }\n    } else filteredAttributes.push(attribute);\n  });\n\n  if (runningObject.length) {\n    spreadArgs.push(t__namespace.objectExpression(runningObject));\n  }\n\n  const props =\n    spreadArgs.length === 1 && !dynamicSpread\n      ? spreadArgs[0]\n      : t__namespace.callExpression(registerImportMethod(path, \"mergeProps\"), spreadArgs);\n\n  return [\n    filteredAttributes,\n    t__namespace.expressionStatement(\n      t__namespace.callExpression(\n        registerImportMethod(path, \"spread\", getRendererConfig(path, \"dom\").moduleName),\n        [elem, props, t__namespace.booleanLiteral(isSVG), t__namespace.booleanLiteral(hasChildren)]\n      )\n    )\n  ];\n}\n\nfunction createTemplate$2(path, result, wrap) {\n  const config = getConfig(path);\n  if (result.id) {\n    registerTemplate(path, result);\n    if (\n      !(result.exprs.length || result.dynamics.length || result.postExprs.length) &&\n      result.decl.declarations.length === 1\n    ) {\n      return result.decl.declarations[0].init;\n    } else {\n      return t__namespace.callExpression(\n        t__namespace.arrowFunctionExpression(\n          [],\n          t__namespace.blockStatement([\n            result.decl,\n            ...result.exprs.concat(\n              wrapDynamics$1(path, result.dynamics) || [],\n              result.postExprs || []\n            ),\n            t__namespace.returnStatement(result.id)\n          ])\n        ),\n        []\n      );\n    }\n  }\n  if (wrap && result.dynamic && config.memoWrapper) {\n    return t__namespace.callExpression(registerImportMethod(path, config.memoWrapper), [result.exprs[0]]);\n  }\n  return result.exprs[0];\n}\n\nfunction appendTemplates$1(path, templates) {\n  const declarators = templates.map(template => {\n    const tmpl = {\n      cooked: template.template,\n      raw: template.template\n    };\n    return t__namespace.variableDeclarator(\n      template.id,\n      t__namespace.addComment(\n        t__namespace.callExpression(\n          registerImportMethod(path, \"template\", getRendererConfig(path, \"dom\").moduleName),\n          [t__namespace.templateLiteral([t__namespace.templateElement(tmpl, true)], [])].concat(\n            template.isSVG || template.isCE\n              ? [t__namespace.booleanLiteral(template.isCE), t__namespace.booleanLiteral(template.isSVG)]\n              : []\n          )\n        ),\n        \"leading\",\n        \"#__PURE__\"\n      )\n    );\n  });\n  path.node.body.unshift(t__namespace.variableDeclaration(\"const\", declarators));\n}\n\nfunction registerTemplate(path, results) {\n  const { hydratable } = getConfig(path);\n  let decl;\n  if (results.template.length) {\n    let templateDef, templateId;\n    if (!results.skipTemplate) {\n      const templates =\n        path.scope.getProgramParent().data.templates ||\n        (path.scope.getProgramParent().data.templates = []);\n      if ((templateDef = templates.find(t => t.template === results.template))) {\n        templateId = templateDef.id;\n      } else {\n        templateId = path.scope.generateUidIdentifier(\"tmpl$\");\n        templates.push({\n          id: templateId,\n          template: results.template,\n          isSVG: results.isSVG,\n          isCE: results.hasCustomElement,\n          renderer: \"dom\"\n        });\n      }\n    }\n    decl = t__namespace.variableDeclarator(\n      results.id,\n      hydratable\n        ? t__namespace.callExpression(\n            registerImportMethod(path, \"getNextElement\", getRendererConfig(path, \"dom\").moduleName),\n            templateId ? [templateId] : []\n          )\n        : t__namespace.callExpression(templateId, [])\n    );\n  }\n  results.declarations.unshift(decl);\n  results.decl = t__namespace.variableDeclaration(\"const\", results.declarations);\n}\n\nfunction wrapDynamics$1(path, dynamics) {\n  if (!dynamics.length) return;\n  const config = getConfig(path);\n\n  const effectWrapperId = registerImportMethod(path, config.effectWrapper);\n\n  if (dynamics.length === 1) {\n    const prevValue =\n      dynamics[0].key === \"classList\" || dynamics[0].key === \"style\"\n        ? t__namespace.identifier(\"_$p\")\n        : undefined;\n    if (\n      dynamics[0].key.startsWith(\"class:\") &&\n      !t__namespace.isBooleanLiteral(dynamics[0].value) &&\n      !t__namespace.isUnaryExpression(dynamics[0].value)\n    ) {\n      dynamics[0].value = t__namespace.unaryExpression(\"!\", t__namespace.unaryExpression(\"!\", dynamics[0].value));\n    }\n\n    return t__namespace.expressionStatement(\n      t__namespace.callExpression(effectWrapperId, [\n        t__namespace.arrowFunctionExpression(\n          prevValue ? [prevValue] : [],\n          setAttr$2(path, dynamics[0].elem, dynamics[0].key, dynamics[0].value, {\n            isSVG: dynamics[0].isSVG,\n            isCE: dynamics[0].isCE,\n            tagName: dynamics[0].tagName,\n            dynamic: true,\n            prevId: prevValue\n          })\n        )\n      ])\n    );\n  }\n  const declarations = [],\n    statements = [],\n    identifiers = [],\n    prevId = t__namespace.identifier(\"_p$\");\n  dynamics.forEach(({ elem, key, value, isSVG, isCE, tagName }) => {\n    const identifier = path.scope.generateUidIdentifier(\"v$\");\n    if (key.startsWith(\"class:\") && !t__namespace.isBooleanLiteral(value) && !t__namespace.isUnaryExpression(value)) {\n      value = t__namespace.unaryExpression(\"!\", t__namespace.unaryExpression(\"!\", value));\n    }\n    identifiers.push(identifier);\n    declarations.push(t__namespace.variableDeclarator(identifier, value));\n    if (key === \"classList\" || key === \"style\") {\n      const prev = t__namespace.memberExpression(prevId, identifier);\n      statements.push(\n        t__namespace.expressionStatement(\n          t__namespace.assignmentExpression(\n            \"=\",\n            prev,\n            setAttr$2(path, elem, key, identifier, {\n              isSVG,\n              isCE,\n              tagName,\n              dynamic: true,\n              prevId: prev\n            })\n          )\n        )\n      );\n    } else {\n      const prev = key.startsWith(\"style:\") ? identifier : undefined;\n      statements.push(\n        t__namespace.expressionStatement(\n          t__namespace.logicalExpression(\n            \"&&\",\n            t__namespace.binaryExpression(\"!==\", identifier, t__namespace.memberExpression(prevId, identifier)),\n            setAttr$2(\n              path,\n              elem,\n              key,\n              t__namespace.assignmentExpression(\"=\", t__namespace.memberExpression(prevId, identifier), identifier),\n              { isSVG, isCE, tagName, dynamic: true, prevId: prev }\n            )\n          )\n        )\n      );\n    }\n  });\n\n  return t__namespace.expressionStatement(\n    t__namespace.callExpression(effectWrapperId, [\n      t__namespace.arrowFunctionExpression(\n        [prevId],\n        t__namespace.blockStatement([\n          t__namespace.variableDeclaration(\"const\", declarations),\n          ...statements,\n          t__namespace.returnStatement(prevId)\n        ])\n      ),\n      t__namespace.objectExpression(identifiers.map(id => t__namespace.objectProperty(id, t__namespace.identifier(\"undefined\"))))\n    ])\n  );\n}\n\nfunction createTemplate$1(path, result) {\n  if (!result.template) {\n    return result.exprs[0];\n  }\n\n  let template, id;\n\n  if (!Array.isArray(result.template)) {\n    template = t__namespace.stringLiteral(result.template);\n  } else if (result.template.length === 1) {\n    template = t__namespace.stringLiteral(result.template[0]);\n  } else {\n    const strings = result.template.map(tmpl => t__namespace.stringLiteral(tmpl));\n    template = t__namespace.arrayExpression(strings);\n  }\n\n  const templates =\n    path.scope.getProgramParent().data.templates ||\n    (path.scope.getProgramParent().data.templates = []);\n  const found = templates.find(tmp => {\n    if (t__namespace.isArrayExpression(tmp.template) && t__namespace.isArrayExpression(template)) {\n      return tmp.template.elements.every(\n        (el, i) => template.elements[i] && el.value === template.elements[i].value\n      );\n    }\n    return tmp.template.value === template.value;\n  });\n  if (!found) {\n    id = path.scope.generateUidIdentifier(\"tmpl$\");\n    templates.push({\n      id,\n      template,\n      renderer: \"ssr\"\n    });\n  } else id = found.id;\n\n  if (result.wontEscape) {\n    if (!Array.isArray(result.template) || result.template.length === 1) return id;\n    else if (\n      Array.isArray(result.template) &&\n      result.template.length === 2 &&\n      result.templateValues[0].type === \"CallExpression\" &&\n      result.templateValues[0].callee.name === \"_$ssrHydrationKey\"\n    ) {\n      // remove unnecessary ssr call when only hydration key is used\n      return t__namespace.binaryExpression(\n        \"+\",\n        t__namespace.binaryExpression(\n          \"+\",\n          t__namespace.memberExpression(id, t__namespace.numericLiteral(0), true),\n          result.templateValues[0]\n        ),\n        t__namespace.memberExpression(id, t__namespace.numericLiteral(1), true)\n      );\n    }\n  }\n  return t__namespace.callExpression(\n    registerImportMethod(path, \"ssr\"),\n    Array.isArray(result.template) && result.template.length > 1\n      ? [id, ...result.templateValues]\n      : [id]\n  );\n}\n\nfunction appendTemplates(path, templates) {\n  const declarators = templates.map(template => {\n    return t__namespace.variableDeclarator(template.id, template.template);\n  });\n  path.node.body.unshift(t__namespace.variableDeclaration(\"const\", declarators));\n}\n\nfunction appendToTemplate(template, value) {\n  let array;\n  if (Array.isArray(value)) {\n    [value, ...array] = value;\n  }\n  template[template.length - 1] += value;\n  if (array && array.length) template.push.apply(template, array);\n}\n\nfunction transformElement$2(path, info) {\n  const config = getConfig(path);\n  // contains spread attributes\n  if (path.node.openingElement.attributes.some(a => t__namespace.isJSXSpreadAttribute(a)))\n    return createElement(path, { ...info, ...config });\n\n  const tagName = getTagName(path.node),\n    voidTag = VoidElements.indexOf(tagName) > -1,\n    results = {\n      template: [`<${tagName}`],\n      templateValues: [],\n      declarations: [],\n      exprs: [],\n      dynamics: [],\n      tagName,\n      wontEscape: path.node.wontEscape,\n      renderer: \"ssr\"\n    };\n  if (tagName === \"script\" || tagName === \"style\") path.doNotEscape = true;\n\n  if (info.topLevel && config.hydratable) {\n    if (tagName === \"head\") {\n      registerImportMethod(path, \"NoHydration\");\n      registerImportMethod(path, \"createComponent\");\n      const child = transformElement$2(path, { ...info, topLevel: false });\n      results.template = \"\";\n      results.exprs.push(\n        t__namespace.callExpression(t__namespace.identifier(\"_$createComponent\"), [\n          t__namespace.identifier(\"_$NoHydration\"),\n          t__namespace.objectExpression([\n            t__namespace.objectMethod(\n              \"get\",\n              t__namespace.identifier(\"children\"),\n              [],\n              t__namespace.blockStatement([t__namespace.returnStatement(createTemplate$1(path, child))])\n            )\n          ])\n        ])\n      );\n      return results;\n    }\n    results.template.push(\"\");\n    results.templateValues.push(\n      t__namespace.callExpression(registerImportMethod(path, \"ssrHydrationKey\"), [])\n    );\n  }\n  transformAttributes$1(path, results, { ...config, ...info });\n  appendToTemplate(results.template, \">\");\n  if (!voidTag) {\n    transformChildren$1(path, results, { ...config, ...info });\n    appendToTemplate(results.template, `</${tagName}>`);\n  }\n  return results;\n}\n\nfunction toAttribute(key, isSVG) {\n  key = Aliases[key] || key;\n  !isSVG && (key = key.toLowerCase());\n  return key;\n}\n\nfunction setAttr$1(attribute, results, name, value, isSVG) {\n  // strip out namespaces for now, everything at this point is an attribute\n  let parts;\n  if ((parts = name.split(\":\")) && parts[1] && reservedNameSpaces.has(parts[0])) {\n    name = parts[1];\n    parts[0];\n  }\n\n  name = toAttribute(name, isSVG);\n  const attr = t__namespace.callExpression(registerImportMethod(attribute, \"ssrAttribute\"), [\n    t__namespace.stringLiteral(name),\n    value,\n    t__namespace.booleanLiteral(false)\n  ]);\n  if (results.template[results.template.length - 1].length) {\n    results.template.push(\"\");\n    results.templateValues.push(attr);\n  } else {\n    const last = results.templateValues.length - 1;\n    results.templateValues[last] = t__namespace.binaryExpression(\"+\", results.templateValues[last], attr);\n  }\n}\n\nfunction escapeExpression(path, expression, attr, escapeLiterals) {\n  if (\n    t__namespace.isStringLiteral(expression) ||\n    t__namespace.isNumericLiteral(expression) ||\n    (t__namespace.isTemplateLiteral(expression) && expression.expressions.length === 0)\n  ) {\n    if (escapeLiterals) {\n      if (t__namespace.isStringLiteral(expression)) return t__namespace.stringLiteral(escapeHTML(expression.value, attr));\n      else if (t__namespace.isTemplateLiteral(expression))\n        return t__namespace.stringLiteral(escapeHTML(expression.quasis[0].value.raw, attr));\n    }\n    return expression;\n  } else if (t__namespace.isFunction(expression)) {\n    if (t__namespace.isBlockStatement(expression.body)) {\n      expression.body.body = expression.body.body.map(e => {\n        if (t__namespace.isReturnStatement(e))\n          e.argument = escapeExpression(path, e.argument, attr, escapeLiterals);\n        return e;\n      });\n    } else expression.body = escapeExpression(path, expression.body, attr, escapeLiterals);\n    return expression;\n  } else if (t__namespace.isTemplateLiteral(expression)) {\n    expression.expressions = expression.expressions.map(e =>\n      escapeExpression(path, e, attr, escapeLiterals)\n    );\n    return expression;\n  } else if (t__namespace.isUnaryExpression(expression)) {\n    return expression;\n  } else if (t__namespace.isBinaryExpression(expression)) {\n    expression.left = escapeExpression(path, expression.left, attr, escapeLiterals);\n    expression.right = escapeExpression(path, expression.right, attr, escapeLiterals);\n    return expression;\n  } else if (t__namespace.isConditionalExpression(expression)) {\n    expression.consequent = escapeExpression(path, expression.consequent, attr, escapeLiterals);\n    expression.alternate = escapeExpression(path, expression.alternate, attr, escapeLiterals);\n    return expression;\n  } else if (t__namespace.isLogicalExpression(expression)) {\n    expression.right = escapeExpression(path, expression.right, attr, escapeLiterals);\n    if (expression.operator !== \"&&\") {\n      expression.left = escapeExpression(path, expression.left, attr, escapeLiterals);\n    }\n    return expression;\n  } else if (t__namespace.isCallExpression(expression) && t__namespace.isFunction(expression.callee)) {\n    if (t__namespace.isBlockStatement(expression.callee.body)) {\n      expression.callee.body.body = expression.callee.body.body.map(e => {\n        if (t__namespace.isReturnStatement(e))\n          e.argument = escapeExpression(path, e.argument, attr, escapeLiterals);\n        return e;\n      });\n    } else\n      expression.callee.body = escapeExpression(path, expression.callee.body, attr, escapeLiterals);\n    return expression;\n  } else if (t__namespace.isJSXElement(expression) && !isComponent(getTagName(expression))) {\n    expression.wontEscape = true;\n    return expression;\n  }\n\n  return t__namespace.callExpression(\n    registerImportMethod(path, \"escape\"),\n    [expression].concat(attr ? [t__namespace.booleanLiteral(true)] : [])\n  );\n}\n\nfunction transformToObject(attrName, attributes, selectedAttributes) {\n  const properties = [];\n  const existingAttribute = attributes.find(a => a.node.name.name === attrName);\n  for (let i = 0; i < selectedAttributes.length; i++) {\n    const attr = selectedAttributes[i].node;\n    const computed = !t__namespace.isValidIdentifier(attr.name.name.name);\n    if (!computed) {\n      attr.name.name.type = \"Identifier\";\n    }\n    properties.push(\n      t__namespace.objectProperty(\n        computed ? t__namespace.stringLiteral(attr.name.name.name) : attr.name.name,\n        t__namespace.isJSXExpressionContainer(attr.value) ? attr.value.expression : attr.value\n      )\n    );\n    (existingAttribute || i) && attributes.splice(selectedAttributes[i].key, 1);\n  }\n  if (\n    existingAttribute &&\n    t__namespace.isJSXExpressionContainer(existingAttribute.node.value) &&\n    t__namespace.isObjectExpression(existingAttribute.node.value.expression)\n  ) {\n    existingAttribute.node.value.expression.properties.push(...properties);\n  } else {\n    selectedAttributes[0].node = t__namespace.jsxAttribute(\n      t__namespace.jsxIdentifier(attrName),\n      t__namespace.jsxExpressionContainer(t__namespace.objectExpression(properties))\n    );\n  }\n}\n\nfunction normalizeAttributes(path) {\n  const attributes = path.get(\"openingElement\").get(\"attributes\"),\n    styleAttributes = attributes.filter(\n      a => t__namespace.isJSXNamespacedName(a.node.name) && a.node.name.namespace.name === \"style\"\n    ),\n    classNamespaceAttributes = attributes.filter(\n      a => t__namespace.isJSXNamespacedName(a.node.name) && a.node.name.namespace.name === \"class\"\n    );\n  if (classNamespaceAttributes.length)\n    transformToObject(\"classList\", attributes, classNamespaceAttributes);\n  const classAttributes = attributes.filter(\n    a =>\n      a.node.name &&\n      (a.node.name.name === \"class\" ||\n        a.node.name.name === \"className\" ||\n        a.node.name.name === \"classList\")\n  );\n  // combine class propertoes\n  if (classAttributes.length > 1) {\n    const first = classAttributes[0].node,\n      values = [],\n      quasis = [t__namespace.TemplateElement({ raw: \"\" })];\n    for (let i = 0; i < classAttributes.length; i++) {\n      const attr = classAttributes[i].node,\n        isLast = i === classAttributes.length - 1;\n      if (!t__namespace.isJSXExpressionContainer(attr.value)) {\n        const prev = quasis.pop();\n        quasis.push(\n          t__namespace.TemplateElement({\n            raw:\n              (prev ? prev.value.raw : \"\") +\n              (i ? \" \" : \"\") +\n              `${attr.value.value}` +\n              (isLast ? \"\" : \" \")\n          })\n        );\n      } else {\n        let expr = attr.value.expression;\n        if (attr.name.name === \"classList\") {\n          if (t__namespace.isObjectExpression(expr) && !expr.properties.some(p => t__namespace.isSpreadElement(p))) {\n            transformClasslistObject(path, expr, values, quasis);\n            i && attributes.splice(attributes.indexOf(classAttributes[i]), 1);\n            continue;\n          }\n          expr = t__namespace.callExpression(registerImportMethod(path, \"ssrClassList\"), [expr]);\n        }\n        values.push(t__namespace.logicalExpression(\"||\", expr, t__namespace.stringLiteral(\"\")));\n        quasis.push(t__namespace.TemplateElement({ raw: isLast ? \"\" : \" \" }));\n      }\n      i && attributes.splice(attributes.indexOf(classAttributes[i]), 1);\n    }\n    first.name = t__namespace.JSXIdentifier(\"class\");\n    first.value = t__namespace.JSXExpressionContainer(t__namespace.TemplateLiteral(quasis, values));\n  }\n  if (styleAttributes.length) transformToObject(\"style\", attributes, styleAttributes);\n  return attributes;\n}\n\nfunction transformAttributes$1(path, results, info) {\n  const tagName = getTagName(path.node),\n    isSVG = SVGElements.has(tagName),\n    hasChildren = path.node.children.length > 0,\n    attributes = normalizeAttributes(path);\n  let children;\n\n  attributes.forEach(attribute => {\n    const node = attribute.node;\n\n    let value = node.value,\n      key = t__namespace.isJSXNamespacedName(node.name)\n        ? `${node.name.namespace.name}:${node.name.name.name}`\n        : node.name.name,\n      reservedNameSpace =\n        t__namespace.isJSXNamespacedName(node.name) && reservedNameSpaces.has(node.name.namespace.name);\n    if (\n      ((t__namespace.isJSXNamespacedName(node.name) && reservedNameSpace) || ChildProperties.has(key)) &&\n      !t__namespace.isJSXExpressionContainer(value)\n    ) {\n      node.value = value = t__namespace.JSXExpressionContainer(value || t__namespace.JSXEmptyExpression());\n    }\n\n    if (\n      t__namespace.isJSXExpressionContainer(value) &&\n      (reservedNameSpace ||\n        ChildProperties.has(key) ||\n        !(t__namespace.isStringLiteral(value.expression) || t__namespace.isNumericLiteral(value.expression) || t__namespace.isBooleanLiteral(value.expression)))\n    ) {\n      if (\n        key === \"ref\" ||\n        key.startsWith(\"use:\") ||\n        key.startsWith(\"prop:\") ||\n        key.startsWith(\"on\")\n      )\n        return;\n      else if (ChildProperties.has(key)) {\n        if (info.hydratable && key === \"textContent\" && value && value.expression) {\n          value.expression = t__namespace.logicalExpression(\"||\", value.expression, t__namespace.stringLiteral(\" \"));\n        }\n        if (key === \"innerHTML\") path.doNotEscape = true;\n        children = value;\n      } else {\n        let doEscape = true;\n        if (BooleanAttributes.has(key)) {\n          results.template.push(\"\");\n          const fn = t__namespace.callExpression(registerImportMethod(attribute, \"ssrAttribute\"), [\n            t__namespace.stringLiteral(key),\n            value.expression,\n            t__namespace.booleanLiteral(true)\n          ]);\n          results.templateValues.push(fn);\n          return;\n        }\n        if (key === \"style\") {\n          if (\n            t__namespace.isJSXExpressionContainer(value) &&\n            t__namespace.isObjectExpression(value.expression) &&\n            !value.expression.properties.some(p => t__namespace.isSpreadElement(p))\n          ) {\n            const props = value.expression.properties.map((p, i) =>\n              t__namespace.binaryExpression(\n                \"+\",\n                t__namespace.stringLiteral(\n                  (i ? \";\" : \"\") + (t__namespace.isIdentifier(p.key) ? p.key.name : p.key.value) + \":\"\n                ),\n                escapeExpression(path, p.value, true, true)\n              )\n            );\n            let res = props[0];\n            for (let i = 1; i < props.length; i++) {\n              res = t__namespace.binaryExpression(\"+\", res, props[i]);\n            }\n            value.expression = res;\n          } else {\n            value.expression = t__namespace.callExpression(registerImportMethod(path, \"ssrStyle\"), [\n              value.expression\n            ]);\n          }\n          doEscape = false;\n        }\n        if (key === \"classList\") {\n          if (\n            t__namespace.isObjectExpression(value.expression) &&\n            !value.expression.properties.some(p => t__namespace.isSpreadElement(p))\n          ) {\n            const values = [],\n              quasis = [t__namespace.TemplateElement({ raw: \"\" })];\n            transformClasslistObject(path, value.expression, values, quasis);\n            if (!values.length) value.expression = t__namespace.stringLiteral(quasis[0].value.raw);\n            else if (values.length === 1 && !quasis[0].value.raw && !quasis[1].value.raw) {\n              value.expression = values[0];\n            } else value.expression = t__namespace.templateLiteral(quasis, values);\n          } else {\n            value.expression = t__namespace.callExpression(registerImportMethod(path, \"ssrClassList\"), [\n              value.expression\n            ]);\n          }\n          key = \"class\";\n          doEscape = false;\n        }\n        if (doEscape) value.expression = escapeExpression(path, value.expression, true);\n\n        if (!doEscape || t__namespace.isLiteral(value.expression)) {\n          key = toAttribute(key, isSVG);\n          appendToTemplate(results.template, ` ${key}=\"`);\n          results.template.push(`\"`);\n          results.templateValues.push(value.expression);\n        } else setAttr$1(attribute, results, key, value.expression, isSVG);\n      }\n    } else {\n      if (key === \"$ServerOnly\") return;\n      if (t__namespace.isJSXExpressionContainer(value)) value = value.expression;\n      key = toAttribute(key, isSVG);\n      const isBoolean = BooleanAttributes.has(key);\n      if (isBoolean && value && value.value !== \"\" && !value.value) return;\n      appendToTemplate(results.template, ` ${key}`);\n      if (!value) return;\n      let text = isBoolean ? \"\" : value.value;\n      if (key === \"style\" || key === \"class\") {\n        text = trimWhitespace(text);\n        if (key === \"style\") {\n          text = text.replace(/; /g, \";\").replace(/: /g, \":\");\n        }\n      }\n      appendToTemplate(results.template, `=\"${escapeHTML(text, true)}\"`);\n    }\n  });\n  if (!hasChildren && children) {\n    path.node.children.push(children);\n  }\n}\n\nfunction transformClasslistObject(path, expr, values, quasis) {\n  expr.properties.forEach((prop, i) => {\n    const isLast = expr.properties.length - 1 === i;\n    let key = prop.key;\n    if (t__namespace.isIdentifier(prop.key) && !prop.computed) key = t__namespace.stringLiteral(key.name);\n    else if (prop.computed) {\n      key = t__namespace.callExpression(registerImportMethod(path, \"escape\"), [\n        prop.key,\n        t__namespace.booleanLiteral(true)\n      ]);\n    } else key = t__namespace.stringLiteral(escapeHTML(prop.key.value));\n    if (t__namespace.isBooleanLiteral(prop.value)) {\n      if (prop.value.value === true) {\n        if (!prop.computed) {\n          const prev = quasis.pop();\n          quasis.push(\n            t__namespace.TemplateElement({\n              raw:\n                (prev ? prev.value.raw : \"\") + (i ? \" \" : \"\") + `${key.value}` + (isLast ? \"\" : \" \")\n            })\n          );\n        } else {\n          values.push(key);\n          quasis.push(t__namespace.TemplateElement({ raw: isLast ? \"\" : \" \" }));\n        }\n      }\n    } else {\n      values.push(t__namespace.conditionalExpression(prop.value, key, t__namespace.stringLiteral(\"\")));\n      quasis.push(t__namespace.TemplateElement({ raw: isLast ? \"\" : \" \" }));\n    }\n  });\n}\n\nfunction transformChildren$1(path, results, { hydratable }) {\n  const doNotEscape = path.doNotEscape;\n  const filteredChildren = filterChildren(path.get(\"children\"));\n  const multi = checkLength(filteredChildren),\n    markers = hydratable && multi;\n  filteredChildren.forEach(node => {\n    if (t__namespace.isJSXElement(node.node) && getTagName(node.node) === \"head\") {\n      const child = transformNode(node, { doNotEscape, hydratable: false });\n      registerImportMethod(path, \"NoHydration\");\n      registerImportMethod(path, \"createComponent\");\n      results.template.push(\"\");\n      results.templateValues.push(\n        t__namespace.callExpression(t__namespace.identifier(\"_$createComponent\"), [\n          t__namespace.identifier(\"_$NoHydration\"),\n          t__namespace.objectExpression([\n            t__namespace.objectMethod(\n              \"get\",\n              t__namespace.identifier(\"children\"),\n              [],\n              t__namespace.blockStatement([t__namespace.returnStatement(createTemplate$1(path, child))])\n            )\n          ])\n        ])\n      );\n      return;\n    }\n    const child = transformNode(node, { doNotEscape });\n    if (!child) return;\n    appendToTemplate(results.template, child.template);\n    results.templateValues.push.apply(results.templateValues, child.templateValues || []);\n    if (child.exprs.length) {\n      if (!doNotEscape && !child.spreadElement)\n        child.exprs[0] = escapeExpression(path, child.exprs[0]);\n\n      // boxed by textNodes\n      if (markers && !child.spreadElement) {\n        appendToTemplate(results.template, `<!--$-->`);\n        results.template.push(\"\");\n        results.templateValues.push(child.exprs[0]);\n        appendToTemplate(results.template, `<!--/-->`);\n      } else {\n        results.template.push(\"\");\n        results.templateValues.push(child.exprs[0]);\n      }\n    }\n  });\n}\n\nfunction createElement(path, { topLevel, hydratable }) {\n  const tagName = getTagName(path.node),\n    config = getConfig(path),\n    attributes = normalizeAttributes(path);\n\n  const filteredChildren = filterChildren(path.get(\"children\")),\n    multi = checkLength(filteredChildren),\n    markers = hydratable && multi,\n    childNodes = filteredChildren.reduce((memo, path) => {\n      if (t__namespace.isJSXText(path.node)) {\n        const v = htmlEntities.decode(trimWhitespace(path.node.extra.raw));\n        if (v.length) memo.push(t__namespace.stringLiteral(v));\n      } else {\n        const child = transformNode(path);\n        if (markers && child.exprs.length && !child.spreadElement)\n          memo.push(t__namespace.stringLiteral(\"<!--$-->\"));\n        if (child.exprs.length && !child.spreadElement)\n          child.exprs[0] = escapeExpression(path, child.exprs[0]);\n        memo.push(getCreateTemplate(config, path, child)(path, child, true));\n        if (markers && child.exprs.length && !child.spreadElement)\n          memo.push(t__namespace.stringLiteral(\"<!--/-->\"));\n      }\n      return memo;\n    }, []);\n\n  let props;\n  if (attributes.length === 1) {\n    props = [attributes[0].node.argument];\n  } else {\n    props = [];\n    let runningObject = [],\n      dynamicSpread = false,\n      hasChildren = path.node.children.length > 0;\n\n    attributes.forEach(attribute => {\n      const node = attribute.node;\n      if (t__namespace.isJSXSpreadAttribute(node)) {\n        if (runningObject.length) {\n          props.push(t__namespace.objectExpression(runningObject));\n          runningObject = [];\n        }\n        props.push(\n          isDynamic(attribute.get(\"argument\"), {\n            checkMember: true\n          }) && (dynamicSpread = true)\n            ? t__namespace.isCallExpression(node.argument) &&\n              !node.argument.arguments.length &&\n              !t__namespace.isCallExpression(node.argument.callee) &&\n              !t__namespace.isMemberExpression(node.argument.callee)\n              ? node.argument.callee\n              : t__namespace.arrowFunctionExpression([], node.argument)\n            : node.argument\n        );\n      } else {\n        const value = node.value || t__namespace.booleanLiteral(true),\n          id = convertJSXIdentifier(node.name),\n          key = t__namespace.isJSXNamespacedName(node.name)\n            ? `${node.name.namespace.name}:${node.name.name.name}`\n            : node.name.name;\n\n        if (hasChildren && key === \"children\") return;\n        if (\n          key === \"ref\" ||\n          key.startsWith(\"use:\") ||\n          key.startsWith(\"prop:\") ||\n          key.startsWith(\"on\")\n        )\n          return;\n        if (t__namespace.isJSXExpressionContainer(value))\n          if (\n            isDynamic(attribute.get(\"value\").get(\"expression\"), {\n              checkMember: true,\n              checkTags: true\n            })\n          ) {\n            let expr = t__namespace.arrowFunctionExpression([], value.expression);\n            runningObject.push(\n              t__namespace.objectMethod(\n                \"get\",\n                id,\n                [],\n                t__namespace.blockStatement([t__namespace.returnStatement(expr.body)]),\n                !t__namespace.isValidIdentifier(key)\n              )\n            );\n          } else runningObject.push(t__namespace.objectProperty(id, value.expression));\n        else runningObject.push(t__namespace.objectProperty(id, value));\n      }\n    });\n\n    if (runningObject.length || !props.length) props.push(t__namespace.objectExpression(runningObject));\n\n    if (props.length > 1 || dynamicSpread) {\n      props = [t__namespace.callExpression(registerImportMethod(path, \"mergeProps\"), props)];\n    }\n  }\n\n  const exprs = [\n    t__namespace.callExpression(registerImportMethod(path, \"ssrElement\"), [\n      t__namespace.stringLiteral(tagName),\n      props[0],\n      childNodes.length\n        ? hydratable\n          ? t__namespace.arrowFunctionExpression(\n              [],\n              childNodes.length === 1 ? childNodes[0] : t__namespace.arrayExpression(childNodes)\n            )\n          : childNodes.length === 1\n          ? childNodes[0]\n          : t__namespace.arrayExpression(childNodes)\n        : t__namespace.identifier(\"undefined\"),\n      t__namespace.booleanLiteral(Boolean(topLevel && config.hydratable))\n    ])\n  ];\n  return { exprs, template: \"\", spreadElement: true };\n}\n\nfunction transformElement$1(path, info) {\n  let tagName = getTagName(path.node),\n    results = {\n      id: path.scope.generateUidIdentifier(\"el$\"),\n      declarations: [],\n      exprs: [],\n      dynamics: [],\n      postExprs: [],\n      tagName,\n      renderer: \"universal\"\n    };\n\n  results.declarations.push(\n    t__namespace.variableDeclarator(\n      results.id,\n      t__namespace.callExpression(\n        registerImportMethod(\n          path,\n          \"createElement\",\n          getRendererConfig(path, \"universal\").moduleName\n        ),\n        [t__namespace.stringLiteral(tagName)]\n      )\n    )\n  );\n\n  transformAttributes(path, results);\n  transformChildren(path, results);\n\n  return results;\n}\n\nfunction transformAttributes(path, results) {\n  let children, spreadExpr;\n  let attributes = path.get(\"openingElement\").get(\"attributes\");\n  const elem = results.id,\n    hasChildren = path.node.children.length > 0,\n    config = getConfig(path);\n\n  // preprocess spreads\n  if (attributes.some(attribute => t__namespace.isJSXSpreadAttribute(attribute.node))) {\n    [attributes, spreadExpr] = processSpreads(path, attributes, {\n      elem,\n      hasChildren,\n      wrapConditionals: config.wrapConditionals\n    });\n    path.get(\"openingElement\").set(\n      \"attributes\",\n      attributes.map(a => a.node)\n    );\n  }\n\n  path\n    .get(\"openingElement\")\n    .get(\"attributes\")\n    .forEach(attribute => {\n      const node = attribute.node;\n\n      let value = node.value,\n        key = t__namespace.isJSXNamespacedName(node.name)\n          ? `${node.name.namespace.name}:${node.name.name.name}`\n          : node.name.name,\n        reservedNameSpace = t__namespace.isJSXNamespacedName(node.name) && node.name.namespace.name === \"use\";\n      if (\n        t__namespace.isJSXNamespacedName(node.name) &&\n        reservedNameSpace &&\n        !t__namespace.isJSXExpressionContainer(value)\n      ) {\n        node.value = value = t__namespace.JSXExpressionContainer(value || t__namespace.JSXEmptyExpression());\n      }\n      if (t__namespace.isJSXExpressionContainer(value)) {\n        if (key === \"ref\") {\n          // Normalize expressions for non-null and type-as\n          while (\n            t__namespace.isTSNonNullExpression(value.expression) ||\n            t__namespace.isTSAsExpression(value.expression)\n          ) {\n            value.expression = value.expression.expression;\n          }\n          if (t__namespace.isLVal(value.expression)) {\n            const refIdentifier = path.scope.generateUidIdentifier(\"_ref$\");\n            results.exprs.unshift(\n              t__namespace.variableDeclaration(\"const\", [\n                t__namespace.variableDeclarator(refIdentifier, value.expression)\n              ]),\n              t__namespace.expressionStatement(\n                t__namespace.conditionalExpression(\n                  t__namespace.binaryExpression(\n                    \"===\",\n                    t__namespace.unaryExpression(\"typeof\", refIdentifier),\n                    t__namespace.stringLiteral(\"function\")\n                  ),\n                  t__namespace.callExpression(\n                    registerImportMethod(\n                      path,\n                      \"use\",\n                      getRendererConfig(path, \"universal\").moduleName\n                    ),\n                    [refIdentifier, elem]\n                  ),\n                  t__namespace.assignmentExpression(\"=\", value.expression, elem)\n                )\n              )\n            );\n          } else if (t__namespace.isFunction(value.expression)) {\n            results.exprs.unshift(\n              t__namespace.expressionStatement(\n                t__namespace.callExpression(\n                  registerImportMethod(\n                    path,\n                    \"use\",\n                    getRendererConfig(path, \"universal\").moduleName\n                  ),\n                  [value.expression, elem]\n                )\n              )\n            );\n          } else if (t__namespace.isCallExpression(value.expression)) {\n            const refIdentifier = path.scope.generateUidIdentifier(\"_ref$\");\n            results.exprs.unshift(\n              t__namespace.variableDeclaration(\"const\", [\n                t__namespace.variableDeclarator(refIdentifier, value.expression)\n              ]),\n              t__namespace.expressionStatement(\n                t__namespace.logicalExpression(\n                  \"&&\",\n                  t__namespace.binaryExpression(\n                    \"===\",\n                    t__namespace.unaryExpression(\"typeof\", refIdentifier),\n                    t__namespace.stringLiteral(\"function\")\n                  ),\n                  t__namespace.callExpression(\n                    registerImportMethod(\n                      path,\n                      \"use\",\n                      getRendererConfig(path, \"universal\").moduleName\n                    ),\n                    [refIdentifier, elem]\n                  )\n                )\n              )\n            );\n          }\n        } else if (key.startsWith(\"use:\")) {\n          // Some trick to treat JSXIdentifier as Identifier\n          node.name.name.type = \"Identifier\";\n          results.exprs.unshift(\n            t__namespace.expressionStatement(\n              t__namespace.callExpression(\n                registerImportMethod(path, \"use\", getRendererConfig(path, \"universal\").moduleName),\n                [\n                  node.name.name,\n                  elem,\n                  t__namespace.arrowFunctionExpression(\n                    [],\n                    t__namespace.isJSXEmptyExpression(value.expression)\n                      ? t__namespace.booleanLiteral(true)\n                      : value.expression\n                  )\n                ]\n              )\n            )\n          );\n        } else if (key === \"children\") {\n          children = value;\n        } else if (\n          config.effectWrapper &&\n          isDynamic(attribute.get(\"value\").get(\"expression\"), {\n            checkMember: true\n          })\n        ) {\n          results.dynamics.push({ elem, key, value: value.expression });\n        } else {\n          results.exprs.push(\n            t__namespace.expressionStatement(setAttr(attribute, elem, key, value.expression))\n          );\n        }\n      } else {\n        results.exprs.push(t__namespace.expressionStatement(setAttr(attribute, elem, key, value)));\n      }\n    });\n  if (spreadExpr) results.exprs.push(spreadExpr);\n  if (!hasChildren && children) {\n    path.node.children.push(children);\n  }\n}\n\nfunction setAttr(path, elem, name, value, { prevId } = {}) {\n  if (!value) value = t__namespace.booleanLiteral(true);\n  return t__namespace.callExpression(\n    registerImportMethod(path, \"setProp\", getRendererConfig(path, \"universal\").moduleName),\n    prevId ? [elem, t__namespace.stringLiteral(name), value, prevId] : [elem, t__namespace.stringLiteral(name), value]\n  );\n}\n\nfunction transformChildren(path, results) {\n  const filteredChildren = filterChildren(path.get(\"children\")),\n    multi = checkLength(filteredChildren),\n    childNodes = filteredChildren.map(transformNode).reduce((memo, child) => {\n      if (!child) return memo;\n      const i = memo.length;\n      if (child.text && i && memo[i - 1].text) {\n        memo[i - 1].template += child.template;\n      } else memo.push(child);\n      return memo;\n    }, []);\n\n  const appends = [];\n  childNodes.forEach((child, index) => {\n    if (!child) return;\n    if (child.tagName && child.renderer !== \"universal\") {\n      throw new Error(`<${child.tagName}> is not supported in <${getTagName(path.node)}>.\n        Wrap the usage with a component that would render this element, eg. Canvas`);\n    }\n    if (child.id) {\n      let insertNode = registerImportMethod(\n        path,\n        \"insertNode\",\n        getRendererConfig(path, \"universal\").moduleName\n      );\n      let insert = child.id;\n      if (child.text) {\n        let createTextNode = registerImportMethod(\n          path,\n          \"createTextNode\",\n          getRendererConfig(path, \"universal\").moduleName\n        );\n        if (multi) {\n          results.declarations.push(\n            t__namespace.variableDeclarator(\n              child.id,\n              t__namespace.callExpression(createTextNode, [\n                t__namespace.templateLiteral([t__namespace.templateElement({ raw: child.template })], [])\n              ])\n            )\n          );\n        } else\n          insert = t__namespace.callExpression(createTextNode, [\n            t__namespace.templateLiteral([t__namespace.templateElement({ raw: child.template })], [])\n          ]);\n      }\n      appends.push(t__namespace.expressionStatement(t__namespace.callExpression(insertNode, [results.id, insert])));\n      results.declarations.push(...child.declarations);\n      results.exprs.push(...child.exprs);\n      results.dynamics.push(...child.dynamics);\n    } else if (child.exprs.length) {\n      let insert = registerImportMethod(\n        path,\n        \"insert\",\n        getRendererConfig(path, \"universal\").moduleName\n      );\n      if (multi) {\n        results.exprs.push(\n          t__namespace.expressionStatement(\n            t__namespace.callExpression(insert, [\n              results.id,\n              child.exprs[0],\n              nextChild(childNodes, index) || t__namespace.nullLiteral()\n            ])\n          )\n        );\n      } else {\n        results.exprs.push(\n          t__namespace.expressionStatement(t__namespace.callExpression(insert, [results.id, child.exprs[0]]))\n        );\n      }\n    }\n  });\n  results.exprs.unshift(...appends);\n}\n\nfunction nextChild(children, index) {\n  return children[index + 1] && (children[index + 1].id || nextChild(children, index + 1));\n}\n\nfunction processSpreads(path, attributes, { elem, hasChildren, wrapConditionals }) {\n  // TODO: skip but collect the names of any properties after the last spread to not overwrite them\n  const filteredAttributes = [];\n  const spreadArgs = [];\n  let runningObject = [];\n  let dynamicSpread = false;\n  let firstSpread = false;\n  attributes.forEach(attribute => {\n    const node = attribute.node;\n    const key =\n      !t__namespace.isJSXSpreadAttribute(node) &&\n      (t__namespace.isJSXNamespacedName(node.name)\n        ? `${node.name.namespace.name}:${node.name.name.name}`\n        : node.name.name);\n    if (t__namespace.isJSXSpreadAttribute(node)) {\n      firstSpread = true;\n      if (runningObject.length) {\n        spreadArgs.push(t__namespace.objectExpression(runningObject));\n        runningObject = [];\n      }\n      spreadArgs.push(\n        isDynamic(attribute.get(\"argument\"), {\n          checkMember: true\n        }) && (dynamicSpread = true)\n          ? t__namespace.isCallExpression(node.argument) &&\n            !node.argument.arguments.length &&\n            !t__namespace.isCallExpression(node.argument.callee) &&\n            !t__namespace.isMemberExpression(node.argument.callee)\n            ? node.argument.callee\n            : t__namespace.arrowFunctionExpression([], node.argument)\n          : node.argument\n      );\n    } else if (\n      (firstSpread ||\n        (t__namespace.isJSXExpressionContainer(node.value) &&\n          isDynamic(attribute.get(\"value\").get(\"expression\"), { checkMember: true }))) &&\n      canNativeSpread(key, { checkNameSpaces: true })\n    ) {\n      const isContainer = t__namespace.isJSXExpressionContainer(node.value);\n      const dynamic =\n        isContainer && isDynamic(attribute.get(\"value\").get(\"expression\"), { checkMember: true });\n      if (dynamic) {\n        const id = convertJSXIdentifier(node.name);\n        let expr =\n          wrapConditionals &&\n          (t__namespace.isLogicalExpression(node.value.expression) ||\n            t__namespace.isConditionalExpression(node.value.expression))\n            ? transformCondition(attribute.get(\"value\").get(\"expression\"), true)\n            : t__namespace.arrowFunctionExpression([], node.value.expression);\n        runningObject.push(\n          t__namespace.objectMethod(\n            \"get\",\n            id,\n            [],\n            t__namespace.blockStatement([t__namespace.returnStatement(expr.body)]),\n            !t__namespace.isValidIdentifier(key)\n          )\n        );\n      } else {\n        runningObject.push(\n          t__namespace.objectProperty(\n            t__namespace.stringLiteral(key),\n            isContainer ? node.value.expression : node.value || t__namespace.booleanLiteral(true)\n          )\n        );\n      }\n    } else filteredAttributes.push(attribute);\n  });\n\n  if (runningObject.length) {\n    spreadArgs.push(t__namespace.objectExpression(runningObject));\n  }\n\n  const props =\n    spreadArgs.length === 1 && !dynamicSpread\n      ? spreadArgs[0]\n      : t__namespace.callExpression(registerImportMethod(path, \"mergeProps\"), spreadArgs);\n\n  return [\n    filteredAttributes,\n    t__namespace.expressionStatement(\n      t__namespace.callExpression(\n        registerImportMethod(path, \"spread\", getRendererConfig(path, \"universal\").moduleName),\n        [elem, props, t__namespace.booleanLiteral(hasChildren)]\n      )\n    )\n  ];\n}\n\nfunction createTemplate(path, result, wrap) {\n  const config = getConfig(path);\n  if (result.id) {\n    result.decl = t__namespace.variableDeclaration(\"const\", result.declarations);\n    if (\n      !(result.exprs.length || result.dynamics.length || result.postExprs.length) &&\n      result.decl.declarations.length === 1\n    ) {\n      return result.decl.declarations[0].init;\n    } else {\n      return t__namespace.callExpression(\n        t__namespace.arrowFunctionExpression(\n          [],\n          t__namespace.blockStatement([\n            result.decl,\n            ...result.exprs.concat(\n              wrapDynamics(path, result.dynamics) || [],\n              result.postExprs || []\n            ),\n            t__namespace.returnStatement(result.id)\n          ])\n        ),\n        []\n      );\n    }\n  }\n  if (wrap && result.dynamic && config.memoWrapper) {\n    return t__namespace.callExpression(registerImportMethod(path, config.memoWrapper), [result.exprs[0]]);\n  }\n  return result.exprs[0];\n}\n\nfunction wrapDynamics(path, dynamics) {\n  if (!dynamics.length) return;\n  const config = getConfig(path);\n\n  const effectWrapperId = registerImportMethod(path, config.effectWrapper);\n\n  if (dynamics.length === 1) {\n    const prevValue = t__namespace.identifier(\"_$p\");\n\n    return t__namespace.expressionStatement(\n      t__namespace.callExpression(effectWrapperId, [\n        t__namespace.arrowFunctionExpression(\n          [prevValue],\n          setAttr(path, dynamics[0].elem, dynamics[0].key, dynamics[0].value, {\n            dynamic: true,\n            prevId: prevValue\n          })\n        )\n      ])\n    );\n  }\n  const declarations = [],\n    statements = [],\n    identifiers = [],\n    prevId = t__namespace.identifier(\"_p$\");\n  dynamics.forEach(({ elem, key, value }) => {\n    const identifier = path.scope.generateUidIdentifier(\"v$\");\n    identifiers.push(identifier);\n    declarations.push(t__namespace.variableDeclarator(identifier, value));\n    const prev = t__namespace.memberExpression(prevId, identifier);\n    statements.push(\n      t__namespace.expressionStatement(\n        t__namespace.logicalExpression(\n          \"&&\",\n          t__namespace.binaryExpression(\"!==\", identifier, t__namespace.memberExpression(prevId, identifier)),\n          t__namespace.assignmentExpression(\"=\", t__namespace.memberExpression(prevId, identifier), setAttr(\n            path,\n            elem,\n            key,\n            identifier,\n            { dynamic: true, prevId: prev }\n          ))\n        )\n      )\n    );\n  });\n\n  return t__namespace.expressionStatement(\n    t__namespace.callExpression(effectWrapperId, [\n      t__namespace.arrowFunctionExpression(\n        [prevId],\n        t__namespace.blockStatement([\n          t__namespace.variableDeclaration(\"const\", declarations),\n          ...statements,\n          t__namespace.returnStatement(prevId)\n        ])\n      ),\n      t__namespace.objectExpression(identifiers.map(id => t__namespace.objectProperty(id, t__namespace.identifier(\"undefined\"))))\n    ])\n  );\n}\n\nfunction convertComponentIdentifier(node) {\n  if (t__namespace.isJSXIdentifier(node)) {\n    if (t__namespace.isValidIdentifier(node.name)) node.type = \"Identifier\";\n    else return t__namespace.stringLiteral(node.name);\n  } else if (t__namespace.isJSXMemberExpression(node)) {\n    const prop = convertComponentIdentifier(node.property);\n    const computed = t__namespace.isStringLiteral(prop);\n    return t__namespace.memberExpression(convertComponentIdentifier(node.object), prop, computed);\n  }\n\n  return node;\n}\n\nfunction transformComponent(path) {\n  let exprs = [],\n    config = getConfig(path),\n    tagId = convertComponentIdentifier(path.node.openingElement.name),\n    props = [],\n    runningObject = [],\n    dynamicSpread = false,\n    hasChildren = path.node.children.length > 0;\n\n  if (config.builtIns.indexOf(tagId.name) > -1 && !path.scope.hasBinding(tagId.name)) {\n    const newTagId = registerImportMethod(path, tagId.name);\n    tagId.name = newTagId.name;\n  }\n\n  path\n    .get(\"openingElement\")\n    .get(\"attributes\")\n    .forEach(attribute => {\n      const node = attribute.node;\n      if (t__namespace.isJSXSpreadAttribute(node)) {\n        if (runningObject.length) {\n          props.push(t__namespace.objectExpression(runningObject));\n          runningObject = [];\n        }\n        props.push(\n          isDynamic(attribute.get(\"argument\"), {\n            checkMember: true\n          }) && (dynamicSpread = true)\n            ? t__namespace.isCallExpression(node.argument) &&\n              !node.argument.arguments.length &&\n              !t__namespace.isCallExpression(node.argument.callee) &&\n              !t__namespace.isMemberExpression(node.argument.callee)\n              ? node.argument.callee\n              : t__namespace.arrowFunctionExpression([], node.argument)\n            : node.argument\n        );\n      } else {\n        // handle weird babel bug around HTML entities\n        const value = (t__namespace.isStringLiteral(node.value) ? t__namespace.stringLiteral(node.value.value): node.value) || t__namespace.booleanLiteral(true),\n          id = convertJSXIdentifier(node.name),\n          key = id.name;\n        if (hasChildren && key === \"children\") return;\n        if (t__namespace.isJSXExpressionContainer(value))\n          if (key === \"ref\") {\n            if (config.generate === \"ssr\") return;\n            // Normalize expressions for non-null and type-as\n            while (\n              t__namespace.isTSNonNullExpression(value.expression) ||\n              t__namespace.isTSAsExpression(value.expression) ||\n              t__namespace.isTSSatisfiesExpression(value.expression)\n            ) {\n              value.expression = value.expression.expression;\n            }\n            let binding,\n              isFunction =\n                t__namespace.isIdentifier(value.expression) &&\n                (binding = path.scope.getBinding(value.expression.name)) &&\n                binding.kind === \"const\";\n            if (!isFunction && t__namespace.isLVal(value.expression)) {\n              const refIdentifier = path.scope.generateUidIdentifier(\"_ref$\");\n              runningObject.push(\n                t__namespace.objectMethod(\n                  \"method\",\n                  t__namespace.identifier(\"ref\"),\n                  [t__namespace.identifier(\"r$\")],\n                  t__namespace.blockStatement([\n                    t__namespace.variableDeclaration(\"const\", [\n                      t__namespace.variableDeclarator(refIdentifier, value.expression)\n                    ]),\n                    t__namespace.expressionStatement(\n                      t__namespace.conditionalExpression(\n                        t__namespace.binaryExpression(\n                          \"===\",\n                          t__namespace.unaryExpression(\"typeof\", refIdentifier),\n                          t__namespace.stringLiteral(\"function\")\n                        ),\n                        t__namespace.callExpression(refIdentifier, [t__namespace.identifier(\"r$\")]),\n                        t__namespace.assignmentExpression(\"=\", value.expression, t__namespace.identifier(\"r$\"))\n                      )\n                    )\n                  ])\n                )\n              );\n            } else if (isFunction || t__namespace.isFunction(value.expression)) {\n              runningObject.push(t__namespace.objectProperty(t__namespace.identifier(\"ref\"), value.expression));\n            } else if (t__namespace.isCallExpression(value.expression)) {\n              const refIdentifier = path.scope.generateUidIdentifier(\"_ref$\");\n              runningObject.push(\n                t__namespace.objectMethod(\n                  \"method\",\n                  t__namespace.identifier(\"ref\"),\n                  [t__namespace.identifier(\"r$\")],\n                  t__namespace.blockStatement([\n                    t__namespace.variableDeclaration(\"const\", [\n                      t__namespace.variableDeclarator(refIdentifier, value.expression)\n                    ]),\n                    t__namespace.expressionStatement(\n                      t__namespace.logicalExpression(\n                        \"&&\",\n                        t__namespace.binaryExpression(\n                          \"===\",\n                          t__namespace.unaryExpression(\"typeof\", refIdentifier),\n                          t__namespace.stringLiteral(\"function\")\n                        ),\n                        t__namespace.callExpression(refIdentifier, [t__namespace.identifier(\"r$\")])\n                      )\n                    )\n                  ])\n                )\n              );\n            }\n          } else if (\n            isDynamic(attribute.get(\"value\").get(\"expression\"), {\n              checkMember: true,\n              checkTags: true\n            })\n          ) {\n            if (\n              config.wrapConditionals &&\n              config.generate !== \"ssr\" &&\n              (t__namespace.isLogicalExpression(value.expression) ||\n                t__namespace.isConditionalExpression(value.expression))\n            ) {\n              const expr = transformCondition(attribute.get(\"value\").get(\"expression\"), true);\n\n              runningObject.push(\n                t__namespace.objectMethod(\n                  \"get\",\n                  id,\n                  [],\n                  t__namespace.blockStatement([t__namespace.returnStatement(expr.body)]),\n                  !t__namespace.isValidIdentifier(key)\n                )\n              );\n            } else if (\n              t__namespace.isCallExpression(value.expression) &&\n              t__namespace.isArrowFunctionExpression(value.expression.callee)\n            ) {\n              const callee = value.expression.callee;\n              const body = t__namespace.isBlockStatement(callee.body)\n                ? callee.body\n                : t__namespace.blockStatement([t__namespace.returnStatement(callee.body)]);\n\n              runningObject.push(t__namespace.objectMethod(\"get\", id, [], body, !t__namespace.isValidIdentifier(key)));\n            } else {\n              runningObject.push(\n                t__namespace.objectMethod(\n                  \"get\",\n                  id,\n                  [],\n                  t__namespace.blockStatement([t__namespace.returnStatement(value.expression)]),\n                  !t__namespace.isValidIdentifier(key)\n                )\n              );\n            }\n          } else runningObject.push(t__namespace.objectProperty(id, value.expression));\n        else runningObject.push(t__namespace.objectProperty(id, value));\n      }\n    });\n\n  const childResult = transformComponentChildren(path.get(\"children\"), config);\n  if (childResult && childResult[0]) {\n    if (childResult[1]) {\n      const body =\n        t__namespace.isCallExpression(childResult[0]) && t__namespace.isFunction(childResult[0].arguments[0])\n          ? childResult[0].arguments[0].body\n          : childResult[0].body ? childResult[0].body : childResult[0];\n      runningObject.push(\n        t__namespace.objectMethod(\n          \"get\",\n          t__namespace.identifier(\"children\"),\n          [],\n          t__namespace.isExpression(body) ? t__namespace.blockStatement([t__namespace.returnStatement(body)]) : body\n        )\n      );\n    } else runningObject.push(t__namespace.objectProperty(t__namespace.identifier(\"children\"), childResult[0]));\n  }\n  if (runningObject.length || !props.length) props.push(t__namespace.objectExpression(runningObject));\n\n  if (props.length > 1 || dynamicSpread) {\n    props = [t__namespace.callExpression(registerImportMethod(path, \"mergeProps\"), props)];\n  }\n  const componentArgs = [tagId, props[0]];\n  exprs.push(t__namespace.callExpression(registerImportMethod(path, \"createComponent\"), componentArgs));\n\n  // handle hoisting conditionals\n  if (exprs.length > 1) {\n    const ret = exprs.pop();\n    exprs = [\n      t__namespace.callExpression(\n        t__namespace.arrowFunctionExpression([], t__namespace.blockStatement([...exprs, t__namespace.returnStatement(ret)])),\n        []\n      )\n    ];\n  }\n  return { exprs, template: \"\", component: true };\n}\n\nfunction transformComponentChildren(children, config) {\n  const filteredChildren = filterChildren(children);\n  if (!filteredChildren.length) return;\n  let dynamic = false;\n  let pathNodes = [];\n\n  let transformedChildren = filteredChildren.reduce((memo, path) => {\n    if (t__namespace.isJSXText(path.node)) {\n      const v = htmlEntities.decode(trimWhitespace(path.node.extra.raw));\n      if (v.length) {\n        pathNodes.push(path.node);\n        memo.push(t__namespace.stringLiteral(v));\n      }\n    } else {\n      const child = transformNode(path, {\n        topLevel: true,\n        componentChild: true,\n        lastElement: true\n      });\n      dynamic = dynamic || child.dynamic;\n      if (\n        config.generate === \"ssr\" &&\n        filteredChildren.length > 1 &&\n        child.dynamic &&\n        t__namespace.isFunction(child.exprs[0])\n      ) {\n        child.exprs[0] = child.exprs[0].body;\n      }\n      pathNodes.push(path.node);\n      memo.push(getCreateTemplate(config, path, child)(path, child, filteredChildren.length > 1));\n    }\n    return memo;\n  }, []);\n\n  if (transformedChildren.length === 1) {\n    transformedChildren = transformedChildren[0];\n    if (\n      !t__namespace.isJSXExpressionContainer(pathNodes[0]) &&\n      !t__namespace.isJSXSpreadChild(pathNodes[0]) &&\n      !t__namespace.isJSXText(pathNodes[0])\n    ) {\n      transformedChildren =\n        t__namespace.isCallExpression(transformedChildren) &&\n        !transformedChildren.arguments.length &&\n        !t__namespace.isIdentifier(transformedChildren.callee)\n          ? transformedChildren.callee\n          : t__namespace.arrowFunctionExpression([], transformedChildren);\n      dynamic = true;\n    }\n  } else {\n    transformedChildren = t__namespace.arrowFunctionExpression([], t__namespace.arrayExpression(transformedChildren));\n    dynamic = true;\n  }\n  return [transformedChildren, dynamic];\n}\n\nfunction transformFragmentChildren(children, results, config) {\n  const filteredChildren = filterChildren(children),\n    childNodes = filteredChildren.reduce((memo, path) => {\n      if (t__namespace.isJSXText(path.node)) {\n        const v = htmlEntities.decode(trimWhitespace(path.node.extra.raw));\n        if (v.length) memo.push(t__namespace.stringLiteral(v));\n      } else {\n        const child = transformNode(path, { topLevel: true, fragmentChild: true, lastElement: true });\n        memo.push(getCreateTemplate(config, path, child)(path, child, true));\n      }\n      return memo;\n    }, []);\n  results.exprs.push(childNodes.length === 1 ? childNodes[0] : t__namespace.arrayExpression(childNodes));\n}\n\nfunction transformJSX(path) {\n  const config = getConfig(path);\n  const replace = transformThis(path);\n  const result = transformNode(\n    path,\n    t__namespace.isJSXFragment(path.node)\n      ? {}\n      : {\n          topLevel: true,\n          lastElement: true\n        }\n  );\n\n  const template = getCreateTemplate(config, path, result);\n\n  path.replaceWith(replace(template(path, result, false)));\n}\n\nfunction transformThis(path) {\n  let thisId;\n  path.traverse({\n    ThisExpression(path) {\n      thisId || (thisId = path.scope.generateUidIdentifier(\"self$\"));\n      path.replaceWith(thisId);\n    }\n  });\n  return node => {\n    if (thisId) {\n      let parent = path.getStatementParent();\n      const decl = t__namespace.variableDeclaration(\"const\", [\n        t__namespace.variableDeclarator(thisId, t__namespace.thisExpression())\n      ]);\n      parent.insertBefore(decl);\n    }\n    return node;\n  };\n}\n\nfunction transformNode(path, info = {}) {\n  const config = getConfig(path);\n  const node = path.node;\n  let staticValue;\n  if (t__namespace.isJSXElement(node)) {\n    return transformElement(config, path, info);\n  } else if (t__namespace.isJSXFragment(node)) {\n    let results = { template: \"\", declarations: [], exprs: [], dynamics: [] };\n    // <><div /><Component /></>\n    transformFragmentChildren(path.get(\"children\"), results, config);\n    return results;\n  } else if (t__namespace.isJSXText(node) || (staticValue = getStaticExpression(path)) !== false) {\n    const text =\n      staticValue !== undefined\n        ? info.doNotEscape\n          ? staticValue.toString()\n          : escapeHTML(staticValue.toString())\n        : trimWhitespace(node.extra.raw);\n    if (!text.length) return null;\n    const results = {\n      template: config.generate === \"ssr\" ? text : escapeBackticks(text),\n      declarations: [],\n      exprs: [],\n      dynamics: [],\n      postExprs: [],\n      text: true\n    };\n    if (!info.skipId && config.generate !== \"ssr\")\n      results.id = path.scope.generateUidIdentifier(\"el$\");\n    return results;\n  } else if (t__namespace.isJSXExpressionContainer(node)) {\n    if (t__namespace.isJSXEmptyExpression(node.expression)) return null;\n    if (\n      !isDynamic(path.get(\"expression\"), {\n        checkMember: true,\n        checkTags: !!info.componentChild,\n        native: !info.componentChild\n      })\n    ) {\n      return { exprs: [node.expression], template: \"\" };\n    }\n    const expr =\n      config.wrapConditionals &&\n      config.generate !== \"ssr\" &&\n      (t__namespace.isLogicalExpression(node.expression) || t__namespace.isConditionalExpression(node.expression))\n        ? transformCondition(path.get(\"expression\"), info.componentChild)\n        : !info.componentChild &&\n          (config.generate !== \"ssr\" || info.fragmentChild) &&\n          t__namespace.isCallExpression(node.expression) &&\n          !t__namespace.isMemberExpression(node.expression.callee) &&\n          node.expression.arguments.length === 0\n        ? node.expression.callee\n        : t__namespace.arrowFunctionExpression([], node.expression);\n    return {\n      exprs:\n        expr.length > 1\n          ? [\n              t__namespace.callExpression(\n                t__namespace.arrowFunctionExpression(\n                  [],\n                  t__namespace.blockStatement([expr[0], t__namespace.returnStatement(expr[1])])\n                ),\n                []\n              )\n            ]\n          : [expr],\n      template: \"\",\n      dynamic: true\n    };\n  } else if (t__namespace.isJSXSpreadChild(node)) {\n    if (\n      !isDynamic(path.get(\"expression\"), {\n        checkMember: true,\n        native: !info.componentChild\n      })\n    )\n      return { exprs: [node.expression], template: \"\" };\n    const expr = t__namespace.arrowFunctionExpression([], node.expression);\n    return {\n      exprs: [expr],\n      template: \"\",\n      dynamic: true\n    };\n  }\n}\n\nfunction getCreateTemplate(config, path, result) {\n  if ((result.tagName && result.renderer === \"dom\") || config.generate === \"dom\") {\n    return createTemplate$2;\n  }\n\n  if (result.renderer === \"ssr\" || config.generate === \"ssr\") {\n    return createTemplate$1;\n  }\n\n  return createTemplate;\n}\n\nfunction transformElement(config, path, info = {}) {\n  const node = path.node;\n  let tagName = getTagName(node);\n  // <Component ...></Component>\n  if (isComponent(tagName)) return transformComponent(path);\n\n  // <div ...></div>\n  // const element = getTransformElemet(config, path, tagName);\n\n  const tagRenderer = (config.renderers ?? []).find(renderer =>\n    renderer.elements.includes(tagName)\n  );\n\n  if (tagRenderer?.name === \"dom\" || getConfig(path).generate === \"dom\") {\n    return transformElement$3(path, info);\n  }\n\n  if (getConfig(path).generate === \"ssr\") {\n    return transformElement$2(path, info);\n  }\n\n  return transformElement$1(path);\n}\n\n// add to the top/bottom of the module.\nvar postprocess = path => {\n  if (path.scope.data.events) {\n    path.node.body.push(\n      t__namespace.expressionStatement(\n        t__namespace.callExpression(\n          registerImportMethod(path, \"delegateEvents\", getRendererConfig(path, \"dom\").moduleName),\n          [t__namespace.arrayExpression(Array.from(path.scope.data.events).map(e => t__namespace.stringLiteral(e)))]\n        )\n      )\n    );\n  }\n  if (path.scope.data.templates?.length) {\n    let domTemplates = path.scope.data.templates.filter(temp => temp.renderer === \"dom\");\n    let ssrTemplates = path.scope.data.templates.filter(temp => temp.renderer === \"ssr\");\n    domTemplates.length > 0 && appendTemplates$1(path, domTemplates);\n    ssrTemplates.length > 0 && appendTemplates(path, ssrTemplates);\n  }\n};\n\nvar config = {\n  moduleName: \"dom\",\n  generate: \"dom\",\n  hydratable: false,\n  delegateEvents: true,\n  delegatedEvents: [],\n  builtIns: [],\n  requireImportSource: false,\n  wrapConditionals: true,\n  omitNestedClosingTags: false,\n  contextToCustomElements: false,\n  staticMarker: \"@once\",\n  effectWrapper: \"effect\",\n  memoWrapper: \"memo\",\n  validate: true\n};\n\nconst { isValidHTMLNesting } = require(\"validate-html-nesting\");\n\n// From https://github.com/MananTank/babel-plugin-validate-jsx-nesting/blob/main/src/index.js\nconst JSXValidator = {\n  JSXElement(path) {\n    const elName = path.node.openingElement.name;\n    const parent = path.parent;\n    if (!t__namespace.isJSXElement(parent) || !t__namespace.isJSXIdentifier(elName)) return;\n    const elTagName = elName.name;\n    if (isComponent(elTagName)) return;\n    const parentElName = parent.openingElement.name;\n    if (!t__namespace.isJSXIdentifier(parentElName)) return;\n    const parentElTagName = parentElName.name;\n    if (!isComponent(parentElTagName)) {\n      if (!isValidHTMLNesting(parentElTagName, elTagName)) {\n        throw path.buildCodeFrameError(\n          `Invalid JSX: <${elTagName}> cannot be child of <${parentElTagName}>`\n        );\n      }\n    }\n  }\n};\n\nvar preprocess = (path, { opts }) => {\n  const merged = (path.hub.file.metadata.config = Object.assign({}, config, opts));\n  const lib = merged.requireImportSource;\n  if (lib) {\n    const comments = path.hub.file.ast.comments;\n    let process = false;\n    for (let i = 0; i < comments.length; i++) {\n      const comment = comments[i];\n      const index = comment.value.indexOf(\"@jsxImportSource\");\n      if (index > -1 && comment.value.slice(index).includes(lib)) {\n        process = true;\n        break;\n      }\n    }\n    if (!process) {\n      path.skip();\n      return;\n    }\n  }\n  if (merged.validate) path.traverse(JSXValidator);\n};\n\nvar index = () => {\n  return {\n    name: \"JSX DOM Expressions\",\n    inherits: SyntaxJSX.default,\n    visitor: {\n      JSXElement: transformJSX,\n      JSXFragment: transformJSX,\n      Program: {\n        enter: preprocess,\n        exit: postprocess\n      }\n    }\n  };\n};\n\nmodule.exports = index;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\nvar _default = (0, _helperPluginUtils.declare)(api => {\n  api.assertVersion(7);\n  return {\n    name: \"syntax-jsx\",\n    manipulateOptions(opts, parserOpts) {\n      {\n        if (parserOpts.plugins.some(p => (Array.isArray(p) ? p[0] : p) === \"typescript\")) {\n          return;\n        }\n      }\n      parserOpts.plugins.push(\"jsx\");\n    }\n  };\n});\nexports.default = _default;\n\n//# sourceMappingURL=index.js.map\n","import { declare } from \"@babel/helper-plugin-utils\";\n\nexport default declare(api => {\n  api.assertVersion(7);\n\n  return {\n    name: \"syntax-jsx\",\n\n    manipulateOptions(opts, parserOpts) {\n      if (!process.env.BABEL_8_BREAKING) {\n        // If the Typescript plugin already ran, it will have decided whether\n        // or not this is a TSX file.\n        if (\n          parserOpts.plugins.some(\n            p => (Array.isArray(p) ? p[0] : p) === \"typescript\",\n          )\n        ) {\n          return;\n        }\n      }\n\n      parserOpts.plugins.push(\"jsx\");\n    },\n  };\n});\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.declare = declare;\nexports.declarePreset = void 0;\nconst apiPolyfills = {\n  assertVersion: api => range => {\n    throwVersionError(range, api.version);\n  }\n};\n{\n  Object.assign(apiPolyfills, {\n    targets: () => () => {\n      return {};\n    },\n    assumption: () => () => {\n      return undefined;\n    }\n  });\n}\nfunction declare(builder) {\n  return (api, options, dirname) => {\n    var _clonedApi2;\n    let clonedApi;\n    for (const name of Object.keys(apiPolyfills)) {\n      var _clonedApi;\n      if (api[name]) continue;\n      (_clonedApi = clonedApi) != null ? _clonedApi : clonedApi = copyApiObject(api);\n      clonedApi[name] = apiPolyfills[name](clonedApi);\n    }\n    return builder((_clonedApi2 = clonedApi) != null ? _clonedApi2 : api, options || {}, dirname);\n  };\n}\nconst declarePreset = declare;\nexports.declarePreset = declarePreset;\nfunction copyApiObject(api) {\n  let proto = null;\n  if (typeof api.version === \"string\" && /^7\\./.test(api.version)) {\n    proto = Object.getPrototypeOf(api);\n    if (proto && (!has(proto, \"version\") || !has(proto, \"transform\") || !has(proto, \"template\") || !has(proto, \"types\"))) {\n      proto = null;\n    }\n  }\n  return Object.assign({}, proto, api);\n}\nfunction has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\nfunction throwVersionError(range, version) {\n  if (typeof range === \"number\") {\n    if (!Number.isInteger(range)) {\n      throw new Error(\"Expected string or integer value.\");\n    }\n    range = `^${range}.0.0-0`;\n  }\n  if (typeof range !== \"string\") {\n    throw new Error(\"Expected string or integer value.\");\n  }\n  const limit = Error.stackTraceLimit;\n  if (typeof limit === \"number\" && limit < 25) {\n    Error.stackTraceLimit = 25;\n  }\n  let err;\n  if (version.slice(0, 2) === \"7.\") {\n    err = new Error(`Requires Babel \"^7.0.0-beta.41\", but was loaded with \"${version}\". ` + `You'll need to update your @babel/core version.`);\n  } else {\n    err = new Error(`Requires Babel \"${range}\", but was loaded with \"${version}\". ` + `If you are sure you have a compatible version of @babel/core, ` + `it is likely that something in your build process is loading the ` + `wrong version. Inspect the stack trace of this error to look for ` + `the first entry that doesn't mention \"@babel/core\" or \"babel-core\" ` + `to see what is calling Babel.`);\n  }\n  if (typeof limit === \"number\") {\n    Error.stackTraceLimit = limit;\n  }\n  throw Object.assign(err, {\n    code: \"BABEL_VERSION_UNSUPPORTED\",\n    version,\n    range\n  });\n}\n\n//# sourceMappingURL=index.js.map\n","import type {\n  PluginAPI,\n  PluginObject,\n  PluginPass,\n  PresetAPI,\n  PresetObject,\n} from \"@babel/core\";\n\ntype APIPolyfillFactory<T extends keyof PluginAPI> = (\n  api: PluginAPI,\n) => PluginAPI[T];\n\ntype APIPolyfills = {\n  assertVersion: APIPolyfillFactory<\"assertVersion\">;\n};\n\nconst apiPolyfills: APIPolyfills = {\n  // Not supported by Babel 7 and early versions of Babel 7 beta.\n  // It's important that this is polyfilled for older Babel versions\n  // since it's needed to report the version mismatch.\n  assertVersion: (api: PluginAPI) => (range: number | string) => {\n    throwVersionError(range, api.version);\n  },\n};\nif (!process.env.BABEL_8_BREAKING) {\n  Object.assign(apiPolyfills, {\n    // This is supported starting from Babel 7.13\n    targets: () => () => {\n      return {};\n    },\n    // This is supported starting from Babel 7.13\n    assumption: () => () => {\n      return undefined;\n    },\n  });\n}\n\nexport function declare<State = {}, Option = {}>(\n  builder: (\n    api: PluginAPI,\n    options: Option,\n    dirname: string,\n  ) => PluginObject<State & PluginPass>,\n): (\n  api: PluginAPI,\n  options: Option,\n  dirname: string,\n) => PluginObject<State & PluginPass> {\n  return (api, options: Option, dirname: string) => {\n    let clonedApi: PluginAPI;\n\n    for (const name of Object.keys(\n      apiPolyfills,\n    ) as (keyof typeof apiPolyfills)[]) {\n      if (api[name]) continue;\n\n      clonedApi ??= copyApiObject(api);\n      clonedApi[name] = apiPolyfills[name](clonedApi);\n    }\n\n    // @ts-expect-error options || {} may not be assigned to Options\n    return builder(clonedApi ?? api, options || {}, dirname);\n  };\n}\n\nexport const declarePreset = declare as <Option = {}>(\n  builder: (api: PresetAPI, options: Option, dirname: string) => PresetObject,\n) => (api: PresetAPI, options: Option, dirname: string) => PresetObject;\n\nfunction copyApiObject(api: PluginAPI): PluginAPI {\n  // Babel >= 7 <= beta.41 passed the API as a new object that had\n  // babel/core as the prototype. While slightly faster, it also\n  // means that the Object.assign copy below fails. Rather than\n  // keep complexity, the Babel 6 behavior has been reverted and this\n  // normalizes all that for Babel 7.\n  let proto = null;\n  if (typeof api.version === \"string\" && /^7\\./.test(api.version)) {\n    proto = Object.getPrototypeOf(api);\n    if (\n      proto &&\n      (!has(proto, \"version\") ||\n        !has(proto, \"transform\") ||\n        !has(proto, \"template\") ||\n        !has(proto, \"types\"))\n    ) {\n      proto = null;\n    }\n  }\n\n  return {\n    ...proto,\n    ...api,\n  };\n}\n\nfunction has(obj: {}, key: string) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nfunction throwVersionError(range: string | number, version: string) {\n  if (typeof range === \"number\") {\n    if (!Number.isInteger(range)) {\n      throw new Error(\"Expected string or integer value.\");\n    }\n    range = `^${range}.0.0-0`;\n  }\n  if (typeof range !== \"string\") {\n    throw new Error(\"Expected string or integer value.\");\n  }\n\n  const limit = Error.stackTraceLimit;\n\n  if (typeof limit === \"number\" && limit < 25) {\n    // Bump up the limit if needed so that users are more likely\n    // to be able to see what is calling Babel.\n    Error.stackTraceLimit = 25;\n  }\n\n  let err;\n  if (version.slice(0, 2) === \"7.\") {\n    err = new Error(\n      `Requires Babel \"^7.0.0-beta.41\", but was loaded with \"${version}\". ` +\n        `You'll need to update your @babel/core version.`,\n    );\n  } else {\n    err = new Error(\n      `Requires Babel \"${range}\", but was loaded with \"${version}\". ` +\n        `If you are sure you have a compatible version of @babel/core, ` +\n        `it is likely that something in your build process is loading the ` +\n        `wrong version. Inspect the stack trace of this error to look for ` +\n        `the first entry that doesn't mention \"@babel/core\" or \"babel-core\" ` +\n        `to see what is calling Babel.`,\n    );\n  }\n\n  if (typeof limit === \"number\") {\n    Error.stackTraceLimit = limit;\n  }\n\n  throw Object.assign(err, {\n    code: \"BABEL_VERSION_UNSUPPORTED\",\n    version,\n    range,\n  } as any);\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"ImportInjector\", {\n  enumerable: true,\n  get: function () {\n    return _importInjector.default;\n  }\n});\nexports.addDefault = addDefault;\nexports.addNamed = addNamed;\nexports.addNamespace = addNamespace;\nexports.addSideEffect = addSideEffect;\nObject.defineProperty(exports, \"isModule\", {\n  enumerable: true,\n  get: function () {\n    return _isModule.default;\n  }\n});\n\nvar _importInjector = require(\"./import-injector\");\n\nvar _isModule = require(\"./is-module\");\n\nfunction addDefault(path, importedSource, opts) {\n  return new _importInjector.default(path).addDefault(importedSource, opts);\n}\n\nfunction addNamed(path, name, importedSource, opts) {\n  return new _importInjector.default(path).addNamed(name, importedSource, opts);\n}\n\nfunction addNamespace(path, importedSource, opts) {\n  return new _importInjector.default(path).addNamespace(importedSource, opts);\n}\n\nfunction addSideEffect(path, importedSource, opts) {\n  return new _importInjector.default(path).addSideEffect(importedSource, opts);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _assert = require(\"assert\");\n\nvar _t = require(\"@babel/types\");\n\nvar _importBuilder = require(\"./import-builder\");\n\nvar _isModule = require(\"./is-module\");\n\nconst {\n  numericLiteral,\n  sequenceExpression\n} = _t;\n\nclass ImportInjector {\n  constructor(path, importedSource, opts) {\n    this._defaultOpts = {\n      importedSource: null,\n      importedType: \"commonjs\",\n      importedInterop: \"babel\",\n      importingInterop: \"babel\",\n      ensureLiveReference: false,\n      ensureNoContext: false,\n      importPosition: \"before\"\n    };\n    const programPath = path.find(p => p.isProgram());\n    this._programPath = programPath;\n    this._programScope = programPath.scope;\n    this._hub = programPath.hub;\n    this._defaultOpts = this._applyDefaults(importedSource, opts, true);\n  }\n\n  addDefault(importedSourceIn, opts) {\n    return this.addNamed(\"default\", importedSourceIn, opts);\n  }\n\n  addNamed(importName, importedSourceIn, opts) {\n    _assert(typeof importName === \"string\");\n\n    return this._generateImport(this._applyDefaults(importedSourceIn, opts), importName);\n  }\n\n  addNamespace(importedSourceIn, opts) {\n    return this._generateImport(this._applyDefaults(importedSourceIn, opts), null);\n  }\n\n  addSideEffect(importedSourceIn, opts) {\n    return this._generateImport(this._applyDefaults(importedSourceIn, opts), void 0);\n  }\n\n  _applyDefaults(importedSource, opts, isInit = false) {\n    let newOpts;\n\n    if (typeof importedSource === \"string\") {\n      newOpts = Object.assign({}, this._defaultOpts, {\n        importedSource\n      }, opts);\n    } else {\n      _assert(!opts, \"Unexpected secondary arguments.\");\n\n      newOpts = Object.assign({}, this._defaultOpts, importedSource);\n    }\n\n    if (!isInit && opts) {\n      if (opts.nameHint !== undefined) newOpts.nameHint = opts.nameHint;\n      if (opts.blockHoist !== undefined) newOpts.blockHoist = opts.blockHoist;\n    }\n\n    return newOpts;\n  }\n\n  _generateImport(opts, importName) {\n    const isDefault = importName === \"default\";\n    const isNamed = !!importName && !isDefault;\n    const isNamespace = importName === null;\n    const {\n      importedSource,\n      importedType,\n      importedInterop,\n      importingInterop,\n      ensureLiveReference,\n      ensureNoContext,\n      nameHint,\n      importPosition,\n      blockHoist\n    } = opts;\n    let name = nameHint || importName;\n    const isMod = (0, _isModule.default)(this._programPath);\n    const isModuleForNode = isMod && importingInterop === \"node\";\n    const isModuleForBabel = isMod && importingInterop === \"babel\";\n\n    if (importPosition === \"after\" && !isMod) {\n      throw new Error(`\"importPosition\": \"after\" is only supported in modules`);\n    }\n\n    const builder = new _importBuilder.default(importedSource, this._programScope, this._hub);\n\n    if (importedType === \"es6\") {\n      if (!isModuleForNode && !isModuleForBabel) {\n        throw new Error(\"Cannot import an ES6 module from CommonJS\");\n      }\n\n      builder.import();\n\n      if (isNamespace) {\n        builder.namespace(nameHint || importedSource);\n      } else if (isDefault || isNamed) {\n        builder.named(name, importName);\n      }\n    } else if (importedType !== \"commonjs\") {\n      throw new Error(`Unexpected interopType \"${importedType}\"`);\n    } else if (importedInterop === \"babel\") {\n      if (isModuleForNode) {\n        name = name !== \"default\" ? name : importedSource;\n        const es6Default = `${importedSource}$es6Default`;\n        builder.import();\n\n        if (isNamespace) {\n          builder.default(es6Default).var(name || importedSource).wildcardInterop();\n        } else if (isDefault) {\n          if (ensureLiveReference) {\n            builder.default(es6Default).var(name || importedSource).defaultInterop().read(\"default\");\n          } else {\n            builder.default(es6Default).var(name).defaultInterop().prop(importName);\n          }\n        } else if (isNamed) {\n          builder.default(es6Default).read(importName);\n        }\n      } else if (isModuleForBabel) {\n        builder.import();\n\n        if (isNamespace) {\n          builder.namespace(name || importedSource);\n        } else if (isDefault || isNamed) {\n          builder.named(name, importName);\n        }\n      } else {\n        builder.require();\n\n        if (isNamespace) {\n          builder.var(name || importedSource).wildcardInterop();\n        } else if ((isDefault || isNamed) && ensureLiveReference) {\n          if (isDefault) {\n            name = name !== \"default\" ? name : importedSource;\n            builder.var(name).read(importName);\n            builder.defaultInterop();\n          } else {\n            builder.var(importedSource).read(importName);\n          }\n        } else if (isDefault) {\n          builder.var(name).defaultInterop().prop(importName);\n        } else if (isNamed) {\n          builder.var(name).prop(importName);\n        }\n      }\n    } else if (importedInterop === \"compiled\") {\n      if (isModuleForNode) {\n        builder.import();\n\n        if (isNamespace) {\n          builder.default(name || importedSource);\n        } else if (isDefault || isNamed) {\n          builder.default(importedSource).read(name);\n        }\n      } else if (isModuleForBabel) {\n        builder.import();\n\n        if (isNamespace) {\n          builder.namespace(name || importedSource);\n        } else if (isDefault || isNamed) {\n          builder.named(name, importName);\n        }\n      } else {\n        builder.require();\n\n        if (isNamespace) {\n          builder.var(name || importedSource);\n        } else if (isDefault || isNamed) {\n          if (ensureLiveReference) {\n            builder.var(importedSource).read(name);\n          } else {\n            builder.prop(importName).var(name);\n          }\n        }\n      }\n    } else if (importedInterop === \"uncompiled\") {\n      if (isDefault && ensureLiveReference) {\n        throw new Error(\"No live reference for commonjs default\");\n      }\n\n      if (isModuleForNode) {\n        builder.import();\n\n        if (isNamespace) {\n          builder.default(name || importedSource);\n        } else if (isDefault) {\n          builder.default(name);\n        } else if (isNamed) {\n          builder.default(importedSource).read(name);\n        }\n      } else if (isModuleForBabel) {\n        builder.import();\n\n        if (isNamespace) {\n          builder.default(name || importedSource);\n        } else if (isDefault) {\n          builder.default(name);\n        } else if (isNamed) {\n          builder.named(name, importName);\n        }\n      } else {\n        builder.require();\n\n        if (isNamespace) {\n          builder.var(name || importedSource);\n        } else if (isDefault) {\n          builder.var(name);\n        } else if (isNamed) {\n          if (ensureLiveReference) {\n            builder.var(importedSource).read(name);\n          } else {\n            builder.var(name).prop(importName);\n          }\n        }\n      }\n    } else {\n      throw new Error(`Unknown importedInterop \"${importedInterop}\".`);\n    }\n\n    const {\n      statements,\n      resultName\n    } = builder.done();\n\n    this._insertStatements(statements, importPosition, blockHoist);\n\n    if ((isDefault || isNamed) && ensureNoContext && resultName.type !== \"Identifier\") {\n      return sequenceExpression([numericLiteral(0), resultName]);\n    }\n\n    return resultName;\n  }\n\n  _insertStatements(statements, importPosition = \"before\", blockHoist = 3) {\n    const body = this._programPath.get(\"body\");\n\n    if (importPosition === \"after\") {\n      for (let i = body.length - 1; i >= 0; i--) {\n        if (body[i].isImportDeclaration()) {\n          body[i].insertAfter(statements);\n          return;\n        }\n      }\n    } else {\n      statements.forEach(node => {\n        node._blockHoist = blockHoist;\n      });\n      const targetPath = body.find(p => {\n        const val = p.node._blockHoist;\n        return Number.isFinite(val) && val < 4;\n      });\n\n      if (targetPath) {\n        targetPath.insertBefore(statements);\n        return;\n      }\n    }\n\n    this._programPath.unshiftContainer(\"body\", statements);\n  }\n\n}\n\nexports.default = ImportInjector;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _assert = require(\"assert\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  callExpression,\n  cloneNode,\n  expressionStatement,\n  identifier,\n  importDeclaration,\n  importDefaultSpecifier,\n  importNamespaceSpecifier,\n  importSpecifier,\n  memberExpression,\n  stringLiteral,\n  variableDeclaration,\n  variableDeclarator\n} = _t;\n\nclass ImportBuilder {\n  constructor(importedSource, scope, hub) {\n    this._statements = [];\n    this._resultName = null;\n    this._importedSource = void 0;\n    this._scope = scope;\n    this._hub = hub;\n    this._importedSource = importedSource;\n  }\n\n  done() {\n    return {\n      statements: this._statements,\n      resultName: this._resultName\n    };\n  }\n\n  import() {\n    this._statements.push(importDeclaration([], stringLiteral(this._importedSource)));\n\n    return this;\n  }\n\n  require() {\n    this._statements.push(expressionStatement(callExpression(identifier(\"require\"), [stringLiteral(this._importedSource)])));\n\n    return this;\n  }\n\n  namespace(name = \"namespace\") {\n    const local = this._scope.generateUidIdentifier(name);\n\n    const statement = this._statements[this._statements.length - 1];\n\n    _assert(statement.type === \"ImportDeclaration\");\n\n    _assert(statement.specifiers.length === 0);\n\n    statement.specifiers = [importNamespaceSpecifier(local)];\n    this._resultName = cloneNode(local);\n    return this;\n  }\n\n  default(name) {\n    const id = this._scope.generateUidIdentifier(name);\n\n    const statement = this._statements[this._statements.length - 1];\n\n    _assert(statement.type === \"ImportDeclaration\");\n\n    _assert(statement.specifiers.length === 0);\n\n    statement.specifiers = [importDefaultSpecifier(id)];\n    this._resultName = cloneNode(id);\n    return this;\n  }\n\n  named(name, importName) {\n    if (importName === \"default\") return this.default(name);\n\n    const id = this._scope.generateUidIdentifier(name);\n\n    const statement = this._statements[this._statements.length - 1];\n\n    _assert(statement.type === \"ImportDeclaration\");\n\n    _assert(statement.specifiers.length === 0);\n\n    statement.specifiers = [importSpecifier(id, identifier(importName))];\n    this._resultName = cloneNode(id);\n    return this;\n  }\n\n  var(name) {\n    const id = this._scope.generateUidIdentifier(name);\n\n    let statement = this._statements[this._statements.length - 1];\n\n    if (statement.type !== \"ExpressionStatement\") {\n      _assert(this._resultName);\n\n      statement = expressionStatement(this._resultName);\n\n      this._statements.push(statement);\n    }\n\n    this._statements[this._statements.length - 1] = variableDeclaration(\"var\", [variableDeclarator(id, statement.expression)]);\n    this._resultName = cloneNode(id);\n    return this;\n  }\n\n  defaultInterop() {\n    return this._interop(this._hub.addHelper(\"interopRequireDefault\"));\n  }\n\n  wildcardInterop() {\n    return this._interop(this._hub.addHelper(\"interopRequireWildcard\"));\n  }\n\n  _interop(callee) {\n    const statement = this._statements[this._statements.length - 1];\n\n    if (statement.type === \"ExpressionStatement\") {\n      statement.expression = callExpression(callee, [statement.expression]);\n    } else if (statement.type === \"VariableDeclaration\") {\n      _assert(statement.declarations.length === 1);\n\n      statement.declarations[0].init = callExpression(callee, [statement.declarations[0].init]);\n    } else {\n      _assert.fail(\"Unexpected type.\");\n    }\n\n    return this;\n  }\n\n  prop(name) {\n    const statement = this._statements[this._statements.length - 1];\n\n    if (statement.type === \"ExpressionStatement\") {\n      statement.expression = memberExpression(statement.expression, identifier(name));\n    } else if (statement.type === \"VariableDeclaration\") {\n      _assert(statement.declarations.length === 1);\n\n      statement.declarations[0].init = memberExpression(statement.declarations[0].init, identifier(name));\n    } else {\n      _assert.fail(\"Unexpected type:\" + statement.type);\n    }\n\n    return this;\n  }\n\n  read(name) {\n    this._resultName = memberExpression(this._resultName, identifier(name));\n  }\n\n}\n\nexports.default = ImportBuilder;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isModule;\n\nfunction isModule(path) {\n  const {\n    sourceType\n  } = path.node;\n\n  if (sourceType !== \"module\" && sourceType !== \"script\") {\n    throw path.buildCodeFrameError(`Unknown sourceType \"${sourceType}\", cannot transform.`);\n  }\n\n  return path.node.sourceType === \"module\";\n}","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar named_references_1 = require(\"./named-references\");\nvar numeric_unicode_map_1 = require(\"./numeric-unicode-map\");\nvar surrogate_pairs_1 = require(\"./surrogate-pairs\");\nvar allNamedReferences = __assign(__assign({}, named_references_1.namedReferences), { all: named_references_1.namedReferences.html5 });\nvar encodeRegExps = {\n    specialChars: /[<>'\"&]/g,\n    nonAscii: /(?:[<>'\"&\\u0080-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g,\n    nonAsciiPrintable: /(?:[<>'\"&\\x01-\\x08\\x11-\\x15\\x17-\\x1F\\x7f-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g,\n    extensive: /(?:[\\x01-\\x0c\\x0e-\\x1f\\x21-\\x2c\\x2e-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7d\\x7f-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g\n};\nvar defaultEncodeOptions = {\n    mode: 'specialChars',\n    level: 'all',\n    numeric: 'decimal'\n};\n/** Encodes all the necessary (specified by `level`) characters in the text */\nfunction encode(text, _a) {\n    var _b = _a === void 0 ? defaultEncodeOptions : _a, _c = _b.mode, mode = _c === void 0 ? 'specialChars' : _c, _d = _b.numeric, numeric = _d === void 0 ? 'decimal' : _d, _e = _b.level, level = _e === void 0 ? 'all' : _e;\n    if (!text) {\n        return '';\n    }\n    var encodeRegExp = encodeRegExps[mode];\n    var references = allNamedReferences[level].characters;\n    var isHex = numeric === 'hexadecimal';\n    encodeRegExp.lastIndex = 0;\n    var _b = encodeRegExp.exec(text);\n    var _c;\n    if (_b) {\n        _c = '';\n        var _d = 0;\n        do {\n            if (_d !== _b.index) {\n                _c += text.substring(_d, _b.index);\n            }\n            var _e = _b[0];\n            var result_1 = references[_e];\n            if (!result_1) {\n                var code_1 = _e.length > 1 ? surrogate_pairs_1.getCodePoint(_e, 0) : _e.charCodeAt(0);\n                result_1 = (isHex ? '&#x' + code_1.toString(16) : '&#' + code_1) + ';';\n            }\n            _c += result_1;\n            _d = _b.index + _e.length;\n        } while ((_b = encodeRegExp.exec(text)));\n        if (_d !== text.length) {\n            _c += text.substring(_d);\n        }\n    }\n    else {\n        _c =\n            text;\n    }\n    return _c;\n}\nexports.encode = encode;\nvar defaultDecodeOptions = {\n    scope: 'body',\n    level: 'all'\n};\nvar strict = /&(?:#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);/g;\nvar attribute = /&(?:#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+)[;=]?/g;\nvar baseDecodeRegExps = {\n    xml: {\n        strict: strict,\n        attribute: attribute,\n        body: named_references_1.bodyRegExps.xml\n    },\n    html4: {\n        strict: strict,\n        attribute: attribute,\n        body: named_references_1.bodyRegExps.html4\n    },\n    html5: {\n        strict: strict,\n        attribute: attribute,\n        body: named_references_1.bodyRegExps.html5\n    }\n};\nvar decodeRegExps = __assign(__assign({}, baseDecodeRegExps), { all: baseDecodeRegExps.html5 });\nvar fromCharCode = String.fromCharCode;\nvar outOfBoundsChar = fromCharCode(65533);\nvar defaultDecodeEntityOptions = {\n    level: 'all'\n};\n/** Decodes a single entity */\nfunction decodeEntity(entity, _a) {\n    var _b = (_a === void 0 ? defaultDecodeEntityOptions : _a).level, level = _b === void 0 ? 'all' : _b;\n    if (!entity) {\n        return '';\n    }\n    var _b = entity;\n    var decodeEntityLastChar_1 = entity[entity.length - 1];\n    if (false\n        && decodeEntityLastChar_1 === '=') {\n        _b =\n            entity;\n    }\n    else if (false\n        && decodeEntityLastChar_1 !== ';') {\n        _b =\n            entity;\n    }\n    else {\n        var decodeResultByReference_1 = allNamedReferences[level].entities[entity];\n        if (decodeResultByReference_1) {\n            _b = decodeResultByReference_1;\n        }\n        else if (entity[0] === '&' && entity[1] === '#') {\n            var decodeSecondChar_1 = entity[2];\n            var decodeCode_1 = decodeSecondChar_1 == 'x' || decodeSecondChar_1 == 'X'\n                ? parseInt(entity.substr(3), 16)\n                : parseInt(entity.substr(2));\n            _b =\n                decodeCode_1 >= 0x10ffff\n                    ? outOfBoundsChar\n                    : decodeCode_1 > 65535\n                        ? surrogate_pairs_1.fromCodePoint(decodeCode_1)\n                        : fromCharCode(numeric_unicode_map_1.numericUnicodeMap[decodeCode_1] || decodeCode_1);\n        }\n    }\n    return _b;\n}\nexports.decodeEntity = decodeEntity;\n/** Decodes all entities in the text */\nfunction decode(text, _a) {\n    var decodeSecondChar_1 = _a === void 0 ? defaultDecodeOptions : _a, decodeCode_1 = decodeSecondChar_1.level, level = decodeCode_1 === void 0 ? 'all' : decodeCode_1, _b = decodeSecondChar_1.scope, scope = _b === void 0 ? level === 'xml' ? 'strict' : 'body' : _b;\n    if (!text) {\n        return '';\n    }\n    var decodeRegExp = decodeRegExps[level][scope];\n    var references = allNamedReferences[level].entities;\n    var isAttribute = scope === 'attribute';\n    var isStrict = scope === 'strict';\n    decodeRegExp.lastIndex = 0;\n    var replaceMatch_1 = decodeRegExp.exec(text);\n    var replaceResult_1;\n    if (replaceMatch_1) {\n        replaceResult_1 = '';\n        var replaceLastIndex_1 = 0;\n        do {\n            if (replaceLastIndex_1 !== replaceMatch_1.index) {\n                replaceResult_1 += text.substring(replaceLastIndex_1, replaceMatch_1.index);\n            }\n            var replaceInput_1 = replaceMatch_1[0];\n            var decodeResult_1 = replaceInput_1;\n            var decodeEntityLastChar_2 = replaceInput_1[replaceInput_1.length - 1];\n            if (isAttribute\n                && decodeEntityLastChar_2 === '=') {\n                decodeResult_1 = replaceInput_1;\n            }\n            else if (isStrict\n                && decodeEntityLastChar_2 !== ';') {\n                decodeResult_1 = replaceInput_1;\n            }\n            else {\n                var decodeResultByReference_2 = references[replaceInput_1];\n                if (decodeResultByReference_2) {\n                    decodeResult_1 = decodeResultByReference_2;\n                }\n                else if (replaceInput_1[0] === '&' && replaceInput_1[1] === '#') {\n                    var decodeSecondChar_2 = replaceInput_1[2];\n                    var decodeCode_2 = decodeSecondChar_2 == 'x' || decodeSecondChar_2 == 'X'\n                        ? parseInt(replaceInput_1.substr(3), 16)\n                        : parseInt(replaceInput_1.substr(2));\n                    decodeResult_1 =\n                        decodeCode_2 >= 0x10ffff\n                            ? outOfBoundsChar\n                            : decodeCode_2 > 65535\n                                ? surrogate_pairs_1.fromCodePoint(decodeCode_2)\n                                : fromCharCode(numeric_unicode_map_1.numericUnicodeMap[decodeCode_2] || decodeCode_2);\n                }\n            }\n            replaceResult_1 += decodeResult_1;\n            replaceLastIndex_1 = replaceMatch_1.index + replaceInput_1.length;\n        } while ((replaceMatch_1 = decodeRegExp.exec(text)));\n        if (replaceLastIndex_1 !== text.length) {\n            replaceResult_1 += text.substring(replaceLastIndex_1);\n        }\n    }\n    else {\n        replaceResult_1 =\n            text;\n    }\n    return replaceResult_1;\n}\nexports.decode = decode;\n","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.bodyRegExps={xml:/&(?:#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);?/g,html4:/&(?:nbsp|iexcl|cent|pound|curren|yen|brvbar|sect|uml|copy|ordf|laquo|not|shy|reg|macr|deg|plusmn|sup2|sup3|acute|micro|para|middot|cedil|sup1|ordm|raquo|frac14|frac12|frac34|iquest|Agrave|Aacute|Acirc|Atilde|Auml|Aring|AElig|Ccedil|Egrave|Eacute|Ecirc|Euml|Igrave|Iacute|Icirc|Iuml|ETH|Ntilde|Ograve|Oacute|Ocirc|Otilde|Ouml|times|Oslash|Ugrave|Uacute|Ucirc|Uuml|Yacute|THORN|szlig|agrave|aacute|acirc|atilde|auml|aring|aelig|ccedil|egrave|eacute|ecirc|euml|igrave|iacute|icirc|iuml|eth|ntilde|ograve|oacute|ocirc|otilde|ouml|divide|oslash|ugrave|uacute|ucirc|uuml|yacute|thorn|yuml|quot|amp|lt|gt|#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);?/g,html5:/&(?:AElig|AMP|Aacute|Acirc|Agrave|Aring|Atilde|Auml|COPY|Ccedil|ETH|Eacute|Ecirc|Egrave|Euml|GT|Iacute|Icirc|Igrave|Iuml|LT|Ntilde|Oacute|Ocirc|Ograve|Oslash|Otilde|Ouml|QUOT|REG|THORN|Uacute|Ucirc|Ugrave|Uuml|Yacute|aacute|acirc|acute|aelig|agrave|amp|aring|atilde|auml|brvbar|ccedil|cedil|cent|copy|curren|deg|divide|eacute|ecirc|egrave|eth|euml|frac12|frac14|frac34|gt|iacute|icirc|iexcl|igrave|iquest|iuml|laquo|lt|macr|micro|middot|nbsp|not|ntilde|oacute|ocirc|ograve|ordf|ordm|oslash|otilde|ouml|para|plusmn|pound|quot|raquo|reg|sect|shy|sup1|sup2|sup3|szlig|thorn|times|uacute|ucirc|ugrave|uml|uuml|yacute|yen|yuml|#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);?/g};exports.namedReferences={xml:{entities:{\"&lt;\":\"<\",\"&gt;\":\">\",\"&quot;\":'\"',\"&apos;\":\"'\",\"&amp;\":\"&\"},characters:{\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&apos;\",\"&\":\"&amp;\"}},html4:{entities:{\"&apos;\":\"'\",\"&nbsp\":\" \",\"&nbsp;\":\" \",\"&iexcl\":\"¡\",\"&iexcl;\":\"¡\",\"&cent\":\"¢\",\"&cent;\":\"¢\",\"&pound\":\"£\",\"&pound;\":\"£\",\"&curren\":\"¤\",\"&curren;\":\"¤\",\"&yen\":\"¥\",\"&yen;\":\"¥\",\"&brvbar\":\"¦\",\"&brvbar;\":\"¦\",\"&sect\":\"§\",\"&sect;\":\"§\",\"&uml\":\"¨\",\"&uml;\":\"¨\",\"&copy\":\"©\",\"&copy;\":\"©\",\"&ordf\":\"ª\",\"&ordf;\":\"ª\",\"&laquo\":\"«\",\"&laquo;\":\"«\",\"&not\":\"¬\",\"&not;\":\"¬\",\"&shy\":\"­\",\"&shy;\":\"­\",\"&reg\":\"®\",\"&reg;\":\"®\",\"&macr\":\"¯\",\"&macr;\":\"¯\",\"&deg\":\"°\",\"&deg;\":\"°\",\"&plusmn\":\"±\",\"&plusmn;\":\"±\",\"&sup2\":\"²\",\"&sup2;\":\"²\",\"&sup3\":\"³\",\"&sup3;\":\"³\",\"&acute\":\"´\",\"&acute;\":\"´\",\"&micro\":\"µ\",\"&micro;\":\"µ\",\"&para\":\"¶\",\"&para;\":\"¶\",\"&middot\":\"·\",\"&middot;\":\"·\",\"&cedil\":\"¸\",\"&cedil;\":\"¸\",\"&sup1\":\"¹\",\"&sup1;\":\"¹\",\"&ordm\":\"º\",\"&ordm;\":\"º\",\"&raquo\":\"»\",\"&raquo;\":\"»\",\"&frac14\":\"¼\",\"&frac14;\":\"¼\",\"&frac12\":\"½\",\"&frac12;\":\"½\",\"&frac34\":\"¾\",\"&frac34;\":\"¾\",\"&iquest\":\"¿\",\"&iquest;\":\"¿\",\"&Agrave\":\"À\",\"&Agrave;\":\"À\",\"&Aacute\":\"Á\",\"&Aacute;\":\"Á\",\"&Acirc\":\"Â\",\"&Acirc;\":\"Â\",\"&Atilde\":\"Ã\",\"&Atilde;\":\"Ã\",\"&Auml\":\"Ä\",\"&Auml;\":\"Ä\",\"&Aring\":\"Å\",\"&Aring;\":\"Å\",\"&AElig\":\"Æ\",\"&AElig;\":\"Æ\",\"&Ccedil\":\"Ç\",\"&Ccedil;\":\"Ç\",\"&Egrave\":\"È\",\"&Egrave;\":\"È\",\"&Eacute\":\"É\",\"&Eacute;\":\"É\",\"&Ecirc\":\"Ê\",\"&Ecirc;\":\"Ê\",\"&Euml\":\"Ë\",\"&Euml;\":\"Ë\",\"&Igrave\":\"Ì\",\"&Igrave;\":\"Ì\",\"&Iacute\":\"Í\",\"&Iacute;\":\"Í\",\"&Icirc\":\"Î\",\"&Icirc;\":\"Î\",\"&Iuml\":\"Ï\",\"&Iuml;\":\"Ï\",\"&ETH\":\"Ð\",\"&ETH;\":\"Ð\",\"&Ntilde\":\"Ñ\",\"&Ntilde;\":\"Ñ\",\"&Ograve\":\"Ò\",\"&Ograve;\":\"Ò\",\"&Oacute\":\"Ó\",\"&Oacute;\":\"Ó\",\"&Ocirc\":\"Ô\",\"&Ocirc;\":\"Ô\",\"&Otilde\":\"Õ\",\"&Otilde;\":\"Õ\",\"&Ouml\":\"Ö\",\"&Ouml;\":\"Ö\",\"&times\":\"×\",\"&times;\":\"×\",\"&Oslash\":\"Ø\",\"&Oslash;\":\"Ø\",\"&Ugrave\":\"Ù\",\"&Ugrave;\":\"Ù\",\"&Uacute\":\"Ú\",\"&Uacute;\":\"Ú\",\"&Ucirc\":\"Û\",\"&Ucirc;\":\"Û\",\"&Uuml\":\"Ü\",\"&Uuml;\":\"Ü\",\"&Yacute\":\"Ý\",\"&Yacute;\":\"Ý\",\"&THORN\":\"Þ\",\"&THORN;\":\"Þ\",\"&szlig\":\"ß\",\"&szlig;\":\"ß\",\"&agrave\":\"à\",\"&agrave;\":\"à\",\"&aacute\":\"á\",\"&aacute;\":\"á\",\"&acirc\":\"â\",\"&acirc;\":\"â\",\"&atilde\":\"ã\",\"&atilde;\":\"ã\",\"&auml\":\"ä\",\"&auml;\":\"ä\",\"&aring\":\"å\",\"&aring;\":\"å\",\"&aelig\":\"æ\",\"&aelig;\":\"æ\",\"&ccedil\":\"ç\",\"&ccedil;\":\"ç\",\"&egrave\":\"è\",\"&egrave;\":\"è\",\"&eacute\":\"é\",\"&eacute;\":\"é\",\"&ecirc\":\"ê\",\"&ecirc;\":\"ê\",\"&euml\":\"ë\",\"&euml;\":\"ë\",\"&igrave\":\"ì\",\"&igrave;\":\"ì\",\"&iacute\":\"í\",\"&iacute;\":\"í\",\"&icirc\":\"î\",\"&icirc;\":\"î\",\"&iuml\":\"ï\",\"&iuml;\":\"ï\",\"&eth\":\"ð\",\"&eth;\":\"ð\",\"&ntilde\":\"ñ\",\"&ntilde;\":\"ñ\",\"&ograve\":\"ò\",\"&ograve;\":\"ò\",\"&oacute\":\"ó\",\"&oacute;\":\"ó\",\"&ocirc\":\"ô\",\"&ocirc;\":\"ô\",\"&otilde\":\"õ\",\"&otilde;\":\"õ\",\"&ouml\":\"ö\",\"&ouml;\":\"ö\",\"&divide\":\"÷\",\"&divide;\":\"÷\",\"&oslash\":\"ø\",\"&oslash;\":\"ø\",\"&ugrave\":\"ù\",\"&ugrave;\":\"ù\",\"&uacute\":\"ú\",\"&uacute;\":\"ú\",\"&ucirc\":\"û\",\"&ucirc;\":\"û\",\"&uuml\":\"ü\",\"&uuml;\":\"ü\",\"&yacute\":\"ý\",\"&yacute;\":\"ý\",\"&thorn\":\"þ\",\"&thorn;\":\"þ\",\"&yuml\":\"ÿ\",\"&yuml;\":\"ÿ\",\"&quot\":'\"',\"&quot;\":'\"',\"&amp\":\"&\",\"&amp;\":\"&\",\"&lt\":\"<\",\"&lt;\":\"<\",\"&gt\":\">\",\"&gt;\":\">\",\"&OElig;\":\"Œ\",\"&oelig;\":\"œ\",\"&Scaron;\":\"Š\",\"&scaron;\":\"š\",\"&Yuml;\":\"Ÿ\",\"&circ;\":\"ˆ\",\"&tilde;\":\"˜\",\"&ensp;\":\" \",\"&emsp;\":\" \",\"&thinsp;\":\" \",\"&zwnj;\":\"‌\",\"&zwj;\":\"‍\",\"&lrm;\":\"‎\",\"&rlm;\":\"‏\",\"&ndash;\":\"–\",\"&mdash;\":\"—\",\"&lsquo;\":\"‘\",\"&rsquo;\":\"’\",\"&sbquo;\":\"‚\",\"&ldquo;\":\"“\",\"&rdquo;\":\"”\",\"&bdquo;\":\"„\",\"&dagger;\":\"†\",\"&Dagger;\":\"‡\",\"&permil;\":\"‰\",\"&lsaquo;\":\"‹\",\"&rsaquo;\":\"›\",\"&euro;\":\"€\",\"&fnof;\":\"ƒ\",\"&Alpha;\":\"Α\",\"&Beta;\":\"Β\",\"&Gamma;\":\"Γ\",\"&Delta;\":\"Δ\",\"&Epsilon;\":\"Ε\",\"&Zeta;\":\"Ζ\",\"&Eta;\":\"Η\",\"&Theta;\":\"Θ\",\"&Iota;\":\"Ι\",\"&Kappa;\":\"Κ\",\"&Lambda;\":\"Λ\",\"&Mu;\":\"Μ\",\"&Nu;\":\"Ν\",\"&Xi;\":\"Ξ\",\"&Omicron;\":\"Ο\",\"&Pi;\":\"Π\",\"&Rho;\":\"Ρ\",\"&Sigma;\":\"Σ\",\"&Tau;\":\"Τ\",\"&Upsilon;\":\"Υ\",\"&Phi;\":\"Φ\",\"&Chi;\":\"Χ\",\"&Psi;\":\"Ψ\",\"&Omega;\":\"Ω\",\"&alpha;\":\"α\",\"&beta;\":\"β\",\"&gamma;\":\"γ\",\"&delta;\":\"δ\",\"&epsilon;\":\"ε\",\"&zeta;\":\"ζ\",\"&eta;\":\"η\",\"&theta;\":\"θ\",\"&iota;\":\"ι\",\"&kappa;\":\"κ\",\"&lambda;\":\"λ\",\"&mu;\":\"μ\",\"&nu;\":\"ν\",\"&xi;\":\"ξ\",\"&omicron;\":\"ο\",\"&pi;\":\"π\",\"&rho;\":\"ρ\",\"&sigmaf;\":\"ς\",\"&sigma;\":\"σ\",\"&tau;\":\"τ\",\"&upsilon;\":\"υ\",\"&phi;\":\"φ\",\"&chi;\":\"χ\",\"&psi;\":\"ψ\",\"&omega;\":\"ω\",\"&thetasym;\":\"ϑ\",\"&upsih;\":\"ϒ\",\"&piv;\":\"ϖ\",\"&bull;\":\"•\",\"&hellip;\":\"…\",\"&prime;\":\"′\",\"&Prime;\":\"″\",\"&oline;\":\"‾\",\"&frasl;\":\"⁄\",\"&weierp;\":\"℘\",\"&image;\":\"ℑ\",\"&real;\":\"ℜ\",\"&trade;\":\"™\",\"&alefsym;\":\"ℵ\",\"&larr;\":\"←\",\"&uarr;\":\"↑\",\"&rarr;\":\"→\",\"&darr;\":\"↓\",\"&harr;\":\"↔\",\"&crarr;\":\"↵\",\"&lArr;\":\"⇐\",\"&uArr;\":\"⇑\",\"&rArr;\":\"⇒\",\"&dArr;\":\"⇓\",\"&hArr;\":\"⇔\",\"&forall;\":\"∀\",\"&part;\":\"∂\",\"&exist;\":\"∃\",\"&empty;\":\"∅\",\"&nabla;\":\"∇\",\"&isin;\":\"∈\",\"&notin;\":\"∉\",\"&ni;\":\"∋\",\"&prod;\":\"∏\",\"&sum;\":\"∑\",\"&minus;\":\"−\",\"&lowast;\":\"∗\",\"&radic;\":\"√\",\"&prop;\":\"∝\",\"&infin;\":\"∞\",\"&ang;\":\"∠\",\"&and;\":\"∧\",\"&or;\":\"∨\",\"&cap;\":\"∩\",\"&cup;\":\"∪\",\"&int;\":\"∫\",\"&there4;\":\"∴\",\"&sim;\":\"∼\",\"&cong;\":\"≅\",\"&asymp;\":\"≈\",\"&ne;\":\"≠\",\"&equiv;\":\"≡\",\"&le;\":\"≤\",\"&ge;\":\"≥\",\"&sub;\":\"⊂\",\"&sup;\":\"⊃\",\"&nsub;\":\"⊄\",\"&sube;\":\"⊆\",\"&supe;\":\"⊇\",\"&oplus;\":\"⊕\",\"&otimes;\":\"⊗\",\"&perp;\":\"⊥\",\"&sdot;\":\"⋅\",\"&lceil;\":\"⌈\",\"&rceil;\":\"⌉\",\"&lfloor;\":\"⌊\",\"&rfloor;\":\"⌋\",\"&lang;\":\"〈\",\"&rang;\":\"〉\",\"&loz;\":\"◊\",\"&spades;\":\"♠\",\"&clubs;\":\"♣\",\"&hearts;\":\"♥\",\"&diams;\":\"♦\"},characters:{\"'\":\"&apos;\",\" \":\"&nbsp;\",\"¡\":\"&iexcl;\",\"¢\":\"&cent;\",\"£\":\"&pound;\",\"¤\":\"&curren;\",\"¥\":\"&yen;\",\"¦\":\"&brvbar;\",\"§\":\"&sect;\",\"¨\":\"&uml;\",\"©\":\"&copy;\",\"ª\":\"&ordf;\",\"«\":\"&laquo;\",\"¬\":\"&not;\",\"­\":\"&shy;\",\"®\":\"&reg;\",\"¯\":\"&macr;\",\"°\":\"&deg;\",\"±\":\"&plusmn;\",\"²\":\"&sup2;\",\"³\":\"&sup3;\",\"´\":\"&acute;\",\"µ\":\"&micro;\",\"¶\":\"&para;\",\"·\":\"&middot;\",\"¸\":\"&cedil;\",\"¹\":\"&sup1;\",\"º\":\"&ordm;\",\"»\":\"&raquo;\",\"¼\":\"&frac14;\",\"½\":\"&frac12;\",\"¾\":\"&frac34;\",\"¿\":\"&iquest;\",\"À\":\"&Agrave;\",\"Á\":\"&Aacute;\",\"Â\":\"&Acirc;\",\"Ã\":\"&Atilde;\",\"Ä\":\"&Auml;\",\"Å\":\"&Aring;\",\"Æ\":\"&AElig;\",\"Ç\":\"&Ccedil;\",\"È\":\"&Egrave;\",\"É\":\"&Eacute;\",\"Ê\":\"&Ecirc;\",\"Ë\":\"&Euml;\",\"Ì\":\"&Igrave;\",\"Í\":\"&Iacute;\",\"Î\":\"&Icirc;\",\"Ï\":\"&Iuml;\",\"Ð\":\"&ETH;\",\"Ñ\":\"&Ntilde;\",\"Ò\":\"&Ograve;\",\"Ó\":\"&Oacute;\",\"Ô\":\"&Ocirc;\",\"Õ\":\"&Otilde;\",\"Ö\":\"&Ouml;\",\"×\":\"&times;\",\"Ø\":\"&Oslash;\",\"Ù\":\"&Ugrave;\",\"Ú\":\"&Uacute;\",\"Û\":\"&Ucirc;\",\"Ü\":\"&Uuml;\",\"Ý\":\"&Yacute;\",\"Þ\":\"&THORN;\",\"ß\":\"&szlig;\",\"à\":\"&agrave;\",\"á\":\"&aacute;\",\"â\":\"&acirc;\",\"ã\":\"&atilde;\",\"ä\":\"&auml;\",\"å\":\"&aring;\",\"æ\":\"&aelig;\",\"ç\":\"&ccedil;\",\"è\":\"&egrave;\",\"é\":\"&eacute;\",\"ê\":\"&ecirc;\",\"ë\":\"&euml;\",\"ì\":\"&igrave;\",\"í\":\"&iacute;\",\"î\":\"&icirc;\",\"ï\":\"&iuml;\",\"ð\":\"&eth;\",\"ñ\":\"&ntilde;\",\"ò\":\"&ograve;\",\"ó\":\"&oacute;\",\"ô\":\"&ocirc;\",\"õ\":\"&otilde;\",\"ö\":\"&ouml;\",\"÷\":\"&divide;\",\"ø\":\"&oslash;\",\"ù\":\"&ugrave;\",\"ú\":\"&uacute;\",\"û\":\"&ucirc;\",\"ü\":\"&uuml;\",\"ý\":\"&yacute;\",\"þ\":\"&thorn;\",\"ÿ\":\"&yuml;\",'\"':\"&quot;\",\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",\"Œ\":\"&OElig;\",\"œ\":\"&oelig;\",\"Š\":\"&Scaron;\",\"š\":\"&scaron;\",\"Ÿ\":\"&Yuml;\",\"ˆ\":\"&circ;\",\"˜\":\"&tilde;\",\" \":\"&ensp;\",\" \":\"&emsp;\",\" \":\"&thinsp;\",\"‌\":\"&zwnj;\",\"‍\":\"&zwj;\",\"‎\":\"&lrm;\",\"‏\":\"&rlm;\",\"–\":\"&ndash;\",\"—\":\"&mdash;\",\"‘\":\"&lsquo;\",\"’\":\"&rsquo;\",\"‚\":\"&sbquo;\",\"“\":\"&ldquo;\",\"”\":\"&rdquo;\",\"„\":\"&bdquo;\",\"†\":\"&dagger;\",\"‡\":\"&Dagger;\",\"‰\":\"&permil;\",\"‹\":\"&lsaquo;\",\"›\":\"&rsaquo;\",\"€\":\"&euro;\",\"ƒ\":\"&fnof;\",\"Α\":\"&Alpha;\",\"Β\":\"&Beta;\",\"Γ\":\"&Gamma;\",\"Δ\":\"&Delta;\",\"Ε\":\"&Epsilon;\",\"Ζ\":\"&Zeta;\",\"Η\":\"&Eta;\",\"Θ\":\"&Theta;\",\"Ι\":\"&Iota;\",\"Κ\":\"&Kappa;\",\"Λ\":\"&Lambda;\",\"Μ\":\"&Mu;\",\"Ν\":\"&Nu;\",\"Ξ\":\"&Xi;\",\"Ο\":\"&Omicron;\",\"Π\":\"&Pi;\",\"Ρ\":\"&Rho;\",\"Σ\":\"&Sigma;\",\"Τ\":\"&Tau;\",\"Υ\":\"&Upsilon;\",\"Φ\":\"&Phi;\",\"Χ\":\"&Chi;\",\"Ψ\":\"&Psi;\",\"Ω\":\"&Omega;\",\"α\":\"&alpha;\",\"β\":\"&beta;\",\"γ\":\"&gamma;\",\"δ\":\"&delta;\",\"ε\":\"&epsilon;\",\"ζ\":\"&zeta;\",\"η\":\"&eta;\",\"θ\":\"&theta;\",\"ι\":\"&iota;\",\"κ\":\"&kappa;\",\"λ\":\"&lambda;\",\"μ\":\"&mu;\",\"ν\":\"&nu;\",\"ξ\":\"&xi;\",\"ο\":\"&omicron;\",\"π\":\"&pi;\",\"ρ\":\"&rho;\",\"ς\":\"&sigmaf;\",\"σ\":\"&sigma;\",\"τ\":\"&tau;\",\"υ\":\"&upsilon;\",\"φ\":\"&phi;\",\"χ\":\"&chi;\",\"ψ\":\"&psi;\",\"ω\":\"&omega;\",\"ϑ\":\"&thetasym;\",\"ϒ\":\"&upsih;\",\"ϖ\":\"&piv;\",\"•\":\"&bull;\",\"…\":\"&hellip;\",\"′\":\"&prime;\",\"″\":\"&Prime;\",\"‾\":\"&oline;\",\"⁄\":\"&frasl;\",\"℘\":\"&weierp;\",\"ℑ\":\"&image;\",\"ℜ\":\"&real;\",\"™\":\"&trade;\",\"ℵ\":\"&alefsym;\",\"←\":\"&larr;\",\"↑\":\"&uarr;\",\"→\":\"&rarr;\",\"↓\":\"&darr;\",\"↔\":\"&harr;\",\"↵\":\"&crarr;\",\"⇐\":\"&lArr;\",\"⇑\":\"&uArr;\",\"⇒\":\"&rArr;\",\"⇓\":\"&dArr;\",\"⇔\":\"&hArr;\",\"∀\":\"&forall;\",\"∂\":\"&part;\",\"∃\":\"&exist;\",\"∅\":\"&empty;\",\"∇\":\"&nabla;\",\"∈\":\"&isin;\",\"∉\":\"&notin;\",\"∋\":\"&ni;\",\"∏\":\"&prod;\",\"∑\":\"&sum;\",\"−\":\"&minus;\",\"∗\":\"&lowast;\",\"√\":\"&radic;\",\"∝\":\"&prop;\",\"∞\":\"&infin;\",\"∠\":\"&ang;\",\"∧\":\"&and;\",\"∨\":\"&or;\",\"∩\":\"&cap;\",\"∪\":\"&cup;\",\"∫\":\"&int;\",\"∴\":\"&there4;\",\"∼\":\"&sim;\",\"≅\":\"&cong;\",\"≈\":\"&asymp;\",\"≠\":\"&ne;\",\"≡\":\"&equiv;\",\"≤\":\"&le;\",\"≥\":\"&ge;\",\"⊂\":\"&sub;\",\"⊃\":\"&sup;\",\"⊄\":\"&nsub;\",\"⊆\":\"&sube;\",\"⊇\":\"&supe;\",\"⊕\":\"&oplus;\",\"⊗\":\"&otimes;\",\"⊥\":\"&perp;\",\"⋅\":\"&sdot;\",\"⌈\":\"&lceil;\",\"⌉\":\"&rceil;\",\"⌊\":\"&lfloor;\",\"⌋\":\"&rfloor;\",\"〈\":\"&lang;\",\"〉\":\"&rang;\",\"◊\":\"&loz;\",\"♠\":\"&spades;\",\"♣\":\"&clubs;\",\"♥\":\"&hearts;\",\"♦\":\"&diams;\"}},html5:{entities:{\"&AElig\":\"Æ\",\"&AElig;\":\"Æ\",\"&AMP\":\"&\",\"&AMP;\":\"&\",\"&Aacute\":\"Á\",\"&Aacute;\":\"Á\",\"&Abreve;\":\"Ă\",\"&Acirc\":\"Â\",\"&Acirc;\":\"Â\",\"&Acy;\":\"А\",\"&Afr;\":\"𝔄\",\"&Agrave\":\"À\",\"&Agrave;\":\"À\",\"&Alpha;\":\"Α\",\"&Amacr;\":\"Ā\",\"&And;\":\"⩓\",\"&Aogon;\":\"Ą\",\"&Aopf;\":\"𝔸\",\"&ApplyFunction;\":\"⁡\",\"&Aring\":\"Å\",\"&Aring;\":\"Å\",\"&Ascr;\":\"𝒜\",\"&Assign;\":\"≔\",\"&Atilde\":\"Ã\",\"&Atilde;\":\"Ã\",\"&Auml\":\"Ä\",\"&Auml;\":\"Ä\",\"&Backslash;\":\"∖\",\"&Barv;\":\"⫧\",\"&Barwed;\":\"⌆\",\"&Bcy;\":\"Б\",\"&Because;\":\"∵\",\"&Bernoullis;\":\"ℬ\",\"&Beta;\":\"Β\",\"&Bfr;\":\"𝔅\",\"&Bopf;\":\"𝔹\",\"&Breve;\":\"˘\",\"&Bscr;\":\"ℬ\",\"&Bumpeq;\":\"≎\",\"&CHcy;\":\"Ч\",\"&COPY\":\"©\",\"&COPY;\":\"©\",\"&Cacute;\":\"Ć\",\"&Cap;\":\"⋒\",\"&CapitalDifferentialD;\":\"ⅅ\",\"&Cayleys;\":\"ℭ\",\"&Ccaron;\":\"Č\",\"&Ccedil\":\"Ç\",\"&Ccedil;\":\"Ç\",\"&Ccirc;\":\"Ĉ\",\"&Cconint;\":\"∰\",\"&Cdot;\":\"Ċ\",\"&Cedilla;\":\"¸\",\"&CenterDot;\":\"·\",\"&Cfr;\":\"ℭ\",\"&Chi;\":\"Χ\",\"&CircleDot;\":\"⊙\",\"&CircleMinus;\":\"⊖\",\"&CirclePlus;\":\"⊕\",\"&CircleTimes;\":\"⊗\",\"&ClockwiseContourIntegral;\":\"∲\",\"&CloseCurlyDoubleQuote;\":\"”\",\"&CloseCurlyQuote;\":\"’\",\"&Colon;\":\"∷\",\"&Colone;\":\"⩴\",\"&Congruent;\":\"≡\",\"&Conint;\":\"∯\",\"&ContourIntegral;\":\"∮\",\"&Copf;\":\"ℂ\",\"&Coproduct;\":\"∐\",\"&CounterClockwiseContourIntegral;\":\"∳\",\"&Cross;\":\"⨯\",\"&Cscr;\":\"𝒞\",\"&Cup;\":\"⋓\",\"&CupCap;\":\"≍\",\"&DD;\":\"ⅅ\",\"&DDotrahd;\":\"⤑\",\"&DJcy;\":\"Ђ\",\"&DScy;\":\"Ѕ\",\"&DZcy;\":\"Џ\",\"&Dagger;\":\"‡\",\"&Darr;\":\"↡\",\"&Dashv;\":\"⫤\",\"&Dcaron;\":\"Ď\",\"&Dcy;\":\"Д\",\"&Del;\":\"∇\",\"&Delta;\":\"Δ\",\"&Dfr;\":\"𝔇\",\"&DiacriticalAcute;\":\"´\",\"&DiacriticalDot;\":\"˙\",\"&DiacriticalDoubleAcute;\":\"˝\",\"&DiacriticalGrave;\":\"`\",\"&DiacriticalTilde;\":\"˜\",\"&Diamond;\":\"⋄\",\"&DifferentialD;\":\"ⅆ\",\"&Dopf;\":\"𝔻\",\"&Dot;\":\"¨\",\"&DotDot;\":\"⃜\",\"&DotEqual;\":\"≐\",\"&DoubleContourIntegral;\":\"∯\",\"&DoubleDot;\":\"¨\",\"&DoubleDownArrow;\":\"⇓\",\"&DoubleLeftArrow;\":\"⇐\",\"&DoubleLeftRightArrow;\":\"⇔\",\"&DoubleLeftTee;\":\"⫤\",\"&DoubleLongLeftArrow;\":\"⟸\",\"&DoubleLongLeftRightArrow;\":\"⟺\",\"&DoubleLongRightArrow;\":\"⟹\",\"&DoubleRightArrow;\":\"⇒\",\"&DoubleRightTee;\":\"⊨\",\"&DoubleUpArrow;\":\"⇑\",\"&DoubleUpDownArrow;\":\"⇕\",\"&DoubleVerticalBar;\":\"∥\",\"&DownArrow;\":\"↓\",\"&DownArrowBar;\":\"⤓\",\"&DownArrowUpArrow;\":\"⇵\",\"&DownBreve;\":\"̑\",\"&DownLeftRightVector;\":\"⥐\",\"&DownLeftTeeVector;\":\"⥞\",\"&DownLeftVector;\":\"↽\",\"&DownLeftVectorBar;\":\"⥖\",\"&DownRightTeeVector;\":\"⥟\",\"&DownRightVector;\":\"⇁\",\"&DownRightVectorBar;\":\"⥗\",\"&DownTee;\":\"⊤\",\"&DownTeeArrow;\":\"↧\",\"&Downarrow;\":\"⇓\",\"&Dscr;\":\"𝒟\",\"&Dstrok;\":\"Đ\",\"&ENG;\":\"Ŋ\",\"&ETH\":\"Ð\",\"&ETH;\":\"Ð\",\"&Eacute\":\"É\",\"&Eacute;\":\"É\",\"&Ecaron;\":\"Ě\",\"&Ecirc\":\"Ê\",\"&Ecirc;\":\"Ê\",\"&Ecy;\":\"Э\",\"&Edot;\":\"Ė\",\"&Efr;\":\"𝔈\",\"&Egrave\":\"È\",\"&Egrave;\":\"È\",\"&Element;\":\"∈\",\"&Emacr;\":\"Ē\",\"&EmptySmallSquare;\":\"◻\",\"&EmptyVerySmallSquare;\":\"▫\",\"&Eogon;\":\"Ę\",\"&Eopf;\":\"𝔼\",\"&Epsilon;\":\"Ε\",\"&Equal;\":\"⩵\",\"&EqualTilde;\":\"≂\",\"&Equilibrium;\":\"⇌\",\"&Escr;\":\"ℰ\",\"&Esim;\":\"⩳\",\"&Eta;\":\"Η\",\"&Euml\":\"Ë\",\"&Euml;\":\"Ë\",\"&Exists;\":\"∃\",\"&ExponentialE;\":\"ⅇ\",\"&Fcy;\":\"Ф\",\"&Ffr;\":\"𝔉\",\"&FilledSmallSquare;\":\"◼\",\"&FilledVerySmallSquare;\":\"▪\",\"&Fopf;\":\"𝔽\",\"&ForAll;\":\"∀\",\"&Fouriertrf;\":\"ℱ\",\"&Fscr;\":\"ℱ\",\"&GJcy;\":\"Ѓ\",\"&GT\":\">\",\"&GT;\":\">\",\"&Gamma;\":\"Γ\",\"&Gammad;\":\"Ϝ\",\"&Gbreve;\":\"Ğ\",\"&Gcedil;\":\"Ģ\",\"&Gcirc;\":\"Ĝ\",\"&Gcy;\":\"Г\",\"&Gdot;\":\"Ġ\",\"&Gfr;\":\"𝔊\",\"&Gg;\":\"⋙\",\"&Gopf;\":\"𝔾\",\"&GreaterEqual;\":\"≥\",\"&GreaterEqualLess;\":\"⋛\",\"&GreaterFullEqual;\":\"≧\",\"&GreaterGreater;\":\"⪢\",\"&GreaterLess;\":\"≷\",\"&GreaterSlantEqual;\":\"⩾\",\"&GreaterTilde;\":\"≳\",\"&Gscr;\":\"𝒢\",\"&Gt;\":\"≫\",\"&HARDcy;\":\"Ъ\",\"&Hacek;\":\"ˇ\",\"&Hat;\":\"^\",\"&Hcirc;\":\"Ĥ\",\"&Hfr;\":\"ℌ\",\"&HilbertSpace;\":\"ℋ\",\"&Hopf;\":\"ℍ\",\"&HorizontalLine;\":\"─\",\"&Hscr;\":\"ℋ\",\"&Hstrok;\":\"Ħ\",\"&HumpDownHump;\":\"≎\",\"&HumpEqual;\":\"≏\",\"&IEcy;\":\"Е\",\"&IJlig;\":\"Ĳ\",\"&IOcy;\":\"Ё\",\"&Iacute\":\"Í\",\"&Iacute;\":\"Í\",\"&Icirc\":\"Î\",\"&Icirc;\":\"Î\",\"&Icy;\":\"И\",\"&Idot;\":\"İ\",\"&Ifr;\":\"ℑ\",\"&Igrave\":\"Ì\",\"&Igrave;\":\"Ì\",\"&Im;\":\"ℑ\",\"&Imacr;\":\"Ī\",\"&ImaginaryI;\":\"ⅈ\",\"&Implies;\":\"⇒\",\"&Int;\":\"∬\",\"&Integral;\":\"∫\",\"&Intersection;\":\"⋂\",\"&InvisibleComma;\":\"⁣\",\"&InvisibleTimes;\":\"⁢\",\"&Iogon;\":\"Į\",\"&Iopf;\":\"𝕀\",\"&Iota;\":\"Ι\",\"&Iscr;\":\"ℐ\",\"&Itilde;\":\"Ĩ\",\"&Iukcy;\":\"І\",\"&Iuml\":\"Ï\",\"&Iuml;\":\"Ï\",\"&Jcirc;\":\"Ĵ\",\"&Jcy;\":\"Й\",\"&Jfr;\":\"𝔍\",\"&Jopf;\":\"𝕁\",\"&Jscr;\":\"𝒥\",\"&Jsercy;\":\"Ј\",\"&Jukcy;\":\"Є\",\"&KHcy;\":\"Х\",\"&KJcy;\":\"Ќ\",\"&Kappa;\":\"Κ\",\"&Kcedil;\":\"Ķ\",\"&Kcy;\":\"К\",\"&Kfr;\":\"𝔎\",\"&Kopf;\":\"𝕂\",\"&Kscr;\":\"𝒦\",\"&LJcy;\":\"Љ\",\"&LT\":\"<\",\"&LT;\":\"<\",\"&Lacute;\":\"Ĺ\",\"&Lambda;\":\"Λ\",\"&Lang;\":\"⟪\",\"&Laplacetrf;\":\"ℒ\",\"&Larr;\":\"↞\",\"&Lcaron;\":\"Ľ\",\"&Lcedil;\":\"Ļ\",\"&Lcy;\":\"Л\",\"&LeftAngleBracket;\":\"⟨\",\"&LeftArrow;\":\"←\",\"&LeftArrowBar;\":\"⇤\",\"&LeftArrowRightArrow;\":\"⇆\",\"&LeftCeiling;\":\"⌈\",\"&LeftDoubleBracket;\":\"⟦\",\"&LeftDownTeeVector;\":\"⥡\",\"&LeftDownVector;\":\"⇃\",\"&LeftDownVectorBar;\":\"⥙\",\"&LeftFloor;\":\"⌊\",\"&LeftRightArrow;\":\"↔\",\"&LeftRightVector;\":\"⥎\",\"&LeftTee;\":\"⊣\",\"&LeftTeeArrow;\":\"↤\",\"&LeftTeeVector;\":\"⥚\",\"&LeftTriangle;\":\"⊲\",\"&LeftTriangleBar;\":\"⧏\",\"&LeftTriangleEqual;\":\"⊴\",\"&LeftUpDownVector;\":\"⥑\",\"&LeftUpTeeVector;\":\"⥠\",\"&LeftUpVector;\":\"↿\",\"&LeftUpVectorBar;\":\"⥘\",\"&LeftVector;\":\"↼\",\"&LeftVectorBar;\":\"⥒\",\"&Leftarrow;\":\"⇐\",\"&Leftrightarrow;\":\"⇔\",\"&LessEqualGreater;\":\"⋚\",\"&LessFullEqual;\":\"≦\",\"&LessGreater;\":\"≶\",\"&LessLess;\":\"⪡\",\"&LessSlantEqual;\":\"⩽\",\"&LessTilde;\":\"≲\",\"&Lfr;\":\"𝔏\",\"&Ll;\":\"⋘\",\"&Lleftarrow;\":\"⇚\",\"&Lmidot;\":\"Ŀ\",\"&LongLeftArrow;\":\"⟵\",\"&LongLeftRightArrow;\":\"⟷\",\"&LongRightArrow;\":\"⟶\",\"&Longleftarrow;\":\"⟸\",\"&Longleftrightarrow;\":\"⟺\",\"&Longrightarrow;\":\"⟹\",\"&Lopf;\":\"𝕃\",\"&LowerLeftArrow;\":\"↙\",\"&LowerRightArrow;\":\"↘\",\"&Lscr;\":\"ℒ\",\"&Lsh;\":\"↰\",\"&Lstrok;\":\"Ł\",\"&Lt;\":\"≪\",\"&Map;\":\"⤅\",\"&Mcy;\":\"М\",\"&MediumSpace;\":\" \",\"&Mellintrf;\":\"ℳ\",\"&Mfr;\":\"𝔐\",\"&MinusPlus;\":\"∓\",\"&Mopf;\":\"𝕄\",\"&Mscr;\":\"ℳ\",\"&Mu;\":\"Μ\",\"&NJcy;\":\"Њ\",\"&Nacute;\":\"Ń\",\"&Ncaron;\":\"Ň\",\"&Ncedil;\":\"Ņ\",\"&Ncy;\":\"Н\",\"&NegativeMediumSpace;\":\"​\",\"&NegativeThickSpace;\":\"​\",\"&NegativeThinSpace;\":\"​\",\"&NegativeVeryThinSpace;\":\"​\",\"&NestedGreaterGreater;\":\"≫\",\"&NestedLessLess;\":\"≪\",\"&NewLine;\":\"\\n\",\"&Nfr;\":\"𝔑\",\"&NoBreak;\":\"⁠\",\"&NonBreakingSpace;\":\" \",\"&Nopf;\":\"ℕ\",\"&Not;\":\"⫬\",\"&NotCongruent;\":\"≢\",\"&NotCupCap;\":\"≭\",\"&NotDoubleVerticalBar;\":\"∦\",\"&NotElement;\":\"∉\",\"&NotEqual;\":\"≠\",\"&NotEqualTilde;\":\"≂̸\",\"&NotExists;\":\"∄\",\"&NotGreater;\":\"≯\",\"&NotGreaterEqual;\":\"≱\",\"&NotGreaterFullEqual;\":\"≧̸\",\"&NotGreaterGreater;\":\"≫̸\",\"&NotGreaterLess;\":\"≹\",\"&NotGreaterSlantEqual;\":\"⩾̸\",\"&NotGreaterTilde;\":\"≵\",\"&NotHumpDownHump;\":\"≎̸\",\"&NotHumpEqual;\":\"≏̸\",\"&NotLeftTriangle;\":\"⋪\",\"&NotLeftTriangleBar;\":\"⧏̸\",\"&NotLeftTriangleEqual;\":\"⋬\",\"&NotLess;\":\"≮\",\"&NotLessEqual;\":\"≰\",\"&NotLessGreater;\":\"≸\",\"&NotLessLess;\":\"≪̸\",\"&NotLessSlantEqual;\":\"⩽̸\",\"&NotLessTilde;\":\"≴\",\"&NotNestedGreaterGreater;\":\"⪢̸\",\"&NotNestedLessLess;\":\"⪡̸\",\"&NotPrecedes;\":\"⊀\",\"&NotPrecedesEqual;\":\"⪯̸\",\"&NotPrecedesSlantEqual;\":\"⋠\",\"&NotReverseElement;\":\"∌\",\"&NotRightTriangle;\":\"⋫\",\"&NotRightTriangleBar;\":\"⧐̸\",\"&NotRightTriangleEqual;\":\"⋭\",\"&NotSquareSubset;\":\"⊏̸\",\"&NotSquareSubsetEqual;\":\"⋢\",\"&NotSquareSuperset;\":\"⊐̸\",\"&NotSquareSupersetEqual;\":\"⋣\",\"&NotSubset;\":\"⊂⃒\",\"&NotSubsetEqual;\":\"⊈\",\"&NotSucceeds;\":\"⊁\",\"&NotSucceedsEqual;\":\"⪰̸\",\"&NotSucceedsSlantEqual;\":\"⋡\",\"&NotSucceedsTilde;\":\"≿̸\",\"&NotSuperset;\":\"⊃⃒\",\"&NotSupersetEqual;\":\"⊉\",\"&NotTilde;\":\"≁\",\"&NotTildeEqual;\":\"≄\",\"&NotTildeFullEqual;\":\"≇\",\"&NotTildeTilde;\":\"≉\",\"&NotVerticalBar;\":\"∤\",\"&Nscr;\":\"𝒩\",\"&Ntilde\":\"Ñ\",\"&Ntilde;\":\"Ñ\",\"&Nu;\":\"Ν\",\"&OElig;\":\"Œ\",\"&Oacute\":\"Ó\",\"&Oacute;\":\"Ó\",\"&Ocirc\":\"Ô\",\"&Ocirc;\":\"Ô\",\"&Ocy;\":\"О\",\"&Odblac;\":\"Ő\",\"&Ofr;\":\"𝔒\",\"&Ograve\":\"Ò\",\"&Ograve;\":\"Ò\",\"&Omacr;\":\"Ō\",\"&Omega;\":\"Ω\",\"&Omicron;\":\"Ο\",\"&Oopf;\":\"𝕆\",\"&OpenCurlyDoubleQuote;\":\"“\",\"&OpenCurlyQuote;\":\"‘\",\"&Or;\":\"⩔\",\"&Oscr;\":\"𝒪\",\"&Oslash\":\"Ø\",\"&Oslash;\":\"Ø\",\"&Otilde\":\"Õ\",\"&Otilde;\":\"Õ\",\"&Otimes;\":\"⨷\",\"&Ouml\":\"Ö\",\"&Ouml;\":\"Ö\",\"&OverBar;\":\"‾\",\"&OverBrace;\":\"⏞\",\"&OverBracket;\":\"⎴\",\"&OverParenthesis;\":\"⏜\",\"&PartialD;\":\"∂\",\"&Pcy;\":\"П\",\"&Pfr;\":\"𝔓\",\"&Phi;\":\"Φ\",\"&Pi;\":\"Π\",\"&PlusMinus;\":\"±\",\"&Poincareplane;\":\"ℌ\",\"&Popf;\":\"ℙ\",\"&Pr;\":\"⪻\",\"&Precedes;\":\"≺\",\"&PrecedesEqual;\":\"⪯\",\"&PrecedesSlantEqual;\":\"≼\",\"&PrecedesTilde;\":\"≾\",\"&Prime;\":\"″\",\"&Product;\":\"∏\",\"&Proportion;\":\"∷\",\"&Proportional;\":\"∝\",\"&Pscr;\":\"𝒫\",\"&Psi;\":\"Ψ\",\"&QUOT\":'\"',\"&QUOT;\":'\"',\"&Qfr;\":\"𝔔\",\"&Qopf;\":\"ℚ\",\"&Qscr;\":\"𝒬\",\"&RBarr;\":\"⤐\",\"&REG\":\"®\",\"&REG;\":\"®\",\"&Racute;\":\"Ŕ\",\"&Rang;\":\"⟫\",\"&Rarr;\":\"↠\",\"&Rarrtl;\":\"⤖\",\"&Rcaron;\":\"Ř\",\"&Rcedil;\":\"Ŗ\",\"&Rcy;\":\"Р\",\"&Re;\":\"ℜ\",\"&ReverseElement;\":\"∋\",\"&ReverseEquilibrium;\":\"⇋\",\"&ReverseUpEquilibrium;\":\"⥯\",\"&Rfr;\":\"ℜ\",\"&Rho;\":\"Ρ\",\"&RightAngleBracket;\":\"⟩\",\"&RightArrow;\":\"→\",\"&RightArrowBar;\":\"⇥\",\"&RightArrowLeftArrow;\":\"⇄\",\"&RightCeiling;\":\"⌉\",\"&RightDoubleBracket;\":\"⟧\",\"&RightDownTeeVector;\":\"⥝\",\"&RightDownVector;\":\"⇂\",\"&RightDownVectorBar;\":\"⥕\",\"&RightFloor;\":\"⌋\",\"&RightTee;\":\"⊢\",\"&RightTeeArrow;\":\"↦\",\"&RightTeeVector;\":\"⥛\",\"&RightTriangle;\":\"⊳\",\"&RightTriangleBar;\":\"⧐\",\"&RightTriangleEqual;\":\"⊵\",\"&RightUpDownVector;\":\"⥏\",\"&RightUpTeeVector;\":\"⥜\",\"&RightUpVector;\":\"↾\",\"&RightUpVectorBar;\":\"⥔\",\"&RightVector;\":\"⇀\",\"&RightVectorBar;\":\"⥓\",\"&Rightarrow;\":\"⇒\",\"&Ropf;\":\"ℝ\",\"&RoundImplies;\":\"⥰\",\"&Rrightarrow;\":\"⇛\",\"&Rscr;\":\"ℛ\",\"&Rsh;\":\"↱\",\"&RuleDelayed;\":\"⧴\",\"&SHCHcy;\":\"Щ\",\"&SHcy;\":\"Ш\",\"&SOFTcy;\":\"Ь\",\"&Sacute;\":\"Ś\",\"&Sc;\":\"⪼\",\"&Scaron;\":\"Š\",\"&Scedil;\":\"Ş\",\"&Scirc;\":\"Ŝ\",\"&Scy;\":\"С\",\"&Sfr;\":\"𝔖\",\"&ShortDownArrow;\":\"↓\",\"&ShortLeftArrow;\":\"←\",\"&ShortRightArrow;\":\"→\",\"&ShortUpArrow;\":\"↑\",\"&Sigma;\":\"Σ\",\"&SmallCircle;\":\"∘\",\"&Sopf;\":\"𝕊\",\"&Sqrt;\":\"√\",\"&Square;\":\"□\",\"&SquareIntersection;\":\"⊓\",\"&SquareSubset;\":\"⊏\",\"&SquareSubsetEqual;\":\"⊑\",\"&SquareSuperset;\":\"⊐\",\"&SquareSupersetEqual;\":\"⊒\",\"&SquareUnion;\":\"⊔\",\"&Sscr;\":\"𝒮\",\"&Star;\":\"⋆\",\"&Sub;\":\"⋐\",\"&Subset;\":\"⋐\",\"&SubsetEqual;\":\"⊆\",\"&Succeeds;\":\"≻\",\"&SucceedsEqual;\":\"⪰\",\"&SucceedsSlantEqual;\":\"≽\",\"&SucceedsTilde;\":\"≿\",\"&SuchThat;\":\"∋\",\"&Sum;\":\"∑\",\"&Sup;\":\"⋑\",\"&Superset;\":\"⊃\",\"&SupersetEqual;\":\"⊇\",\"&Supset;\":\"⋑\",\"&THORN\":\"Þ\",\"&THORN;\":\"Þ\",\"&TRADE;\":\"™\",\"&TSHcy;\":\"Ћ\",\"&TScy;\":\"Ц\",\"&Tab;\":\"\\t\",\"&Tau;\":\"Τ\",\"&Tcaron;\":\"Ť\",\"&Tcedil;\":\"Ţ\",\"&Tcy;\":\"Т\",\"&Tfr;\":\"𝔗\",\"&Therefore;\":\"∴\",\"&Theta;\":\"Θ\",\"&ThickSpace;\":\"  \",\"&ThinSpace;\":\" \",\"&Tilde;\":\"∼\",\"&TildeEqual;\":\"≃\",\"&TildeFullEqual;\":\"≅\",\"&TildeTilde;\":\"≈\",\"&Topf;\":\"𝕋\",\"&TripleDot;\":\"⃛\",\"&Tscr;\":\"𝒯\",\"&Tstrok;\":\"Ŧ\",\"&Uacute\":\"Ú\",\"&Uacute;\":\"Ú\",\"&Uarr;\":\"↟\",\"&Uarrocir;\":\"⥉\",\"&Ubrcy;\":\"Ў\",\"&Ubreve;\":\"Ŭ\",\"&Ucirc\":\"Û\",\"&Ucirc;\":\"Û\",\"&Ucy;\":\"У\",\"&Udblac;\":\"Ű\",\"&Ufr;\":\"𝔘\",\"&Ugrave\":\"Ù\",\"&Ugrave;\":\"Ù\",\"&Umacr;\":\"Ū\",\"&UnderBar;\":\"_\",\"&UnderBrace;\":\"⏟\",\"&UnderBracket;\":\"⎵\",\"&UnderParenthesis;\":\"⏝\",\"&Union;\":\"⋃\",\"&UnionPlus;\":\"⊎\",\"&Uogon;\":\"Ų\",\"&Uopf;\":\"𝕌\",\"&UpArrow;\":\"↑\",\"&UpArrowBar;\":\"⤒\",\"&UpArrowDownArrow;\":\"⇅\",\"&UpDownArrow;\":\"↕\",\"&UpEquilibrium;\":\"⥮\",\"&UpTee;\":\"⊥\",\"&UpTeeArrow;\":\"↥\",\"&Uparrow;\":\"⇑\",\"&Updownarrow;\":\"⇕\",\"&UpperLeftArrow;\":\"↖\",\"&UpperRightArrow;\":\"↗\",\"&Upsi;\":\"ϒ\",\"&Upsilon;\":\"Υ\",\"&Uring;\":\"Ů\",\"&Uscr;\":\"𝒰\",\"&Utilde;\":\"Ũ\",\"&Uuml\":\"Ü\",\"&Uuml;\":\"Ü\",\"&VDash;\":\"⊫\",\"&Vbar;\":\"⫫\",\"&Vcy;\":\"В\",\"&Vdash;\":\"⊩\",\"&Vdashl;\":\"⫦\",\"&Vee;\":\"⋁\",\"&Verbar;\":\"‖\",\"&Vert;\":\"‖\",\"&VerticalBar;\":\"∣\",\"&VerticalLine;\":\"|\",\"&VerticalSeparator;\":\"❘\",\"&VerticalTilde;\":\"≀\",\"&VeryThinSpace;\":\" \",\"&Vfr;\":\"𝔙\",\"&Vopf;\":\"𝕍\",\"&Vscr;\":\"𝒱\",\"&Vvdash;\":\"⊪\",\"&Wcirc;\":\"Ŵ\",\"&Wedge;\":\"⋀\",\"&Wfr;\":\"𝔚\",\"&Wopf;\":\"𝕎\",\"&Wscr;\":\"𝒲\",\"&Xfr;\":\"𝔛\",\"&Xi;\":\"Ξ\",\"&Xopf;\":\"𝕏\",\"&Xscr;\":\"𝒳\",\"&YAcy;\":\"Я\",\"&YIcy;\":\"Ї\",\"&YUcy;\":\"Ю\",\"&Yacute\":\"Ý\",\"&Yacute;\":\"Ý\",\"&Ycirc;\":\"Ŷ\",\"&Ycy;\":\"Ы\",\"&Yfr;\":\"𝔜\",\"&Yopf;\":\"𝕐\",\"&Yscr;\":\"𝒴\",\"&Yuml;\":\"Ÿ\",\"&ZHcy;\":\"Ж\",\"&Zacute;\":\"Ź\",\"&Zcaron;\":\"Ž\",\"&Zcy;\":\"З\",\"&Zdot;\":\"Ż\",\"&ZeroWidthSpace;\":\"​\",\"&Zeta;\":\"Ζ\",\"&Zfr;\":\"ℨ\",\"&Zopf;\":\"ℤ\",\"&Zscr;\":\"𝒵\",\"&aacute\":\"á\",\"&aacute;\":\"á\",\"&abreve;\":\"ă\",\"&ac;\":\"∾\",\"&acE;\":\"∾̳\",\"&acd;\":\"∿\",\"&acirc\":\"â\",\"&acirc;\":\"â\",\"&acute\":\"´\",\"&acute;\":\"´\",\"&acy;\":\"а\",\"&aelig\":\"æ\",\"&aelig;\":\"æ\",\"&af;\":\"⁡\",\"&afr;\":\"𝔞\",\"&agrave\":\"à\",\"&agrave;\":\"à\",\"&alefsym;\":\"ℵ\",\"&aleph;\":\"ℵ\",\"&alpha;\":\"α\",\"&amacr;\":\"ā\",\"&amalg;\":\"⨿\",\"&amp\":\"&\",\"&amp;\":\"&\",\"&and;\":\"∧\",\"&andand;\":\"⩕\",\"&andd;\":\"⩜\",\"&andslope;\":\"⩘\",\"&andv;\":\"⩚\",\"&ang;\":\"∠\",\"&ange;\":\"⦤\",\"&angle;\":\"∠\",\"&angmsd;\":\"∡\",\"&angmsdaa;\":\"⦨\",\"&angmsdab;\":\"⦩\",\"&angmsdac;\":\"⦪\",\"&angmsdad;\":\"⦫\",\"&angmsdae;\":\"⦬\",\"&angmsdaf;\":\"⦭\",\"&angmsdag;\":\"⦮\",\"&angmsdah;\":\"⦯\",\"&angrt;\":\"∟\",\"&angrtvb;\":\"⊾\",\"&angrtvbd;\":\"⦝\",\"&angsph;\":\"∢\",\"&angst;\":\"Å\",\"&angzarr;\":\"⍼\",\"&aogon;\":\"ą\",\"&aopf;\":\"𝕒\",\"&ap;\":\"≈\",\"&apE;\":\"⩰\",\"&apacir;\":\"⩯\",\"&ape;\":\"≊\",\"&apid;\":\"≋\",\"&apos;\":\"'\",\"&approx;\":\"≈\",\"&approxeq;\":\"≊\",\"&aring\":\"å\",\"&aring;\":\"å\",\"&ascr;\":\"𝒶\",\"&ast;\":\"*\",\"&asymp;\":\"≈\",\"&asympeq;\":\"≍\",\"&atilde\":\"ã\",\"&atilde;\":\"ã\",\"&auml\":\"ä\",\"&auml;\":\"ä\",\"&awconint;\":\"∳\",\"&awint;\":\"⨑\",\"&bNot;\":\"⫭\",\"&backcong;\":\"≌\",\"&backepsilon;\":\"϶\",\"&backprime;\":\"‵\",\"&backsim;\":\"∽\",\"&backsimeq;\":\"⋍\",\"&barvee;\":\"⊽\",\"&barwed;\":\"⌅\",\"&barwedge;\":\"⌅\",\"&bbrk;\":\"⎵\",\"&bbrktbrk;\":\"⎶\",\"&bcong;\":\"≌\",\"&bcy;\":\"б\",\"&bdquo;\":\"„\",\"&becaus;\":\"∵\",\"&because;\":\"∵\",\"&bemptyv;\":\"⦰\",\"&bepsi;\":\"϶\",\"&bernou;\":\"ℬ\",\"&beta;\":\"β\",\"&beth;\":\"ℶ\",\"&between;\":\"≬\",\"&bfr;\":\"𝔟\",\"&bigcap;\":\"⋂\",\"&bigcirc;\":\"◯\",\"&bigcup;\":\"⋃\",\"&bigodot;\":\"⨀\",\"&bigoplus;\":\"⨁\",\"&bigotimes;\":\"⨂\",\"&bigsqcup;\":\"⨆\",\"&bigstar;\":\"★\",\"&bigtriangledown;\":\"▽\",\"&bigtriangleup;\":\"△\",\"&biguplus;\":\"⨄\",\"&bigvee;\":\"⋁\",\"&bigwedge;\":\"⋀\",\"&bkarow;\":\"⤍\",\"&blacklozenge;\":\"⧫\",\"&blacksquare;\":\"▪\",\"&blacktriangle;\":\"▴\",\"&blacktriangledown;\":\"▾\",\"&blacktriangleleft;\":\"◂\",\"&blacktriangleright;\":\"▸\",\"&blank;\":\"␣\",\"&blk12;\":\"▒\",\"&blk14;\":\"░\",\"&blk34;\":\"▓\",\"&block;\":\"█\",\"&bne;\":\"=⃥\",\"&bnequiv;\":\"≡⃥\",\"&bnot;\":\"⌐\",\"&bopf;\":\"𝕓\",\"&bot;\":\"⊥\",\"&bottom;\":\"⊥\",\"&bowtie;\":\"⋈\",\"&boxDL;\":\"╗\",\"&boxDR;\":\"╔\",\"&boxDl;\":\"╖\",\"&boxDr;\":\"╓\",\"&boxH;\":\"═\",\"&boxHD;\":\"╦\",\"&boxHU;\":\"╩\",\"&boxHd;\":\"╤\",\"&boxHu;\":\"╧\",\"&boxUL;\":\"╝\",\"&boxUR;\":\"╚\",\"&boxUl;\":\"╜\",\"&boxUr;\":\"╙\",\"&boxV;\":\"║\",\"&boxVH;\":\"╬\",\"&boxVL;\":\"╣\",\"&boxVR;\":\"╠\",\"&boxVh;\":\"╫\",\"&boxVl;\":\"╢\",\"&boxVr;\":\"╟\",\"&boxbox;\":\"⧉\",\"&boxdL;\":\"╕\",\"&boxdR;\":\"╒\",\"&boxdl;\":\"┐\",\"&boxdr;\":\"┌\",\"&boxh;\":\"─\",\"&boxhD;\":\"╥\",\"&boxhU;\":\"╨\",\"&boxhd;\":\"┬\",\"&boxhu;\":\"┴\",\"&boxminus;\":\"⊟\",\"&boxplus;\":\"⊞\",\"&boxtimes;\":\"⊠\",\"&boxuL;\":\"╛\",\"&boxuR;\":\"╘\",\"&boxul;\":\"┘\",\"&boxur;\":\"└\",\"&boxv;\":\"│\",\"&boxvH;\":\"╪\",\"&boxvL;\":\"╡\",\"&boxvR;\":\"╞\",\"&boxvh;\":\"┼\",\"&boxvl;\":\"┤\",\"&boxvr;\":\"├\",\"&bprime;\":\"‵\",\"&breve;\":\"˘\",\"&brvbar\":\"¦\",\"&brvbar;\":\"¦\",\"&bscr;\":\"𝒷\",\"&bsemi;\":\"⁏\",\"&bsim;\":\"∽\",\"&bsime;\":\"⋍\",\"&bsol;\":\"\\\\\",\"&bsolb;\":\"⧅\",\"&bsolhsub;\":\"⟈\",\"&bull;\":\"•\",\"&bullet;\":\"•\",\"&bump;\":\"≎\",\"&bumpE;\":\"⪮\",\"&bumpe;\":\"≏\",\"&bumpeq;\":\"≏\",\"&cacute;\":\"ć\",\"&cap;\":\"∩\",\"&capand;\":\"⩄\",\"&capbrcup;\":\"⩉\",\"&capcap;\":\"⩋\",\"&capcup;\":\"⩇\",\"&capdot;\":\"⩀\",\"&caps;\":\"∩︀\",\"&caret;\":\"⁁\",\"&caron;\":\"ˇ\",\"&ccaps;\":\"⩍\",\"&ccaron;\":\"č\",\"&ccedil\":\"ç\",\"&ccedil;\":\"ç\",\"&ccirc;\":\"ĉ\",\"&ccups;\":\"⩌\",\"&ccupssm;\":\"⩐\",\"&cdot;\":\"ċ\",\"&cedil\":\"¸\",\"&cedil;\":\"¸\",\"&cemptyv;\":\"⦲\",\"&cent\":\"¢\",\"&cent;\":\"¢\",\"&centerdot;\":\"·\",\"&cfr;\":\"𝔠\",\"&chcy;\":\"ч\",\"&check;\":\"✓\",\"&checkmark;\":\"✓\",\"&chi;\":\"χ\",\"&cir;\":\"○\",\"&cirE;\":\"⧃\",\"&circ;\":\"ˆ\",\"&circeq;\":\"≗\",\"&circlearrowleft;\":\"↺\",\"&circlearrowright;\":\"↻\",\"&circledR;\":\"®\",\"&circledS;\":\"Ⓢ\",\"&circledast;\":\"⊛\",\"&circledcirc;\":\"⊚\",\"&circleddash;\":\"⊝\",\"&cire;\":\"≗\",\"&cirfnint;\":\"⨐\",\"&cirmid;\":\"⫯\",\"&cirscir;\":\"⧂\",\"&clubs;\":\"♣\",\"&clubsuit;\":\"♣\",\"&colon;\":\":\",\"&colone;\":\"≔\",\"&coloneq;\":\"≔\",\"&comma;\":\",\",\"&commat;\":\"@\",\"&comp;\":\"∁\",\"&compfn;\":\"∘\",\"&complement;\":\"∁\",\"&complexes;\":\"ℂ\",\"&cong;\":\"≅\",\"&congdot;\":\"⩭\",\"&conint;\":\"∮\",\"&copf;\":\"𝕔\",\"&coprod;\":\"∐\",\"&copy\":\"©\",\"&copy;\":\"©\",\"&copysr;\":\"℗\",\"&crarr;\":\"↵\",\"&cross;\":\"✗\",\"&cscr;\":\"𝒸\",\"&csub;\":\"⫏\",\"&csube;\":\"⫑\",\"&csup;\":\"⫐\",\"&csupe;\":\"⫒\",\"&ctdot;\":\"⋯\",\"&cudarrl;\":\"⤸\",\"&cudarrr;\":\"⤵\",\"&cuepr;\":\"⋞\",\"&cuesc;\":\"⋟\",\"&cularr;\":\"↶\",\"&cularrp;\":\"⤽\",\"&cup;\":\"∪\",\"&cupbrcap;\":\"⩈\",\"&cupcap;\":\"⩆\",\"&cupcup;\":\"⩊\",\"&cupdot;\":\"⊍\",\"&cupor;\":\"⩅\",\"&cups;\":\"∪︀\",\"&curarr;\":\"↷\",\"&curarrm;\":\"⤼\",\"&curlyeqprec;\":\"⋞\",\"&curlyeqsucc;\":\"⋟\",\"&curlyvee;\":\"⋎\",\"&curlywedge;\":\"⋏\",\"&curren\":\"¤\",\"&curren;\":\"¤\",\"&curvearrowleft;\":\"↶\",\"&curvearrowright;\":\"↷\",\"&cuvee;\":\"⋎\",\"&cuwed;\":\"⋏\",\"&cwconint;\":\"∲\",\"&cwint;\":\"∱\",\"&cylcty;\":\"⌭\",\"&dArr;\":\"⇓\",\"&dHar;\":\"⥥\",\"&dagger;\":\"†\",\"&daleth;\":\"ℸ\",\"&darr;\":\"↓\",\"&dash;\":\"‐\",\"&dashv;\":\"⊣\",\"&dbkarow;\":\"⤏\",\"&dblac;\":\"˝\",\"&dcaron;\":\"ď\",\"&dcy;\":\"д\",\"&dd;\":\"ⅆ\",\"&ddagger;\":\"‡\",\"&ddarr;\":\"⇊\",\"&ddotseq;\":\"⩷\",\"&deg\":\"°\",\"&deg;\":\"°\",\"&delta;\":\"δ\",\"&demptyv;\":\"⦱\",\"&dfisht;\":\"⥿\",\"&dfr;\":\"𝔡\",\"&dharl;\":\"⇃\",\"&dharr;\":\"⇂\",\"&diam;\":\"⋄\",\"&diamond;\":\"⋄\",\"&diamondsuit;\":\"♦\",\"&diams;\":\"♦\",\"&die;\":\"¨\",\"&digamma;\":\"ϝ\",\"&disin;\":\"⋲\",\"&div;\":\"÷\",\"&divide\":\"÷\",\"&divide;\":\"÷\",\"&divideontimes;\":\"⋇\",\"&divonx;\":\"⋇\",\"&djcy;\":\"ђ\",\"&dlcorn;\":\"⌞\",\"&dlcrop;\":\"⌍\",\"&dollar;\":\"$\",\"&dopf;\":\"𝕕\",\"&dot;\":\"˙\",\"&doteq;\":\"≐\",\"&doteqdot;\":\"≑\",\"&dotminus;\":\"∸\",\"&dotplus;\":\"∔\",\"&dotsquare;\":\"⊡\",\"&doublebarwedge;\":\"⌆\",\"&downarrow;\":\"↓\",\"&downdownarrows;\":\"⇊\",\"&downharpoonleft;\":\"⇃\",\"&downharpoonright;\":\"⇂\",\"&drbkarow;\":\"⤐\",\"&drcorn;\":\"⌟\",\"&drcrop;\":\"⌌\",\"&dscr;\":\"𝒹\",\"&dscy;\":\"ѕ\",\"&dsol;\":\"⧶\",\"&dstrok;\":\"đ\",\"&dtdot;\":\"⋱\",\"&dtri;\":\"▿\",\"&dtrif;\":\"▾\",\"&duarr;\":\"⇵\",\"&duhar;\":\"⥯\",\"&dwangle;\":\"⦦\",\"&dzcy;\":\"џ\",\"&dzigrarr;\":\"⟿\",\"&eDDot;\":\"⩷\",\"&eDot;\":\"≑\",\"&eacute\":\"é\",\"&eacute;\":\"é\",\"&easter;\":\"⩮\",\"&ecaron;\":\"ě\",\"&ecir;\":\"≖\",\"&ecirc\":\"ê\",\"&ecirc;\":\"ê\",\"&ecolon;\":\"≕\",\"&ecy;\":\"э\",\"&edot;\":\"ė\",\"&ee;\":\"ⅇ\",\"&efDot;\":\"≒\",\"&efr;\":\"𝔢\",\"&eg;\":\"⪚\",\"&egrave\":\"è\",\"&egrave;\":\"è\",\"&egs;\":\"⪖\",\"&egsdot;\":\"⪘\",\"&el;\":\"⪙\",\"&elinters;\":\"⏧\",\"&ell;\":\"ℓ\",\"&els;\":\"⪕\",\"&elsdot;\":\"⪗\",\"&emacr;\":\"ē\",\"&empty;\":\"∅\",\"&emptyset;\":\"∅\",\"&emptyv;\":\"∅\",\"&emsp13;\":\" \",\"&emsp14;\":\" \",\"&emsp;\":\" \",\"&eng;\":\"ŋ\",\"&ensp;\":\" \",\"&eogon;\":\"ę\",\"&eopf;\":\"𝕖\",\"&epar;\":\"⋕\",\"&eparsl;\":\"⧣\",\"&eplus;\":\"⩱\",\"&epsi;\":\"ε\",\"&epsilon;\":\"ε\",\"&epsiv;\":\"ϵ\",\"&eqcirc;\":\"≖\",\"&eqcolon;\":\"≕\",\"&eqsim;\":\"≂\",\"&eqslantgtr;\":\"⪖\",\"&eqslantless;\":\"⪕\",\"&equals;\":\"=\",\"&equest;\":\"≟\",\"&equiv;\":\"≡\",\"&equivDD;\":\"⩸\",\"&eqvparsl;\":\"⧥\",\"&erDot;\":\"≓\",\"&erarr;\":\"⥱\",\"&escr;\":\"ℯ\",\"&esdot;\":\"≐\",\"&esim;\":\"≂\",\"&eta;\":\"η\",\"&eth\":\"ð\",\"&eth;\":\"ð\",\"&euml\":\"ë\",\"&euml;\":\"ë\",\"&euro;\":\"€\",\"&excl;\":\"!\",\"&exist;\":\"∃\",\"&expectation;\":\"ℰ\",\"&exponentiale;\":\"ⅇ\",\"&fallingdotseq;\":\"≒\",\"&fcy;\":\"ф\",\"&female;\":\"♀\",\"&ffilig;\":\"ﬃ\",\"&fflig;\":\"ﬀ\",\"&ffllig;\":\"ﬄ\",\"&ffr;\":\"𝔣\",\"&filig;\":\"ﬁ\",\"&fjlig;\":\"fj\",\"&flat;\":\"♭\",\"&fllig;\":\"ﬂ\",\"&fltns;\":\"▱\",\"&fnof;\":\"ƒ\",\"&fopf;\":\"𝕗\",\"&forall;\":\"∀\",\"&fork;\":\"⋔\",\"&forkv;\":\"⫙\",\"&fpartint;\":\"⨍\",\"&frac12\":\"½\",\"&frac12;\":\"½\",\"&frac13;\":\"⅓\",\"&frac14\":\"¼\",\"&frac14;\":\"¼\",\"&frac15;\":\"⅕\",\"&frac16;\":\"⅙\",\"&frac18;\":\"⅛\",\"&frac23;\":\"⅔\",\"&frac25;\":\"⅖\",\"&frac34\":\"¾\",\"&frac34;\":\"¾\",\"&frac35;\":\"⅗\",\"&frac38;\":\"⅜\",\"&frac45;\":\"⅘\",\"&frac56;\":\"⅚\",\"&frac58;\":\"⅝\",\"&frac78;\":\"⅞\",\"&frasl;\":\"⁄\",\"&frown;\":\"⌢\",\"&fscr;\":\"𝒻\",\"&gE;\":\"≧\",\"&gEl;\":\"⪌\",\"&gacute;\":\"ǵ\",\"&gamma;\":\"γ\",\"&gammad;\":\"ϝ\",\"&gap;\":\"⪆\",\"&gbreve;\":\"ğ\",\"&gcirc;\":\"ĝ\",\"&gcy;\":\"г\",\"&gdot;\":\"ġ\",\"&ge;\":\"≥\",\"&gel;\":\"⋛\",\"&geq;\":\"≥\",\"&geqq;\":\"≧\",\"&geqslant;\":\"⩾\",\"&ges;\":\"⩾\",\"&gescc;\":\"⪩\",\"&gesdot;\":\"⪀\",\"&gesdoto;\":\"⪂\",\"&gesdotol;\":\"⪄\",\"&gesl;\":\"⋛︀\",\"&gesles;\":\"⪔\",\"&gfr;\":\"𝔤\",\"&gg;\":\"≫\",\"&ggg;\":\"⋙\",\"&gimel;\":\"ℷ\",\"&gjcy;\":\"ѓ\",\"&gl;\":\"≷\",\"&glE;\":\"⪒\",\"&gla;\":\"⪥\",\"&glj;\":\"⪤\",\"&gnE;\":\"≩\",\"&gnap;\":\"⪊\",\"&gnapprox;\":\"⪊\",\"&gne;\":\"⪈\",\"&gneq;\":\"⪈\",\"&gneqq;\":\"≩\",\"&gnsim;\":\"⋧\",\"&gopf;\":\"𝕘\",\"&grave;\":\"`\",\"&gscr;\":\"ℊ\",\"&gsim;\":\"≳\",\"&gsime;\":\"⪎\",\"&gsiml;\":\"⪐\",\"&gt\":\">\",\"&gt;\":\">\",\"&gtcc;\":\"⪧\",\"&gtcir;\":\"⩺\",\"&gtdot;\":\"⋗\",\"&gtlPar;\":\"⦕\",\"&gtquest;\":\"⩼\",\"&gtrapprox;\":\"⪆\",\"&gtrarr;\":\"⥸\",\"&gtrdot;\":\"⋗\",\"&gtreqless;\":\"⋛\",\"&gtreqqless;\":\"⪌\",\"&gtrless;\":\"≷\",\"&gtrsim;\":\"≳\",\"&gvertneqq;\":\"≩︀\",\"&gvnE;\":\"≩︀\",\"&hArr;\":\"⇔\",\"&hairsp;\":\" \",\"&half;\":\"½\",\"&hamilt;\":\"ℋ\",\"&hardcy;\":\"ъ\",\"&harr;\":\"↔\",\"&harrcir;\":\"⥈\",\"&harrw;\":\"↭\",\"&hbar;\":\"ℏ\",\"&hcirc;\":\"ĥ\",\"&hearts;\":\"♥\",\"&heartsuit;\":\"♥\",\"&hellip;\":\"…\",\"&hercon;\":\"⊹\",\"&hfr;\":\"𝔥\",\"&hksearow;\":\"⤥\",\"&hkswarow;\":\"⤦\",\"&hoarr;\":\"⇿\",\"&homtht;\":\"∻\",\"&hookleftarrow;\":\"↩\",\"&hookrightarrow;\":\"↪\",\"&hopf;\":\"𝕙\",\"&horbar;\":\"―\",\"&hscr;\":\"𝒽\",\"&hslash;\":\"ℏ\",\"&hstrok;\":\"ħ\",\"&hybull;\":\"⁃\",\"&hyphen;\":\"‐\",\"&iacute\":\"í\",\"&iacute;\":\"í\",\"&ic;\":\"⁣\",\"&icirc\":\"î\",\"&icirc;\":\"î\",\"&icy;\":\"и\",\"&iecy;\":\"е\",\"&iexcl\":\"¡\",\"&iexcl;\":\"¡\",\"&iff;\":\"⇔\",\"&ifr;\":\"𝔦\",\"&igrave\":\"ì\",\"&igrave;\":\"ì\",\"&ii;\":\"ⅈ\",\"&iiiint;\":\"⨌\",\"&iiint;\":\"∭\",\"&iinfin;\":\"⧜\",\"&iiota;\":\"℩\",\"&ijlig;\":\"ĳ\",\"&imacr;\":\"ī\",\"&image;\":\"ℑ\",\"&imagline;\":\"ℐ\",\"&imagpart;\":\"ℑ\",\"&imath;\":\"ı\",\"&imof;\":\"⊷\",\"&imped;\":\"Ƶ\",\"&in;\":\"∈\",\"&incare;\":\"℅\",\"&infin;\":\"∞\",\"&infintie;\":\"⧝\",\"&inodot;\":\"ı\",\"&int;\":\"∫\",\"&intcal;\":\"⊺\",\"&integers;\":\"ℤ\",\"&intercal;\":\"⊺\",\"&intlarhk;\":\"⨗\",\"&intprod;\":\"⨼\",\"&iocy;\":\"ё\",\"&iogon;\":\"į\",\"&iopf;\":\"𝕚\",\"&iota;\":\"ι\",\"&iprod;\":\"⨼\",\"&iquest\":\"¿\",\"&iquest;\":\"¿\",\"&iscr;\":\"𝒾\",\"&isin;\":\"∈\",\"&isinE;\":\"⋹\",\"&isindot;\":\"⋵\",\"&isins;\":\"⋴\",\"&isinsv;\":\"⋳\",\"&isinv;\":\"∈\",\"&it;\":\"⁢\",\"&itilde;\":\"ĩ\",\"&iukcy;\":\"і\",\"&iuml\":\"ï\",\"&iuml;\":\"ï\",\"&jcirc;\":\"ĵ\",\"&jcy;\":\"й\",\"&jfr;\":\"𝔧\",\"&jmath;\":\"ȷ\",\"&jopf;\":\"𝕛\",\"&jscr;\":\"𝒿\",\"&jsercy;\":\"ј\",\"&jukcy;\":\"є\",\"&kappa;\":\"κ\",\"&kappav;\":\"ϰ\",\"&kcedil;\":\"ķ\",\"&kcy;\":\"к\",\"&kfr;\":\"𝔨\",\"&kgreen;\":\"ĸ\",\"&khcy;\":\"х\",\"&kjcy;\":\"ќ\",\"&kopf;\":\"𝕜\",\"&kscr;\":\"𝓀\",\"&lAarr;\":\"⇚\",\"&lArr;\":\"⇐\",\"&lAtail;\":\"⤛\",\"&lBarr;\":\"⤎\",\"&lE;\":\"≦\",\"&lEg;\":\"⪋\",\"&lHar;\":\"⥢\",\"&lacute;\":\"ĺ\",\"&laemptyv;\":\"⦴\",\"&lagran;\":\"ℒ\",\"&lambda;\":\"λ\",\"&lang;\":\"⟨\",\"&langd;\":\"⦑\",\"&langle;\":\"⟨\",\"&lap;\":\"⪅\",\"&laquo\":\"«\",\"&laquo;\":\"«\",\"&larr;\":\"←\",\"&larrb;\":\"⇤\",\"&larrbfs;\":\"⤟\",\"&larrfs;\":\"⤝\",\"&larrhk;\":\"↩\",\"&larrlp;\":\"↫\",\"&larrpl;\":\"⤹\",\"&larrsim;\":\"⥳\",\"&larrtl;\":\"↢\",\"&lat;\":\"⪫\",\"&latail;\":\"⤙\",\"&late;\":\"⪭\",\"&lates;\":\"⪭︀\",\"&lbarr;\":\"⤌\",\"&lbbrk;\":\"❲\",\"&lbrace;\":\"{\",\"&lbrack;\":\"[\",\"&lbrke;\":\"⦋\",\"&lbrksld;\":\"⦏\",\"&lbrkslu;\":\"⦍\",\"&lcaron;\":\"ľ\",\"&lcedil;\":\"ļ\",\"&lceil;\":\"⌈\",\"&lcub;\":\"{\",\"&lcy;\":\"л\",\"&ldca;\":\"⤶\",\"&ldquo;\":\"“\",\"&ldquor;\":\"„\",\"&ldrdhar;\":\"⥧\",\"&ldrushar;\":\"⥋\",\"&ldsh;\":\"↲\",\"&le;\":\"≤\",\"&leftarrow;\":\"←\",\"&leftarrowtail;\":\"↢\",\"&leftharpoondown;\":\"↽\",\"&leftharpoonup;\":\"↼\",\"&leftleftarrows;\":\"⇇\",\"&leftrightarrow;\":\"↔\",\"&leftrightarrows;\":\"⇆\",\"&leftrightharpoons;\":\"⇋\",\"&leftrightsquigarrow;\":\"↭\",\"&leftthreetimes;\":\"⋋\",\"&leg;\":\"⋚\",\"&leq;\":\"≤\",\"&leqq;\":\"≦\",\"&leqslant;\":\"⩽\",\"&les;\":\"⩽\",\"&lescc;\":\"⪨\",\"&lesdot;\":\"⩿\",\"&lesdoto;\":\"⪁\",\"&lesdotor;\":\"⪃\",\"&lesg;\":\"⋚︀\",\"&lesges;\":\"⪓\",\"&lessapprox;\":\"⪅\",\"&lessdot;\":\"⋖\",\"&lesseqgtr;\":\"⋚\",\"&lesseqqgtr;\":\"⪋\",\"&lessgtr;\":\"≶\",\"&lesssim;\":\"≲\",\"&lfisht;\":\"⥼\",\"&lfloor;\":\"⌊\",\"&lfr;\":\"𝔩\",\"&lg;\":\"≶\",\"&lgE;\":\"⪑\",\"&lhard;\":\"↽\",\"&lharu;\":\"↼\",\"&lharul;\":\"⥪\",\"&lhblk;\":\"▄\",\"&ljcy;\":\"љ\",\"&ll;\":\"≪\",\"&llarr;\":\"⇇\",\"&llcorner;\":\"⌞\",\"&llhard;\":\"⥫\",\"&lltri;\":\"◺\",\"&lmidot;\":\"ŀ\",\"&lmoust;\":\"⎰\",\"&lmoustache;\":\"⎰\",\"&lnE;\":\"≨\",\"&lnap;\":\"⪉\",\"&lnapprox;\":\"⪉\",\"&lne;\":\"⪇\",\"&lneq;\":\"⪇\",\"&lneqq;\":\"≨\",\"&lnsim;\":\"⋦\",\"&loang;\":\"⟬\",\"&loarr;\":\"⇽\",\"&lobrk;\":\"⟦\",\"&longleftarrow;\":\"⟵\",\"&longleftrightarrow;\":\"⟷\",\"&longmapsto;\":\"⟼\",\"&longrightarrow;\":\"⟶\",\"&looparrowleft;\":\"↫\",\"&looparrowright;\":\"↬\",\"&lopar;\":\"⦅\",\"&lopf;\":\"𝕝\",\"&loplus;\":\"⨭\",\"&lotimes;\":\"⨴\",\"&lowast;\":\"∗\",\"&lowbar;\":\"_\",\"&loz;\":\"◊\",\"&lozenge;\":\"◊\",\"&lozf;\":\"⧫\",\"&lpar;\":\"(\",\"&lparlt;\":\"⦓\",\"&lrarr;\":\"⇆\",\"&lrcorner;\":\"⌟\",\"&lrhar;\":\"⇋\",\"&lrhard;\":\"⥭\",\"&lrm;\":\"‎\",\"&lrtri;\":\"⊿\",\"&lsaquo;\":\"‹\",\"&lscr;\":\"𝓁\",\"&lsh;\":\"↰\",\"&lsim;\":\"≲\",\"&lsime;\":\"⪍\",\"&lsimg;\":\"⪏\",\"&lsqb;\":\"[\",\"&lsquo;\":\"‘\",\"&lsquor;\":\"‚\",\"&lstrok;\":\"ł\",\"&lt\":\"<\",\"&lt;\":\"<\",\"&ltcc;\":\"⪦\",\"&ltcir;\":\"⩹\",\"&ltdot;\":\"⋖\",\"&lthree;\":\"⋋\",\"&ltimes;\":\"⋉\",\"&ltlarr;\":\"⥶\",\"&ltquest;\":\"⩻\",\"&ltrPar;\":\"⦖\",\"&ltri;\":\"◃\",\"&ltrie;\":\"⊴\",\"&ltrif;\":\"◂\",\"&lurdshar;\":\"⥊\",\"&luruhar;\":\"⥦\",\"&lvertneqq;\":\"≨︀\",\"&lvnE;\":\"≨︀\",\"&mDDot;\":\"∺\",\"&macr\":\"¯\",\"&macr;\":\"¯\",\"&male;\":\"♂\",\"&malt;\":\"✠\",\"&maltese;\":\"✠\",\"&map;\":\"↦\",\"&mapsto;\":\"↦\",\"&mapstodown;\":\"↧\",\"&mapstoleft;\":\"↤\",\"&mapstoup;\":\"↥\",\"&marker;\":\"▮\",\"&mcomma;\":\"⨩\",\"&mcy;\":\"м\",\"&mdash;\":\"—\",\"&measuredangle;\":\"∡\",\"&mfr;\":\"𝔪\",\"&mho;\":\"℧\",\"&micro\":\"µ\",\"&micro;\":\"µ\",\"&mid;\":\"∣\",\"&midast;\":\"*\",\"&midcir;\":\"⫰\",\"&middot\":\"·\",\"&middot;\":\"·\",\"&minus;\":\"−\",\"&minusb;\":\"⊟\",\"&minusd;\":\"∸\",\"&minusdu;\":\"⨪\",\"&mlcp;\":\"⫛\",\"&mldr;\":\"…\",\"&mnplus;\":\"∓\",\"&models;\":\"⊧\",\"&mopf;\":\"𝕞\",\"&mp;\":\"∓\",\"&mscr;\":\"𝓂\",\"&mstpos;\":\"∾\",\"&mu;\":\"μ\",\"&multimap;\":\"⊸\",\"&mumap;\":\"⊸\",\"&nGg;\":\"⋙̸\",\"&nGt;\":\"≫⃒\",\"&nGtv;\":\"≫̸\",\"&nLeftarrow;\":\"⇍\",\"&nLeftrightarrow;\":\"⇎\",\"&nLl;\":\"⋘̸\",\"&nLt;\":\"≪⃒\",\"&nLtv;\":\"≪̸\",\"&nRightarrow;\":\"⇏\",\"&nVDash;\":\"⊯\",\"&nVdash;\":\"⊮\",\"&nabla;\":\"∇\",\"&nacute;\":\"ń\",\"&nang;\":\"∠⃒\",\"&nap;\":\"≉\",\"&napE;\":\"⩰̸\",\"&napid;\":\"≋̸\",\"&napos;\":\"ŉ\",\"&napprox;\":\"≉\",\"&natur;\":\"♮\",\"&natural;\":\"♮\",\"&naturals;\":\"ℕ\",\"&nbsp\":\" \",\"&nbsp;\":\" \",\"&nbump;\":\"≎̸\",\"&nbumpe;\":\"≏̸\",\"&ncap;\":\"⩃\",\"&ncaron;\":\"ň\",\"&ncedil;\":\"ņ\",\"&ncong;\":\"≇\",\"&ncongdot;\":\"⩭̸\",\"&ncup;\":\"⩂\",\"&ncy;\":\"н\",\"&ndash;\":\"–\",\"&ne;\":\"≠\",\"&neArr;\":\"⇗\",\"&nearhk;\":\"⤤\",\"&nearr;\":\"↗\",\"&nearrow;\":\"↗\",\"&nedot;\":\"≐̸\",\"&nequiv;\":\"≢\",\"&nesear;\":\"⤨\",\"&nesim;\":\"≂̸\",\"&nexist;\":\"∄\",\"&nexists;\":\"∄\",\"&nfr;\":\"𝔫\",\"&ngE;\":\"≧̸\",\"&nge;\":\"≱\",\"&ngeq;\":\"≱\",\"&ngeqq;\":\"≧̸\",\"&ngeqslant;\":\"⩾̸\",\"&nges;\":\"⩾̸\",\"&ngsim;\":\"≵\",\"&ngt;\":\"≯\",\"&ngtr;\":\"≯\",\"&nhArr;\":\"⇎\",\"&nharr;\":\"↮\",\"&nhpar;\":\"⫲\",\"&ni;\":\"∋\",\"&nis;\":\"⋼\",\"&nisd;\":\"⋺\",\"&niv;\":\"∋\",\"&njcy;\":\"њ\",\"&nlArr;\":\"⇍\",\"&nlE;\":\"≦̸\",\"&nlarr;\":\"↚\",\"&nldr;\":\"‥\",\"&nle;\":\"≰\",\"&nleftarrow;\":\"↚\",\"&nleftrightarrow;\":\"↮\",\"&nleq;\":\"≰\",\"&nleqq;\":\"≦̸\",\"&nleqslant;\":\"⩽̸\",\"&nles;\":\"⩽̸\",\"&nless;\":\"≮\",\"&nlsim;\":\"≴\",\"&nlt;\":\"≮\",\"&nltri;\":\"⋪\",\"&nltrie;\":\"⋬\",\"&nmid;\":\"∤\",\"&nopf;\":\"𝕟\",\"&not\":\"¬\",\"&not;\":\"¬\",\"&notin;\":\"∉\",\"&notinE;\":\"⋹̸\",\"&notindot;\":\"⋵̸\",\"&notinva;\":\"∉\",\"&notinvb;\":\"⋷\",\"&notinvc;\":\"⋶\",\"&notni;\":\"∌\",\"&notniva;\":\"∌\",\"&notnivb;\":\"⋾\",\"&notnivc;\":\"⋽\",\"&npar;\":\"∦\",\"&nparallel;\":\"∦\",\"&nparsl;\":\"⫽⃥\",\"&npart;\":\"∂̸\",\"&npolint;\":\"⨔\",\"&npr;\":\"⊀\",\"&nprcue;\":\"⋠\",\"&npre;\":\"⪯̸\",\"&nprec;\":\"⊀\",\"&npreceq;\":\"⪯̸\",\"&nrArr;\":\"⇏\",\"&nrarr;\":\"↛\",\"&nrarrc;\":\"⤳̸\",\"&nrarrw;\":\"↝̸\",\"&nrightarrow;\":\"↛\",\"&nrtri;\":\"⋫\",\"&nrtrie;\":\"⋭\",\"&nsc;\":\"⊁\",\"&nsccue;\":\"⋡\",\"&nsce;\":\"⪰̸\",\"&nscr;\":\"𝓃\",\"&nshortmid;\":\"∤\",\"&nshortparallel;\":\"∦\",\"&nsim;\":\"≁\",\"&nsime;\":\"≄\",\"&nsimeq;\":\"≄\",\"&nsmid;\":\"∤\",\"&nspar;\":\"∦\",\"&nsqsube;\":\"⋢\",\"&nsqsupe;\":\"⋣\",\"&nsub;\":\"⊄\",\"&nsubE;\":\"⫅̸\",\"&nsube;\":\"⊈\",\"&nsubset;\":\"⊂⃒\",\"&nsubseteq;\":\"⊈\",\"&nsubseteqq;\":\"⫅̸\",\"&nsucc;\":\"⊁\",\"&nsucceq;\":\"⪰̸\",\"&nsup;\":\"⊅\",\"&nsupE;\":\"⫆̸\",\"&nsupe;\":\"⊉\",\"&nsupset;\":\"⊃⃒\",\"&nsupseteq;\":\"⊉\",\"&nsupseteqq;\":\"⫆̸\",\"&ntgl;\":\"≹\",\"&ntilde\":\"ñ\",\"&ntilde;\":\"ñ\",\"&ntlg;\":\"≸\",\"&ntriangleleft;\":\"⋪\",\"&ntrianglelefteq;\":\"⋬\",\"&ntriangleright;\":\"⋫\",\"&ntrianglerighteq;\":\"⋭\",\"&nu;\":\"ν\",\"&num;\":\"#\",\"&numero;\":\"№\",\"&numsp;\":\" \",\"&nvDash;\":\"⊭\",\"&nvHarr;\":\"⤄\",\"&nvap;\":\"≍⃒\",\"&nvdash;\":\"⊬\",\"&nvge;\":\"≥⃒\",\"&nvgt;\":\">⃒\",\"&nvinfin;\":\"⧞\",\"&nvlArr;\":\"⤂\",\"&nvle;\":\"≤⃒\",\"&nvlt;\":\"<⃒\",\"&nvltrie;\":\"⊴⃒\",\"&nvrArr;\":\"⤃\",\"&nvrtrie;\":\"⊵⃒\",\"&nvsim;\":\"∼⃒\",\"&nwArr;\":\"⇖\",\"&nwarhk;\":\"⤣\",\"&nwarr;\":\"↖\",\"&nwarrow;\":\"↖\",\"&nwnear;\":\"⤧\",\"&oS;\":\"Ⓢ\",\"&oacute\":\"ó\",\"&oacute;\":\"ó\",\"&oast;\":\"⊛\",\"&ocir;\":\"⊚\",\"&ocirc\":\"ô\",\"&ocirc;\":\"ô\",\"&ocy;\":\"о\",\"&odash;\":\"⊝\",\"&odblac;\":\"ő\",\"&odiv;\":\"⨸\",\"&odot;\":\"⊙\",\"&odsold;\":\"⦼\",\"&oelig;\":\"œ\",\"&ofcir;\":\"⦿\",\"&ofr;\":\"𝔬\",\"&ogon;\":\"˛\",\"&ograve\":\"ò\",\"&ograve;\":\"ò\",\"&ogt;\":\"⧁\",\"&ohbar;\":\"⦵\",\"&ohm;\":\"Ω\",\"&oint;\":\"∮\",\"&olarr;\":\"↺\",\"&olcir;\":\"⦾\",\"&olcross;\":\"⦻\",\"&oline;\":\"‾\",\"&olt;\":\"⧀\",\"&omacr;\":\"ō\",\"&omega;\":\"ω\",\"&omicron;\":\"ο\",\"&omid;\":\"⦶\",\"&ominus;\":\"⊖\",\"&oopf;\":\"𝕠\",\"&opar;\":\"⦷\",\"&operp;\":\"⦹\",\"&oplus;\":\"⊕\",\"&or;\":\"∨\",\"&orarr;\":\"↻\",\"&ord;\":\"⩝\",\"&order;\":\"ℴ\",\"&orderof;\":\"ℴ\",\"&ordf\":\"ª\",\"&ordf;\":\"ª\",\"&ordm\":\"º\",\"&ordm;\":\"º\",\"&origof;\":\"⊶\",\"&oror;\":\"⩖\",\"&orslope;\":\"⩗\",\"&orv;\":\"⩛\",\"&oscr;\":\"ℴ\",\"&oslash\":\"ø\",\"&oslash;\":\"ø\",\"&osol;\":\"⊘\",\"&otilde\":\"õ\",\"&otilde;\":\"õ\",\"&otimes;\":\"⊗\",\"&otimesas;\":\"⨶\",\"&ouml\":\"ö\",\"&ouml;\":\"ö\",\"&ovbar;\":\"⌽\",\"&par;\":\"∥\",\"&para\":\"¶\",\"&para;\":\"¶\",\"&parallel;\":\"∥\",\"&parsim;\":\"⫳\",\"&parsl;\":\"⫽\",\"&part;\":\"∂\",\"&pcy;\":\"п\",\"&percnt;\":\"%\",\"&period;\":\".\",\"&permil;\":\"‰\",\"&perp;\":\"⊥\",\"&pertenk;\":\"‱\",\"&pfr;\":\"𝔭\",\"&phi;\":\"φ\",\"&phiv;\":\"ϕ\",\"&phmmat;\":\"ℳ\",\"&phone;\":\"☎\",\"&pi;\":\"π\",\"&pitchfork;\":\"⋔\",\"&piv;\":\"ϖ\",\"&planck;\":\"ℏ\",\"&planckh;\":\"ℎ\",\"&plankv;\":\"ℏ\",\"&plus;\":\"+\",\"&plusacir;\":\"⨣\",\"&plusb;\":\"⊞\",\"&pluscir;\":\"⨢\",\"&plusdo;\":\"∔\",\"&plusdu;\":\"⨥\",\"&pluse;\":\"⩲\",\"&plusmn\":\"±\",\"&plusmn;\":\"±\",\"&plussim;\":\"⨦\",\"&plustwo;\":\"⨧\",\"&pm;\":\"±\",\"&pointint;\":\"⨕\",\"&popf;\":\"𝕡\",\"&pound\":\"£\",\"&pound;\":\"£\",\"&pr;\":\"≺\",\"&prE;\":\"⪳\",\"&prap;\":\"⪷\",\"&prcue;\":\"≼\",\"&pre;\":\"⪯\",\"&prec;\":\"≺\",\"&precapprox;\":\"⪷\",\"&preccurlyeq;\":\"≼\",\"&preceq;\":\"⪯\",\"&precnapprox;\":\"⪹\",\"&precneqq;\":\"⪵\",\"&precnsim;\":\"⋨\",\"&precsim;\":\"≾\",\"&prime;\":\"′\",\"&primes;\":\"ℙ\",\"&prnE;\":\"⪵\",\"&prnap;\":\"⪹\",\"&prnsim;\":\"⋨\",\"&prod;\":\"∏\",\"&profalar;\":\"⌮\",\"&profline;\":\"⌒\",\"&profsurf;\":\"⌓\",\"&prop;\":\"∝\",\"&propto;\":\"∝\",\"&prsim;\":\"≾\",\"&prurel;\":\"⊰\",\"&pscr;\":\"𝓅\",\"&psi;\":\"ψ\",\"&puncsp;\":\" \",\"&qfr;\":\"𝔮\",\"&qint;\":\"⨌\",\"&qopf;\":\"𝕢\",\"&qprime;\":\"⁗\",\"&qscr;\":\"𝓆\",\"&quaternions;\":\"ℍ\",\"&quatint;\":\"⨖\",\"&quest;\":\"?\",\"&questeq;\":\"≟\",\"&quot\":'\"',\"&quot;\":'\"',\"&rAarr;\":\"⇛\",\"&rArr;\":\"⇒\",\"&rAtail;\":\"⤜\",\"&rBarr;\":\"⤏\",\"&rHar;\":\"⥤\",\"&race;\":\"∽̱\",\"&racute;\":\"ŕ\",\"&radic;\":\"√\",\"&raemptyv;\":\"⦳\",\"&rang;\":\"⟩\",\"&rangd;\":\"⦒\",\"&range;\":\"⦥\",\"&rangle;\":\"⟩\",\"&raquo\":\"»\",\"&raquo;\":\"»\",\"&rarr;\":\"→\",\"&rarrap;\":\"⥵\",\"&rarrb;\":\"⇥\",\"&rarrbfs;\":\"⤠\",\"&rarrc;\":\"⤳\",\"&rarrfs;\":\"⤞\",\"&rarrhk;\":\"↪\",\"&rarrlp;\":\"↬\",\"&rarrpl;\":\"⥅\",\"&rarrsim;\":\"⥴\",\"&rarrtl;\":\"↣\",\"&rarrw;\":\"↝\",\"&ratail;\":\"⤚\",\"&ratio;\":\"∶\",\"&rationals;\":\"ℚ\",\"&rbarr;\":\"⤍\",\"&rbbrk;\":\"❳\",\"&rbrace;\":\"}\",\"&rbrack;\":\"]\",\"&rbrke;\":\"⦌\",\"&rbrksld;\":\"⦎\",\"&rbrkslu;\":\"⦐\",\"&rcaron;\":\"ř\",\"&rcedil;\":\"ŗ\",\"&rceil;\":\"⌉\",\"&rcub;\":\"}\",\"&rcy;\":\"р\",\"&rdca;\":\"⤷\",\"&rdldhar;\":\"⥩\",\"&rdquo;\":\"”\",\"&rdquor;\":\"”\",\"&rdsh;\":\"↳\",\"&real;\":\"ℜ\",\"&realine;\":\"ℛ\",\"&realpart;\":\"ℜ\",\"&reals;\":\"ℝ\",\"&rect;\":\"▭\",\"&reg\":\"®\",\"&reg;\":\"®\",\"&rfisht;\":\"⥽\",\"&rfloor;\":\"⌋\",\"&rfr;\":\"𝔯\",\"&rhard;\":\"⇁\",\"&rharu;\":\"⇀\",\"&rharul;\":\"⥬\",\"&rho;\":\"ρ\",\"&rhov;\":\"ϱ\",\"&rightarrow;\":\"→\",\"&rightarrowtail;\":\"↣\",\"&rightharpoondown;\":\"⇁\",\"&rightharpoonup;\":\"⇀\",\"&rightleftarrows;\":\"⇄\",\"&rightleftharpoons;\":\"⇌\",\"&rightrightarrows;\":\"⇉\",\"&rightsquigarrow;\":\"↝\",\"&rightthreetimes;\":\"⋌\",\"&ring;\":\"˚\",\"&risingdotseq;\":\"≓\",\"&rlarr;\":\"⇄\",\"&rlhar;\":\"⇌\",\"&rlm;\":\"‏\",\"&rmoust;\":\"⎱\",\"&rmoustache;\":\"⎱\",\"&rnmid;\":\"⫮\",\"&roang;\":\"⟭\",\"&roarr;\":\"⇾\",\"&robrk;\":\"⟧\",\"&ropar;\":\"⦆\",\"&ropf;\":\"𝕣\",\"&roplus;\":\"⨮\",\"&rotimes;\":\"⨵\",\"&rpar;\":\")\",\"&rpargt;\":\"⦔\",\"&rppolint;\":\"⨒\",\"&rrarr;\":\"⇉\",\"&rsaquo;\":\"›\",\"&rscr;\":\"𝓇\",\"&rsh;\":\"↱\",\"&rsqb;\":\"]\",\"&rsquo;\":\"’\",\"&rsquor;\":\"’\",\"&rthree;\":\"⋌\",\"&rtimes;\":\"⋊\",\"&rtri;\":\"▹\",\"&rtrie;\":\"⊵\",\"&rtrif;\":\"▸\",\"&rtriltri;\":\"⧎\",\"&ruluhar;\":\"⥨\",\"&rx;\":\"℞\",\"&sacute;\":\"ś\",\"&sbquo;\":\"‚\",\"&sc;\":\"≻\",\"&scE;\":\"⪴\",\"&scap;\":\"⪸\",\"&scaron;\":\"š\",\"&sccue;\":\"≽\",\"&sce;\":\"⪰\",\"&scedil;\":\"ş\",\"&scirc;\":\"ŝ\",\"&scnE;\":\"⪶\",\"&scnap;\":\"⪺\",\"&scnsim;\":\"⋩\",\"&scpolint;\":\"⨓\",\"&scsim;\":\"≿\",\"&scy;\":\"с\",\"&sdot;\":\"⋅\",\"&sdotb;\":\"⊡\",\"&sdote;\":\"⩦\",\"&seArr;\":\"⇘\",\"&searhk;\":\"⤥\",\"&searr;\":\"↘\",\"&searrow;\":\"↘\",\"&sect\":\"§\",\"&sect;\":\"§\",\"&semi;\":\";\",\"&seswar;\":\"⤩\",\"&setminus;\":\"∖\",\"&setmn;\":\"∖\",\"&sext;\":\"✶\",\"&sfr;\":\"𝔰\",\"&sfrown;\":\"⌢\",\"&sharp;\":\"♯\",\"&shchcy;\":\"щ\",\"&shcy;\":\"ш\",\"&shortmid;\":\"∣\",\"&shortparallel;\":\"∥\",\"&shy\":\"­\",\"&shy;\":\"­\",\"&sigma;\":\"σ\",\"&sigmaf;\":\"ς\",\"&sigmav;\":\"ς\",\"&sim;\":\"∼\",\"&simdot;\":\"⩪\",\"&sime;\":\"≃\",\"&simeq;\":\"≃\",\"&simg;\":\"⪞\",\"&simgE;\":\"⪠\",\"&siml;\":\"⪝\",\"&simlE;\":\"⪟\",\"&simne;\":\"≆\",\"&simplus;\":\"⨤\",\"&simrarr;\":\"⥲\",\"&slarr;\":\"←\",\"&smallsetminus;\":\"∖\",\"&smashp;\":\"⨳\",\"&smeparsl;\":\"⧤\",\"&smid;\":\"∣\",\"&smile;\":\"⌣\",\"&smt;\":\"⪪\",\"&smte;\":\"⪬\",\"&smtes;\":\"⪬︀\",\"&softcy;\":\"ь\",\"&sol;\":\"/\",\"&solb;\":\"⧄\",\"&solbar;\":\"⌿\",\"&sopf;\":\"𝕤\",\"&spades;\":\"♠\",\"&spadesuit;\":\"♠\",\"&spar;\":\"∥\",\"&sqcap;\":\"⊓\",\"&sqcaps;\":\"⊓︀\",\"&sqcup;\":\"⊔\",\"&sqcups;\":\"⊔︀\",\"&sqsub;\":\"⊏\",\"&sqsube;\":\"⊑\",\"&sqsubset;\":\"⊏\",\"&sqsubseteq;\":\"⊑\",\"&sqsup;\":\"⊐\",\"&sqsupe;\":\"⊒\",\"&sqsupset;\":\"⊐\",\"&sqsupseteq;\":\"⊒\",\"&squ;\":\"□\",\"&square;\":\"□\",\"&squarf;\":\"▪\",\"&squf;\":\"▪\",\"&srarr;\":\"→\",\"&sscr;\":\"𝓈\",\"&ssetmn;\":\"∖\",\"&ssmile;\":\"⌣\",\"&sstarf;\":\"⋆\",\"&star;\":\"☆\",\"&starf;\":\"★\",\"&straightepsilon;\":\"ϵ\",\"&straightphi;\":\"ϕ\",\"&strns;\":\"¯\",\"&sub;\":\"⊂\",\"&subE;\":\"⫅\",\"&subdot;\":\"⪽\",\"&sube;\":\"⊆\",\"&subedot;\":\"⫃\",\"&submult;\":\"⫁\",\"&subnE;\":\"⫋\",\"&subne;\":\"⊊\",\"&subplus;\":\"⪿\",\"&subrarr;\":\"⥹\",\"&subset;\":\"⊂\",\"&subseteq;\":\"⊆\",\"&subseteqq;\":\"⫅\",\"&subsetneq;\":\"⊊\",\"&subsetneqq;\":\"⫋\",\"&subsim;\":\"⫇\",\"&subsub;\":\"⫕\",\"&subsup;\":\"⫓\",\"&succ;\":\"≻\",\"&succapprox;\":\"⪸\",\"&succcurlyeq;\":\"≽\",\"&succeq;\":\"⪰\",\"&succnapprox;\":\"⪺\",\"&succneqq;\":\"⪶\",\"&succnsim;\":\"⋩\",\"&succsim;\":\"≿\",\"&sum;\":\"∑\",\"&sung;\":\"♪\",\"&sup1\":\"¹\",\"&sup1;\":\"¹\",\"&sup2\":\"²\",\"&sup2;\":\"²\",\"&sup3\":\"³\",\"&sup3;\":\"³\",\"&sup;\":\"⊃\",\"&supE;\":\"⫆\",\"&supdot;\":\"⪾\",\"&supdsub;\":\"⫘\",\"&supe;\":\"⊇\",\"&supedot;\":\"⫄\",\"&suphsol;\":\"⟉\",\"&suphsub;\":\"⫗\",\"&suplarr;\":\"⥻\",\"&supmult;\":\"⫂\",\"&supnE;\":\"⫌\",\"&supne;\":\"⊋\",\"&supplus;\":\"⫀\",\"&supset;\":\"⊃\",\"&supseteq;\":\"⊇\",\"&supseteqq;\":\"⫆\",\"&supsetneq;\":\"⊋\",\"&supsetneqq;\":\"⫌\",\"&supsim;\":\"⫈\",\"&supsub;\":\"⫔\",\"&supsup;\":\"⫖\",\"&swArr;\":\"⇙\",\"&swarhk;\":\"⤦\",\"&swarr;\":\"↙\",\"&swarrow;\":\"↙\",\"&swnwar;\":\"⤪\",\"&szlig\":\"ß\",\"&szlig;\":\"ß\",\"&target;\":\"⌖\",\"&tau;\":\"τ\",\"&tbrk;\":\"⎴\",\"&tcaron;\":\"ť\",\"&tcedil;\":\"ţ\",\"&tcy;\":\"т\",\"&tdot;\":\"⃛\",\"&telrec;\":\"⌕\",\"&tfr;\":\"𝔱\",\"&there4;\":\"∴\",\"&therefore;\":\"∴\",\"&theta;\":\"θ\",\"&thetasym;\":\"ϑ\",\"&thetav;\":\"ϑ\",\"&thickapprox;\":\"≈\",\"&thicksim;\":\"∼\",\"&thinsp;\":\" \",\"&thkap;\":\"≈\",\"&thksim;\":\"∼\",\"&thorn\":\"þ\",\"&thorn;\":\"þ\",\"&tilde;\":\"˜\",\"&times\":\"×\",\"&times;\":\"×\",\"&timesb;\":\"⊠\",\"&timesbar;\":\"⨱\",\"&timesd;\":\"⨰\",\"&tint;\":\"∭\",\"&toea;\":\"⤨\",\"&top;\":\"⊤\",\"&topbot;\":\"⌶\",\"&topcir;\":\"⫱\",\"&topf;\":\"𝕥\",\"&topfork;\":\"⫚\",\"&tosa;\":\"⤩\",\"&tprime;\":\"‴\",\"&trade;\":\"™\",\"&triangle;\":\"▵\",\"&triangledown;\":\"▿\",\"&triangleleft;\":\"◃\",\"&trianglelefteq;\":\"⊴\",\"&triangleq;\":\"≜\",\"&triangleright;\":\"▹\",\"&trianglerighteq;\":\"⊵\",\"&tridot;\":\"◬\",\"&trie;\":\"≜\",\"&triminus;\":\"⨺\",\"&triplus;\":\"⨹\",\"&trisb;\":\"⧍\",\"&tritime;\":\"⨻\",\"&trpezium;\":\"⏢\",\"&tscr;\":\"𝓉\",\"&tscy;\":\"ц\",\"&tshcy;\":\"ћ\",\"&tstrok;\":\"ŧ\",\"&twixt;\":\"≬\",\"&twoheadleftarrow;\":\"↞\",\"&twoheadrightarrow;\":\"↠\",\"&uArr;\":\"⇑\",\"&uHar;\":\"⥣\",\"&uacute\":\"ú\",\"&uacute;\":\"ú\",\"&uarr;\":\"↑\",\"&ubrcy;\":\"ў\",\"&ubreve;\":\"ŭ\",\"&ucirc\":\"û\",\"&ucirc;\":\"û\",\"&ucy;\":\"у\",\"&udarr;\":\"⇅\",\"&udblac;\":\"ű\",\"&udhar;\":\"⥮\",\"&ufisht;\":\"⥾\",\"&ufr;\":\"𝔲\",\"&ugrave\":\"ù\",\"&ugrave;\":\"ù\",\"&uharl;\":\"↿\",\"&uharr;\":\"↾\",\"&uhblk;\":\"▀\",\"&ulcorn;\":\"⌜\",\"&ulcorner;\":\"⌜\",\"&ulcrop;\":\"⌏\",\"&ultri;\":\"◸\",\"&umacr;\":\"ū\",\"&uml\":\"¨\",\"&uml;\":\"¨\",\"&uogon;\":\"ų\",\"&uopf;\":\"𝕦\",\"&uparrow;\":\"↑\",\"&updownarrow;\":\"↕\",\"&upharpoonleft;\":\"↿\",\"&upharpoonright;\":\"↾\",\"&uplus;\":\"⊎\",\"&upsi;\":\"υ\",\"&upsih;\":\"ϒ\",\"&upsilon;\":\"υ\",\"&upuparrows;\":\"⇈\",\"&urcorn;\":\"⌝\",\"&urcorner;\":\"⌝\",\"&urcrop;\":\"⌎\",\"&uring;\":\"ů\",\"&urtri;\":\"◹\",\"&uscr;\":\"𝓊\",\"&utdot;\":\"⋰\",\"&utilde;\":\"ũ\",\"&utri;\":\"▵\",\"&utrif;\":\"▴\",\"&uuarr;\":\"⇈\",\"&uuml\":\"ü\",\"&uuml;\":\"ü\",\"&uwangle;\":\"⦧\",\"&vArr;\":\"⇕\",\"&vBar;\":\"⫨\",\"&vBarv;\":\"⫩\",\"&vDash;\":\"⊨\",\"&vangrt;\":\"⦜\",\"&varepsilon;\":\"ϵ\",\"&varkappa;\":\"ϰ\",\"&varnothing;\":\"∅\",\"&varphi;\":\"ϕ\",\"&varpi;\":\"ϖ\",\"&varpropto;\":\"∝\",\"&varr;\":\"↕\",\"&varrho;\":\"ϱ\",\"&varsigma;\":\"ς\",\"&varsubsetneq;\":\"⊊︀\",\"&varsubsetneqq;\":\"⫋︀\",\"&varsupsetneq;\":\"⊋︀\",\"&varsupsetneqq;\":\"⫌︀\",\"&vartheta;\":\"ϑ\",\"&vartriangleleft;\":\"⊲\",\"&vartriangleright;\":\"⊳\",\"&vcy;\":\"в\",\"&vdash;\":\"⊢\",\"&vee;\":\"∨\",\"&veebar;\":\"⊻\",\"&veeeq;\":\"≚\",\"&vellip;\":\"⋮\",\"&verbar;\":\"|\",\"&vert;\":\"|\",\"&vfr;\":\"𝔳\",\"&vltri;\":\"⊲\",\"&vnsub;\":\"⊂⃒\",\"&vnsup;\":\"⊃⃒\",\"&vopf;\":\"𝕧\",\"&vprop;\":\"∝\",\"&vrtri;\":\"⊳\",\"&vscr;\":\"𝓋\",\"&vsubnE;\":\"⫋︀\",\"&vsubne;\":\"⊊︀\",\"&vsupnE;\":\"⫌︀\",\"&vsupne;\":\"⊋︀\",\"&vzigzag;\":\"⦚\",\"&wcirc;\":\"ŵ\",\"&wedbar;\":\"⩟\",\"&wedge;\":\"∧\",\"&wedgeq;\":\"≙\",\"&weierp;\":\"℘\",\"&wfr;\":\"𝔴\",\"&wopf;\":\"𝕨\",\"&wp;\":\"℘\",\"&wr;\":\"≀\",\"&wreath;\":\"≀\",\"&wscr;\":\"𝓌\",\"&xcap;\":\"⋂\",\"&xcirc;\":\"◯\",\"&xcup;\":\"⋃\",\"&xdtri;\":\"▽\",\"&xfr;\":\"𝔵\",\"&xhArr;\":\"⟺\",\"&xharr;\":\"⟷\",\"&xi;\":\"ξ\",\"&xlArr;\":\"⟸\",\"&xlarr;\":\"⟵\",\"&xmap;\":\"⟼\",\"&xnis;\":\"⋻\",\"&xodot;\":\"⨀\",\"&xopf;\":\"𝕩\",\"&xoplus;\":\"⨁\",\"&xotime;\":\"⨂\",\"&xrArr;\":\"⟹\",\"&xrarr;\":\"⟶\",\"&xscr;\":\"𝓍\",\"&xsqcup;\":\"⨆\",\"&xuplus;\":\"⨄\",\"&xutri;\":\"△\",\"&xvee;\":\"⋁\",\"&xwedge;\":\"⋀\",\"&yacute\":\"ý\",\"&yacute;\":\"ý\",\"&yacy;\":\"я\",\"&ycirc;\":\"ŷ\",\"&ycy;\":\"ы\",\"&yen\":\"¥\",\"&yen;\":\"¥\",\"&yfr;\":\"𝔶\",\"&yicy;\":\"ї\",\"&yopf;\":\"𝕪\",\"&yscr;\":\"𝓎\",\"&yucy;\":\"ю\",\"&yuml\":\"ÿ\",\"&yuml;\":\"ÿ\",\"&zacute;\":\"ź\",\"&zcaron;\":\"ž\",\"&zcy;\":\"з\",\"&zdot;\":\"ż\",\"&zeetrf;\":\"ℨ\",\"&zeta;\":\"ζ\",\"&zfr;\":\"𝔷\",\"&zhcy;\":\"ж\",\"&zigrarr;\":\"⇝\",\"&zopf;\":\"𝕫\",\"&zscr;\":\"𝓏\",\"&zwj;\":\"‍\",\"&zwnj;\":\"‌\"},characters:{\"Æ\":\"&AElig;\",\"&\":\"&amp;\",\"Á\":\"&Aacute;\",\"Ă\":\"&Abreve;\",\"Â\":\"&Acirc;\",\"А\":\"&Acy;\",\"𝔄\":\"&Afr;\",\"À\":\"&Agrave;\",\"Α\":\"&Alpha;\",\"Ā\":\"&Amacr;\",\"⩓\":\"&And;\",\"Ą\":\"&Aogon;\",\"𝔸\":\"&Aopf;\",\"⁡\":\"&af;\",\"Å\":\"&angst;\",\"𝒜\":\"&Ascr;\",\"≔\":\"&coloneq;\",\"Ã\":\"&Atilde;\",\"Ä\":\"&Auml;\",\"∖\":\"&ssetmn;\",\"⫧\":\"&Barv;\",\"⌆\":\"&doublebarwedge;\",\"Б\":\"&Bcy;\",\"∵\":\"&because;\",\"ℬ\":\"&bernou;\",\"Β\":\"&Beta;\",\"𝔅\":\"&Bfr;\",\"𝔹\":\"&Bopf;\",\"˘\":\"&breve;\",\"≎\":\"&bump;\",\"Ч\":\"&CHcy;\",\"©\":\"&copy;\",\"Ć\":\"&Cacute;\",\"⋒\":\"&Cap;\",\"ⅅ\":\"&DD;\",\"ℭ\":\"&Cfr;\",\"Č\":\"&Ccaron;\",\"Ç\":\"&Ccedil;\",\"Ĉ\":\"&Ccirc;\",\"∰\":\"&Cconint;\",\"Ċ\":\"&Cdot;\",\"¸\":\"&cedil;\",\"·\":\"&middot;\",\"Χ\":\"&Chi;\",\"⊙\":\"&odot;\",\"⊖\":\"&ominus;\",\"⊕\":\"&oplus;\",\"⊗\":\"&otimes;\",\"∲\":\"&cwconint;\",\"”\":\"&rdquor;\",\"’\":\"&rsquor;\",\"∷\":\"&Proportion;\",\"⩴\":\"&Colone;\",\"≡\":\"&equiv;\",\"∯\":\"&DoubleContourIntegral;\",\"∮\":\"&oint;\",\"ℂ\":\"&complexes;\",\"∐\":\"&coprod;\",\"∳\":\"&awconint;\",\"⨯\":\"&Cross;\",\"𝒞\":\"&Cscr;\",\"⋓\":\"&Cup;\",\"≍\":\"&asympeq;\",\"⤑\":\"&DDotrahd;\",\"Ђ\":\"&DJcy;\",\"Ѕ\":\"&DScy;\",\"Џ\":\"&DZcy;\",\"‡\":\"&ddagger;\",\"↡\":\"&Darr;\",\"⫤\":\"&DoubleLeftTee;\",\"Ď\":\"&Dcaron;\",\"Д\":\"&Dcy;\",\"∇\":\"&nabla;\",\"Δ\":\"&Delta;\",\"𝔇\":\"&Dfr;\",\"´\":\"&acute;\",\"˙\":\"&dot;\",\"˝\":\"&dblac;\",\"`\":\"&grave;\",\"˜\":\"&tilde;\",\"⋄\":\"&diamond;\",\"ⅆ\":\"&dd;\",\"𝔻\":\"&Dopf;\",\"¨\":\"&uml;\",\"⃜\":\"&DotDot;\",\"≐\":\"&esdot;\",\"⇓\":\"&dArr;\",\"⇐\":\"&lArr;\",\"⇔\":\"&iff;\",\"⟸\":\"&xlArr;\",\"⟺\":\"&xhArr;\",\"⟹\":\"&xrArr;\",\"⇒\":\"&rArr;\",\"⊨\":\"&vDash;\",\"⇑\":\"&uArr;\",\"⇕\":\"&vArr;\",\"∥\":\"&spar;\",\"↓\":\"&downarrow;\",\"⤓\":\"&DownArrowBar;\",\"⇵\":\"&duarr;\",\"̑\":\"&DownBreve;\",\"⥐\":\"&DownLeftRightVector;\",\"⥞\":\"&DownLeftTeeVector;\",\"↽\":\"&lhard;\",\"⥖\":\"&DownLeftVectorBar;\",\"⥟\":\"&DownRightTeeVector;\",\"⇁\":\"&rightharpoondown;\",\"⥗\":\"&DownRightVectorBar;\",\"⊤\":\"&top;\",\"↧\":\"&mapstodown;\",\"𝒟\":\"&Dscr;\",\"Đ\":\"&Dstrok;\",\"Ŋ\":\"&ENG;\",\"Ð\":\"&ETH;\",\"É\":\"&Eacute;\",\"Ě\":\"&Ecaron;\",\"Ê\":\"&Ecirc;\",\"Э\":\"&Ecy;\",\"Ė\":\"&Edot;\",\"𝔈\":\"&Efr;\",\"È\":\"&Egrave;\",\"∈\":\"&isinv;\",\"Ē\":\"&Emacr;\",\"◻\":\"&EmptySmallSquare;\",\"▫\":\"&EmptyVerySmallSquare;\",\"Ę\":\"&Eogon;\",\"𝔼\":\"&Eopf;\",\"Ε\":\"&Epsilon;\",\"⩵\":\"&Equal;\",\"≂\":\"&esim;\",\"⇌\":\"&rlhar;\",\"ℰ\":\"&expectation;\",\"⩳\":\"&Esim;\",\"Η\":\"&Eta;\",\"Ë\":\"&Euml;\",\"∃\":\"&exist;\",\"ⅇ\":\"&exponentiale;\",\"Ф\":\"&Fcy;\",\"𝔉\":\"&Ffr;\",\"◼\":\"&FilledSmallSquare;\",\"▪\":\"&squf;\",\"𝔽\":\"&Fopf;\",\"∀\":\"&forall;\",\"ℱ\":\"&Fscr;\",\"Ѓ\":\"&GJcy;\",\">\":\"&gt;\",\"Γ\":\"&Gamma;\",\"Ϝ\":\"&Gammad;\",\"Ğ\":\"&Gbreve;\",\"Ģ\":\"&Gcedil;\",\"Ĝ\":\"&Gcirc;\",\"Г\":\"&Gcy;\",\"Ġ\":\"&Gdot;\",\"𝔊\":\"&Gfr;\",\"⋙\":\"&ggg;\",\"𝔾\":\"&Gopf;\",\"≥\":\"&geq;\",\"⋛\":\"&gtreqless;\",\"≧\":\"&geqq;\",\"⪢\":\"&GreaterGreater;\",\"≷\":\"&gtrless;\",\"⩾\":\"&ges;\",\"≳\":\"&gtrsim;\",\"𝒢\":\"&Gscr;\",\"≫\":\"&gg;\",\"Ъ\":\"&HARDcy;\",\"ˇ\":\"&caron;\",\"^\":\"&Hat;\",\"Ĥ\":\"&Hcirc;\",\"ℌ\":\"&Poincareplane;\",\"ℋ\":\"&hamilt;\",\"ℍ\":\"&quaternions;\",\"─\":\"&boxh;\",\"Ħ\":\"&Hstrok;\",\"≏\":\"&bumpeq;\",\"Е\":\"&IEcy;\",\"Ĳ\":\"&IJlig;\",\"Ё\":\"&IOcy;\",\"Í\":\"&Iacute;\",\"Î\":\"&Icirc;\",\"И\":\"&Icy;\",\"İ\":\"&Idot;\",\"ℑ\":\"&imagpart;\",\"Ì\":\"&Igrave;\",\"Ī\":\"&Imacr;\",\"ⅈ\":\"&ii;\",\"∬\":\"&Int;\",\"∫\":\"&int;\",\"⋂\":\"&xcap;\",\"⁣\":\"&ic;\",\"⁢\":\"&it;\",\"Į\":\"&Iogon;\",\"𝕀\":\"&Iopf;\",\"Ι\":\"&Iota;\",\"ℐ\":\"&imagline;\",\"Ĩ\":\"&Itilde;\",\"І\":\"&Iukcy;\",\"Ï\":\"&Iuml;\",\"Ĵ\":\"&Jcirc;\",\"Й\":\"&Jcy;\",\"𝔍\":\"&Jfr;\",\"𝕁\":\"&Jopf;\",\"𝒥\":\"&Jscr;\",\"Ј\":\"&Jsercy;\",\"Є\":\"&Jukcy;\",\"Х\":\"&KHcy;\",\"Ќ\":\"&KJcy;\",\"Κ\":\"&Kappa;\",\"Ķ\":\"&Kcedil;\",\"К\":\"&Kcy;\",\"𝔎\":\"&Kfr;\",\"𝕂\":\"&Kopf;\",\"𝒦\":\"&Kscr;\",\"Љ\":\"&LJcy;\",\"<\":\"&lt;\",\"Ĺ\":\"&Lacute;\",\"Λ\":\"&Lambda;\",\"⟪\":\"&Lang;\",\"ℒ\":\"&lagran;\",\"↞\":\"&twoheadleftarrow;\",\"Ľ\":\"&Lcaron;\",\"Ļ\":\"&Lcedil;\",\"Л\":\"&Lcy;\",\"⟨\":\"&langle;\",\"←\":\"&slarr;\",\"⇤\":\"&larrb;\",\"⇆\":\"&lrarr;\",\"⌈\":\"&lceil;\",\"⟦\":\"&lobrk;\",\"⥡\":\"&LeftDownTeeVector;\",\"⇃\":\"&downharpoonleft;\",\"⥙\":\"&LeftDownVectorBar;\",\"⌊\":\"&lfloor;\",\"↔\":\"&leftrightarrow;\",\"⥎\":\"&LeftRightVector;\",\"⊣\":\"&dashv;\",\"↤\":\"&mapstoleft;\",\"⥚\":\"&LeftTeeVector;\",\"⊲\":\"&vltri;\",\"⧏\":\"&LeftTriangleBar;\",\"⊴\":\"&trianglelefteq;\",\"⥑\":\"&LeftUpDownVector;\",\"⥠\":\"&LeftUpTeeVector;\",\"↿\":\"&upharpoonleft;\",\"⥘\":\"&LeftUpVectorBar;\",\"↼\":\"&lharu;\",\"⥒\":\"&LeftVectorBar;\",\"⋚\":\"&lesseqgtr;\",\"≦\":\"&leqq;\",\"≶\":\"&lg;\",\"⪡\":\"&LessLess;\",\"⩽\":\"&les;\",\"≲\":\"&lsim;\",\"𝔏\":\"&Lfr;\",\"⋘\":\"&Ll;\",\"⇚\":\"&lAarr;\",\"Ŀ\":\"&Lmidot;\",\"⟵\":\"&xlarr;\",\"⟷\":\"&xharr;\",\"⟶\":\"&xrarr;\",\"𝕃\":\"&Lopf;\",\"↙\":\"&swarrow;\",\"↘\":\"&searrow;\",\"↰\":\"&lsh;\",\"Ł\":\"&Lstrok;\",\"≪\":\"&ll;\",\"⤅\":\"&Map;\",\"М\":\"&Mcy;\",\" \":\"&MediumSpace;\",\"ℳ\":\"&phmmat;\",\"𝔐\":\"&Mfr;\",\"∓\":\"&mp;\",\"𝕄\":\"&Mopf;\",\"Μ\":\"&Mu;\",\"Њ\":\"&NJcy;\",\"Ń\":\"&Nacute;\",\"Ň\":\"&Ncaron;\",\"Ņ\":\"&Ncedil;\",\"Н\":\"&Ncy;\",\"​\":\"&ZeroWidthSpace;\",\"\\n\":\"&NewLine;\",\"𝔑\":\"&Nfr;\",\"⁠\":\"&NoBreak;\",\" \":\"&nbsp;\",\"ℕ\":\"&naturals;\",\"⫬\":\"&Not;\",\"≢\":\"&nequiv;\",\"≭\":\"&NotCupCap;\",\"∦\":\"&nspar;\",\"∉\":\"&notinva;\",\"≠\":\"&ne;\",\"≂̸\":\"&nesim;\",\"∄\":\"&nexists;\",\"≯\":\"&ngtr;\",\"≱\":\"&ngeq;\",\"≧̸\":\"&ngeqq;\",\"≫̸\":\"&nGtv;\",\"≹\":\"&ntgl;\",\"⩾̸\":\"&nges;\",\"≵\":\"&ngsim;\",\"≎̸\":\"&nbump;\",\"≏̸\":\"&nbumpe;\",\"⋪\":\"&ntriangleleft;\",\"⧏̸\":\"&NotLeftTriangleBar;\",\"⋬\":\"&ntrianglelefteq;\",\"≮\":\"&nlt;\",\"≰\":\"&nleq;\",\"≸\":\"&ntlg;\",\"≪̸\":\"&nLtv;\",\"⩽̸\":\"&nles;\",\"≴\":\"&nlsim;\",\"⪢̸\":\"&NotNestedGreaterGreater;\",\"⪡̸\":\"&NotNestedLessLess;\",\"⊀\":\"&nprec;\",\"⪯̸\":\"&npreceq;\",\"⋠\":\"&nprcue;\",\"∌\":\"&notniva;\",\"⋫\":\"&ntriangleright;\",\"⧐̸\":\"&NotRightTriangleBar;\",\"⋭\":\"&ntrianglerighteq;\",\"⊏̸\":\"&NotSquareSubset;\",\"⋢\":\"&nsqsube;\",\"⊐̸\":\"&NotSquareSuperset;\",\"⋣\":\"&nsqsupe;\",\"⊂⃒\":\"&vnsub;\",\"⊈\":\"&nsubseteq;\",\"⊁\":\"&nsucc;\",\"⪰̸\":\"&nsucceq;\",\"⋡\":\"&nsccue;\",\"≿̸\":\"&NotSucceedsTilde;\",\"⊃⃒\":\"&vnsup;\",\"⊉\":\"&nsupseteq;\",\"≁\":\"&nsim;\",\"≄\":\"&nsimeq;\",\"≇\":\"&ncong;\",\"≉\":\"&napprox;\",\"∤\":\"&nsmid;\",\"𝒩\":\"&Nscr;\",\"Ñ\":\"&Ntilde;\",\"Ν\":\"&Nu;\",\"Œ\":\"&OElig;\",\"Ó\":\"&Oacute;\",\"Ô\":\"&Ocirc;\",\"О\":\"&Ocy;\",\"Ő\":\"&Odblac;\",\"𝔒\":\"&Ofr;\",\"Ò\":\"&Ograve;\",\"Ō\":\"&Omacr;\",\"Ω\":\"&ohm;\",\"Ο\":\"&Omicron;\",\"𝕆\":\"&Oopf;\",\"“\":\"&ldquo;\",\"‘\":\"&lsquo;\",\"⩔\":\"&Or;\",\"𝒪\":\"&Oscr;\",\"Ø\":\"&Oslash;\",\"Õ\":\"&Otilde;\",\"⨷\":\"&Otimes;\",\"Ö\":\"&Ouml;\",\"‾\":\"&oline;\",\"⏞\":\"&OverBrace;\",\"⎴\":\"&tbrk;\",\"⏜\":\"&OverParenthesis;\",\"∂\":\"&part;\",\"П\":\"&Pcy;\",\"𝔓\":\"&Pfr;\",\"Φ\":\"&Phi;\",\"Π\":\"&Pi;\",\"±\":\"&pm;\",\"ℙ\":\"&primes;\",\"⪻\":\"&Pr;\",\"≺\":\"&prec;\",\"⪯\":\"&preceq;\",\"≼\":\"&preccurlyeq;\",\"≾\":\"&prsim;\",\"″\":\"&Prime;\",\"∏\":\"&prod;\",\"∝\":\"&vprop;\",\"𝒫\":\"&Pscr;\",\"Ψ\":\"&Psi;\",'\"':\"&quot;\",\"𝔔\":\"&Qfr;\",\"ℚ\":\"&rationals;\",\"𝒬\":\"&Qscr;\",\"⤐\":\"&drbkarow;\",\"®\":\"&reg;\",\"Ŕ\":\"&Racute;\",\"⟫\":\"&Rang;\",\"↠\":\"&twoheadrightarrow;\",\"⤖\":\"&Rarrtl;\",\"Ř\":\"&Rcaron;\",\"Ŗ\":\"&Rcedil;\",\"Р\":\"&Rcy;\",\"ℜ\":\"&realpart;\",\"∋\":\"&niv;\",\"⇋\":\"&lrhar;\",\"⥯\":\"&duhar;\",\"Ρ\":\"&Rho;\",\"⟩\":\"&rangle;\",\"→\":\"&srarr;\",\"⇥\":\"&rarrb;\",\"⇄\":\"&rlarr;\",\"⌉\":\"&rceil;\",\"⟧\":\"&robrk;\",\"⥝\":\"&RightDownTeeVector;\",\"⇂\":\"&downharpoonright;\",\"⥕\":\"&RightDownVectorBar;\",\"⌋\":\"&rfloor;\",\"⊢\":\"&vdash;\",\"↦\":\"&mapsto;\",\"⥛\":\"&RightTeeVector;\",\"⊳\":\"&vrtri;\",\"⧐\":\"&RightTriangleBar;\",\"⊵\":\"&trianglerighteq;\",\"⥏\":\"&RightUpDownVector;\",\"⥜\":\"&RightUpTeeVector;\",\"↾\":\"&upharpoonright;\",\"⥔\":\"&RightUpVectorBar;\",\"⇀\":\"&rightharpoonup;\",\"⥓\":\"&RightVectorBar;\",\"ℝ\":\"&reals;\",\"⥰\":\"&RoundImplies;\",\"⇛\":\"&rAarr;\",\"ℛ\":\"&realine;\",\"↱\":\"&rsh;\",\"⧴\":\"&RuleDelayed;\",\"Щ\":\"&SHCHcy;\",\"Ш\":\"&SHcy;\",\"Ь\":\"&SOFTcy;\",\"Ś\":\"&Sacute;\",\"⪼\":\"&Sc;\",\"Š\":\"&Scaron;\",\"Ş\":\"&Scedil;\",\"Ŝ\":\"&Scirc;\",\"С\":\"&Scy;\",\"𝔖\":\"&Sfr;\",\"↑\":\"&uparrow;\",\"Σ\":\"&Sigma;\",\"∘\":\"&compfn;\",\"𝕊\":\"&Sopf;\",\"√\":\"&radic;\",\"□\":\"&square;\",\"⊓\":\"&sqcap;\",\"⊏\":\"&sqsubset;\",\"⊑\":\"&sqsubseteq;\",\"⊐\":\"&sqsupset;\",\"⊒\":\"&sqsupseteq;\",\"⊔\":\"&sqcup;\",\"𝒮\":\"&Sscr;\",\"⋆\":\"&sstarf;\",\"⋐\":\"&Subset;\",\"⊆\":\"&subseteq;\",\"≻\":\"&succ;\",\"⪰\":\"&succeq;\",\"≽\":\"&succcurlyeq;\",\"≿\":\"&succsim;\",\"∑\":\"&sum;\",\"⋑\":\"&Supset;\",\"⊃\":\"&supset;\",\"⊇\":\"&supseteq;\",\"Þ\":\"&THORN;\",\"™\":\"&trade;\",\"Ћ\":\"&TSHcy;\",\"Ц\":\"&TScy;\",\"\\t\":\"&Tab;\",\"Τ\":\"&Tau;\",\"Ť\":\"&Tcaron;\",\"Ţ\":\"&Tcedil;\",\"Т\":\"&Tcy;\",\"𝔗\":\"&Tfr;\",\"∴\":\"&therefore;\",\"Θ\":\"&Theta;\",\"  \":\"&ThickSpace;\",\" \":\"&thinsp;\",\"∼\":\"&thksim;\",\"≃\":\"&simeq;\",\"≅\":\"&cong;\",\"≈\":\"&thkap;\",\"𝕋\":\"&Topf;\",\"⃛\":\"&tdot;\",\"𝒯\":\"&Tscr;\",\"Ŧ\":\"&Tstrok;\",\"Ú\":\"&Uacute;\",\"↟\":\"&Uarr;\",\"⥉\":\"&Uarrocir;\",\"Ў\":\"&Ubrcy;\",\"Ŭ\":\"&Ubreve;\",\"Û\":\"&Ucirc;\",\"У\":\"&Ucy;\",\"Ű\":\"&Udblac;\",\"𝔘\":\"&Ufr;\",\"Ù\":\"&Ugrave;\",\"Ū\":\"&Umacr;\",_:\"&lowbar;\",\"⏟\":\"&UnderBrace;\",\"⎵\":\"&bbrk;\",\"⏝\":\"&UnderParenthesis;\",\"⋃\":\"&xcup;\",\"⊎\":\"&uplus;\",\"Ų\":\"&Uogon;\",\"𝕌\":\"&Uopf;\",\"⤒\":\"&UpArrowBar;\",\"⇅\":\"&udarr;\",\"↕\":\"&varr;\",\"⥮\":\"&udhar;\",\"⊥\":\"&perp;\",\"↥\":\"&mapstoup;\",\"↖\":\"&nwarrow;\",\"↗\":\"&nearrow;\",\"ϒ\":\"&upsih;\",\"Υ\":\"&Upsilon;\",\"Ů\":\"&Uring;\",\"𝒰\":\"&Uscr;\",\"Ũ\":\"&Utilde;\",\"Ü\":\"&Uuml;\",\"⊫\":\"&VDash;\",\"⫫\":\"&Vbar;\",\"В\":\"&Vcy;\",\"⊩\":\"&Vdash;\",\"⫦\":\"&Vdashl;\",\"⋁\":\"&xvee;\",\"‖\":\"&Vert;\",\"∣\":\"&smid;\",\"|\":\"&vert;\",\"❘\":\"&VerticalSeparator;\",\"≀\":\"&wreath;\",\" \":\"&hairsp;\",\"𝔙\":\"&Vfr;\",\"𝕍\":\"&Vopf;\",\"𝒱\":\"&Vscr;\",\"⊪\":\"&Vvdash;\",\"Ŵ\":\"&Wcirc;\",\"⋀\":\"&xwedge;\",\"𝔚\":\"&Wfr;\",\"𝕎\":\"&Wopf;\",\"𝒲\":\"&Wscr;\",\"𝔛\":\"&Xfr;\",\"Ξ\":\"&Xi;\",\"𝕏\":\"&Xopf;\",\"𝒳\":\"&Xscr;\",\"Я\":\"&YAcy;\",\"Ї\":\"&YIcy;\",\"Ю\":\"&YUcy;\",\"Ý\":\"&Yacute;\",\"Ŷ\":\"&Ycirc;\",\"Ы\":\"&Ycy;\",\"𝔜\":\"&Yfr;\",\"𝕐\":\"&Yopf;\",\"𝒴\":\"&Yscr;\",\"Ÿ\":\"&Yuml;\",\"Ж\":\"&ZHcy;\",\"Ź\":\"&Zacute;\",\"Ž\":\"&Zcaron;\",\"З\":\"&Zcy;\",\"Ż\":\"&Zdot;\",\"Ζ\":\"&Zeta;\",\"ℨ\":\"&zeetrf;\",\"ℤ\":\"&integers;\",\"𝒵\":\"&Zscr;\",\"á\":\"&aacute;\",\"ă\":\"&abreve;\",\"∾\":\"&mstpos;\",\"∾̳\":\"&acE;\",\"∿\":\"&acd;\",\"â\":\"&acirc;\",\"а\":\"&acy;\",\"æ\":\"&aelig;\",\"𝔞\":\"&afr;\",\"à\":\"&agrave;\",\"ℵ\":\"&aleph;\",\"α\":\"&alpha;\",\"ā\":\"&amacr;\",\"⨿\":\"&amalg;\",\"∧\":\"&wedge;\",\"⩕\":\"&andand;\",\"⩜\":\"&andd;\",\"⩘\":\"&andslope;\",\"⩚\":\"&andv;\",\"∠\":\"&angle;\",\"⦤\":\"&ange;\",\"∡\":\"&measuredangle;\",\"⦨\":\"&angmsdaa;\",\"⦩\":\"&angmsdab;\",\"⦪\":\"&angmsdac;\",\"⦫\":\"&angmsdad;\",\"⦬\":\"&angmsdae;\",\"⦭\":\"&angmsdaf;\",\"⦮\":\"&angmsdag;\",\"⦯\":\"&angmsdah;\",\"∟\":\"&angrt;\",\"⊾\":\"&angrtvb;\",\"⦝\":\"&angrtvbd;\",\"∢\":\"&angsph;\",\"⍼\":\"&angzarr;\",\"ą\":\"&aogon;\",\"𝕒\":\"&aopf;\",\"⩰\":\"&apE;\",\"⩯\":\"&apacir;\",\"≊\":\"&approxeq;\",\"≋\":\"&apid;\",\"'\":\"&apos;\",\"å\":\"&aring;\",\"𝒶\":\"&ascr;\",\"*\":\"&midast;\",\"ã\":\"&atilde;\",\"ä\":\"&auml;\",\"⨑\":\"&awint;\",\"⫭\":\"&bNot;\",\"≌\":\"&bcong;\",\"϶\":\"&bepsi;\",\"‵\":\"&bprime;\",\"∽\":\"&bsim;\",\"⋍\":\"&bsime;\",\"⊽\":\"&barvee;\",\"⌅\":\"&barwedge;\",\"⎶\":\"&bbrktbrk;\",\"б\":\"&bcy;\",\"„\":\"&ldquor;\",\"⦰\":\"&bemptyv;\",\"β\":\"&beta;\",\"ℶ\":\"&beth;\",\"≬\":\"&twixt;\",\"𝔟\":\"&bfr;\",\"◯\":\"&xcirc;\",\"⨀\":\"&xodot;\",\"⨁\":\"&xoplus;\",\"⨂\":\"&xotime;\",\"⨆\":\"&xsqcup;\",\"★\":\"&starf;\",\"▽\":\"&xdtri;\",\"△\":\"&xutri;\",\"⨄\":\"&xuplus;\",\"⤍\":\"&rbarr;\",\"⧫\":\"&lozf;\",\"▴\":\"&utrif;\",\"▾\":\"&dtrif;\",\"◂\":\"&ltrif;\",\"▸\":\"&rtrif;\",\"␣\":\"&blank;\",\"▒\":\"&blk12;\",\"░\":\"&blk14;\",\"▓\":\"&blk34;\",\"█\":\"&block;\",\"=⃥\":\"&bne;\",\"≡⃥\":\"&bnequiv;\",\"⌐\":\"&bnot;\",\"𝕓\":\"&bopf;\",\"⋈\":\"&bowtie;\",\"╗\":\"&boxDL;\",\"╔\":\"&boxDR;\",\"╖\":\"&boxDl;\",\"╓\":\"&boxDr;\",\"═\":\"&boxH;\",\"╦\":\"&boxHD;\",\"╩\":\"&boxHU;\",\"╤\":\"&boxHd;\",\"╧\":\"&boxHu;\",\"╝\":\"&boxUL;\",\"╚\":\"&boxUR;\",\"╜\":\"&boxUl;\",\"╙\":\"&boxUr;\",\"║\":\"&boxV;\",\"╬\":\"&boxVH;\",\"╣\":\"&boxVL;\",\"╠\":\"&boxVR;\",\"╫\":\"&boxVh;\",\"╢\":\"&boxVl;\",\"╟\":\"&boxVr;\",\"⧉\":\"&boxbox;\",\"╕\":\"&boxdL;\",\"╒\":\"&boxdR;\",\"┐\":\"&boxdl;\",\"┌\":\"&boxdr;\",\"╥\":\"&boxhD;\",\"╨\":\"&boxhU;\",\"┬\":\"&boxhd;\",\"┴\":\"&boxhu;\",\"⊟\":\"&minusb;\",\"⊞\":\"&plusb;\",\"⊠\":\"&timesb;\",\"╛\":\"&boxuL;\",\"╘\":\"&boxuR;\",\"┘\":\"&boxul;\",\"└\":\"&boxur;\",\"│\":\"&boxv;\",\"╪\":\"&boxvH;\",\"╡\":\"&boxvL;\",\"╞\":\"&boxvR;\",\"┼\":\"&boxvh;\",\"┤\":\"&boxvl;\",\"├\":\"&boxvr;\",\"¦\":\"&brvbar;\",\"𝒷\":\"&bscr;\",\"⁏\":\"&bsemi;\",\"\\\\\":\"&bsol;\",\"⧅\":\"&bsolb;\",\"⟈\":\"&bsolhsub;\",\"•\":\"&bullet;\",\"⪮\":\"&bumpE;\",\"ć\":\"&cacute;\",\"∩\":\"&cap;\",\"⩄\":\"&capand;\",\"⩉\":\"&capbrcup;\",\"⩋\":\"&capcap;\",\"⩇\":\"&capcup;\",\"⩀\":\"&capdot;\",\"∩︀\":\"&caps;\",\"⁁\":\"&caret;\",\"⩍\":\"&ccaps;\",\"č\":\"&ccaron;\",\"ç\":\"&ccedil;\",\"ĉ\":\"&ccirc;\",\"⩌\":\"&ccups;\",\"⩐\":\"&ccupssm;\",\"ċ\":\"&cdot;\",\"⦲\":\"&cemptyv;\",\"¢\":\"&cent;\",\"𝔠\":\"&cfr;\",\"ч\":\"&chcy;\",\"✓\":\"&checkmark;\",\"χ\":\"&chi;\",\"○\":\"&cir;\",\"⧃\":\"&cirE;\",\"ˆ\":\"&circ;\",\"≗\":\"&cire;\",\"↺\":\"&olarr;\",\"↻\":\"&orarr;\",\"Ⓢ\":\"&oS;\",\"⊛\":\"&oast;\",\"⊚\":\"&ocir;\",\"⊝\":\"&odash;\",\"⨐\":\"&cirfnint;\",\"⫯\":\"&cirmid;\",\"⧂\":\"&cirscir;\",\"♣\":\"&clubsuit;\",\":\":\"&colon;\",\",\":\"&comma;\",\"@\":\"&commat;\",\"∁\":\"&complement;\",\"⩭\":\"&congdot;\",\"𝕔\":\"&copf;\",\"℗\":\"&copysr;\",\"↵\":\"&crarr;\",\"✗\":\"&cross;\",\"𝒸\":\"&cscr;\",\"⫏\":\"&csub;\",\"⫑\":\"&csube;\",\"⫐\":\"&csup;\",\"⫒\":\"&csupe;\",\"⋯\":\"&ctdot;\",\"⤸\":\"&cudarrl;\",\"⤵\":\"&cudarrr;\",\"⋞\":\"&curlyeqprec;\",\"⋟\":\"&curlyeqsucc;\",\"↶\":\"&curvearrowleft;\",\"⤽\":\"&cularrp;\",\"∪\":\"&cup;\",\"⩈\":\"&cupbrcap;\",\"⩆\":\"&cupcap;\",\"⩊\":\"&cupcup;\",\"⊍\":\"&cupdot;\",\"⩅\":\"&cupor;\",\"∪︀\":\"&cups;\",\"↷\":\"&curvearrowright;\",\"⤼\":\"&curarrm;\",\"⋎\":\"&cuvee;\",\"⋏\":\"&cuwed;\",\"¤\":\"&curren;\",\"∱\":\"&cwint;\",\"⌭\":\"&cylcty;\",\"⥥\":\"&dHar;\",\"†\":\"&dagger;\",\"ℸ\":\"&daleth;\",\"‐\":\"&hyphen;\",\"⤏\":\"&rBarr;\",\"ď\":\"&dcaron;\",\"д\":\"&dcy;\",\"⇊\":\"&downdownarrows;\",\"⩷\":\"&eDDot;\",\"°\":\"&deg;\",\"δ\":\"&delta;\",\"⦱\":\"&demptyv;\",\"⥿\":\"&dfisht;\",\"𝔡\":\"&dfr;\",\"♦\":\"&diams;\",\"ϝ\":\"&gammad;\",\"⋲\":\"&disin;\",\"÷\":\"&divide;\",\"⋇\":\"&divonx;\",\"ђ\":\"&djcy;\",\"⌞\":\"&llcorner;\",\"⌍\":\"&dlcrop;\",$:\"&dollar;\",\"𝕕\":\"&dopf;\",\"≑\":\"&eDot;\",\"∸\":\"&minusd;\",\"∔\":\"&plusdo;\",\"⊡\":\"&sdotb;\",\"⌟\":\"&lrcorner;\",\"⌌\":\"&drcrop;\",\"𝒹\":\"&dscr;\",\"ѕ\":\"&dscy;\",\"⧶\":\"&dsol;\",\"đ\":\"&dstrok;\",\"⋱\":\"&dtdot;\",\"▿\":\"&triangledown;\",\"⦦\":\"&dwangle;\",\"џ\":\"&dzcy;\",\"⟿\":\"&dzigrarr;\",\"é\":\"&eacute;\",\"⩮\":\"&easter;\",\"ě\":\"&ecaron;\",\"≖\":\"&eqcirc;\",\"ê\":\"&ecirc;\",\"≕\":\"&eqcolon;\",\"э\":\"&ecy;\",\"ė\":\"&edot;\",\"≒\":\"&fallingdotseq;\",\"𝔢\":\"&efr;\",\"⪚\":\"&eg;\",\"è\":\"&egrave;\",\"⪖\":\"&eqslantgtr;\",\"⪘\":\"&egsdot;\",\"⪙\":\"&el;\",\"⏧\":\"&elinters;\",\"ℓ\":\"&ell;\",\"⪕\":\"&eqslantless;\",\"⪗\":\"&elsdot;\",\"ē\":\"&emacr;\",\"∅\":\"&varnothing;\",\" \":\"&emsp13;\",\" \":\"&emsp14;\",\" \":\"&emsp;\",\"ŋ\":\"&eng;\",\" \":\"&ensp;\",\"ę\":\"&eogon;\",\"𝕖\":\"&eopf;\",\"⋕\":\"&epar;\",\"⧣\":\"&eparsl;\",\"⩱\":\"&eplus;\",\"ε\":\"&epsilon;\",\"ϵ\":\"&varepsilon;\",\"=\":\"&equals;\",\"≟\":\"&questeq;\",\"⩸\":\"&equivDD;\",\"⧥\":\"&eqvparsl;\",\"≓\":\"&risingdotseq;\",\"⥱\":\"&erarr;\",\"ℯ\":\"&escr;\",\"η\":\"&eta;\",\"ð\":\"&eth;\",\"ë\":\"&euml;\",\"€\":\"&euro;\",\"!\":\"&excl;\",\"ф\":\"&fcy;\",\"♀\":\"&female;\",\"ﬃ\":\"&ffilig;\",\"ﬀ\":\"&fflig;\",\"ﬄ\":\"&ffllig;\",\"𝔣\":\"&ffr;\",\"ﬁ\":\"&filig;\",fj:\"&fjlig;\",\"♭\":\"&flat;\",\"ﬂ\":\"&fllig;\",\"▱\":\"&fltns;\",\"ƒ\":\"&fnof;\",\"𝕗\":\"&fopf;\",\"⋔\":\"&pitchfork;\",\"⫙\":\"&forkv;\",\"⨍\":\"&fpartint;\",\"½\":\"&half;\",\"⅓\":\"&frac13;\",\"¼\":\"&frac14;\",\"⅕\":\"&frac15;\",\"⅙\":\"&frac16;\",\"⅛\":\"&frac18;\",\"⅔\":\"&frac23;\",\"⅖\":\"&frac25;\",\"¾\":\"&frac34;\",\"⅗\":\"&frac35;\",\"⅜\":\"&frac38;\",\"⅘\":\"&frac45;\",\"⅚\":\"&frac56;\",\"⅝\":\"&frac58;\",\"⅞\":\"&frac78;\",\"⁄\":\"&frasl;\",\"⌢\":\"&sfrown;\",\"𝒻\":\"&fscr;\",\"⪌\":\"&gtreqqless;\",\"ǵ\":\"&gacute;\",\"γ\":\"&gamma;\",\"⪆\":\"&gtrapprox;\",\"ğ\":\"&gbreve;\",\"ĝ\":\"&gcirc;\",\"г\":\"&gcy;\",\"ġ\":\"&gdot;\",\"⪩\":\"&gescc;\",\"⪀\":\"&gesdot;\",\"⪂\":\"&gesdoto;\",\"⪄\":\"&gesdotol;\",\"⋛︀\":\"&gesl;\",\"⪔\":\"&gesles;\",\"𝔤\":\"&gfr;\",\"ℷ\":\"&gimel;\",\"ѓ\":\"&gjcy;\",\"⪒\":\"&glE;\",\"⪥\":\"&gla;\",\"⪤\":\"&glj;\",\"≩\":\"&gneqq;\",\"⪊\":\"&gnapprox;\",\"⪈\":\"&gneq;\",\"⋧\":\"&gnsim;\",\"𝕘\":\"&gopf;\",\"ℊ\":\"&gscr;\",\"⪎\":\"&gsime;\",\"⪐\":\"&gsiml;\",\"⪧\":\"&gtcc;\",\"⩺\":\"&gtcir;\",\"⋗\":\"&gtrdot;\",\"⦕\":\"&gtlPar;\",\"⩼\":\"&gtquest;\",\"⥸\":\"&gtrarr;\",\"≩︀\":\"&gvnE;\",\"ъ\":\"&hardcy;\",\"⥈\":\"&harrcir;\",\"↭\":\"&leftrightsquigarrow;\",\"ℏ\":\"&plankv;\",\"ĥ\":\"&hcirc;\",\"♥\":\"&heartsuit;\",\"…\":\"&mldr;\",\"⊹\":\"&hercon;\",\"𝔥\":\"&hfr;\",\"⤥\":\"&searhk;\",\"⤦\":\"&swarhk;\",\"⇿\":\"&hoarr;\",\"∻\":\"&homtht;\",\"↩\":\"&larrhk;\",\"↪\":\"&rarrhk;\",\"𝕙\":\"&hopf;\",\"―\":\"&horbar;\",\"𝒽\":\"&hscr;\",\"ħ\":\"&hstrok;\",\"⁃\":\"&hybull;\",\"í\":\"&iacute;\",\"î\":\"&icirc;\",\"и\":\"&icy;\",\"е\":\"&iecy;\",\"¡\":\"&iexcl;\",\"𝔦\":\"&ifr;\",\"ì\":\"&igrave;\",\"⨌\":\"&qint;\",\"∭\":\"&tint;\",\"⧜\":\"&iinfin;\",\"℩\":\"&iiota;\",\"ĳ\":\"&ijlig;\",\"ī\":\"&imacr;\",\"ı\":\"&inodot;\",\"⊷\":\"&imof;\",\"Ƶ\":\"&imped;\",\"℅\":\"&incare;\",\"∞\":\"&infin;\",\"⧝\":\"&infintie;\",\"⊺\":\"&intercal;\",\"⨗\":\"&intlarhk;\",\"⨼\":\"&iprod;\",\"ё\":\"&iocy;\",\"į\":\"&iogon;\",\"𝕚\":\"&iopf;\",\"ι\":\"&iota;\",\"¿\":\"&iquest;\",\"𝒾\":\"&iscr;\",\"⋹\":\"&isinE;\",\"⋵\":\"&isindot;\",\"⋴\":\"&isins;\",\"⋳\":\"&isinsv;\",\"ĩ\":\"&itilde;\",\"і\":\"&iukcy;\",\"ï\":\"&iuml;\",\"ĵ\":\"&jcirc;\",\"й\":\"&jcy;\",\"𝔧\":\"&jfr;\",\"ȷ\":\"&jmath;\",\"𝕛\":\"&jopf;\",\"𝒿\":\"&jscr;\",\"ј\":\"&jsercy;\",\"є\":\"&jukcy;\",\"κ\":\"&kappa;\",\"ϰ\":\"&varkappa;\",\"ķ\":\"&kcedil;\",\"к\":\"&kcy;\",\"𝔨\":\"&kfr;\",\"ĸ\":\"&kgreen;\",\"х\":\"&khcy;\",\"ќ\":\"&kjcy;\",\"𝕜\":\"&kopf;\",\"𝓀\":\"&kscr;\",\"⤛\":\"&lAtail;\",\"⤎\":\"&lBarr;\",\"⪋\":\"&lesseqqgtr;\",\"⥢\":\"&lHar;\",\"ĺ\":\"&lacute;\",\"⦴\":\"&laemptyv;\",\"λ\":\"&lambda;\",\"⦑\":\"&langd;\",\"⪅\":\"&lessapprox;\",\"«\":\"&laquo;\",\"⤟\":\"&larrbfs;\",\"⤝\":\"&larrfs;\",\"↫\":\"&looparrowleft;\",\"⤹\":\"&larrpl;\",\"⥳\":\"&larrsim;\",\"↢\":\"&leftarrowtail;\",\"⪫\":\"&lat;\",\"⤙\":\"&latail;\",\"⪭\":\"&late;\",\"⪭︀\":\"&lates;\",\"⤌\":\"&lbarr;\",\"❲\":\"&lbbrk;\",\"{\":\"&lcub;\",\"[\":\"&lsqb;\",\"⦋\":\"&lbrke;\",\"⦏\":\"&lbrksld;\",\"⦍\":\"&lbrkslu;\",\"ľ\":\"&lcaron;\",\"ļ\":\"&lcedil;\",\"л\":\"&lcy;\",\"⤶\":\"&ldca;\",\"⥧\":\"&ldrdhar;\",\"⥋\":\"&ldrushar;\",\"↲\":\"&ldsh;\",\"≤\":\"&leq;\",\"⇇\":\"&llarr;\",\"⋋\":\"&lthree;\",\"⪨\":\"&lescc;\",\"⩿\":\"&lesdot;\",\"⪁\":\"&lesdoto;\",\"⪃\":\"&lesdotor;\",\"⋚︀\":\"&lesg;\",\"⪓\":\"&lesges;\",\"⋖\":\"&ltdot;\",\"⥼\":\"&lfisht;\",\"𝔩\":\"&lfr;\",\"⪑\":\"&lgE;\",\"⥪\":\"&lharul;\",\"▄\":\"&lhblk;\",\"љ\":\"&ljcy;\",\"⥫\":\"&llhard;\",\"◺\":\"&lltri;\",\"ŀ\":\"&lmidot;\",\"⎰\":\"&lmoustache;\",\"≨\":\"&lneqq;\",\"⪉\":\"&lnapprox;\",\"⪇\":\"&lneq;\",\"⋦\":\"&lnsim;\",\"⟬\":\"&loang;\",\"⇽\":\"&loarr;\",\"⟼\":\"&xmap;\",\"↬\":\"&rarrlp;\",\"⦅\":\"&lopar;\",\"𝕝\":\"&lopf;\",\"⨭\":\"&loplus;\",\"⨴\":\"&lotimes;\",\"∗\":\"&lowast;\",\"◊\":\"&lozenge;\",\"(\":\"&lpar;\",\"⦓\":\"&lparlt;\",\"⥭\":\"&lrhard;\",\"‎\":\"&lrm;\",\"⊿\":\"&lrtri;\",\"‹\":\"&lsaquo;\",\"𝓁\":\"&lscr;\",\"⪍\":\"&lsime;\",\"⪏\":\"&lsimg;\",\"‚\":\"&sbquo;\",\"ł\":\"&lstrok;\",\"⪦\":\"&ltcc;\",\"⩹\":\"&ltcir;\",\"⋉\":\"&ltimes;\",\"⥶\":\"&ltlarr;\",\"⩻\":\"&ltquest;\",\"⦖\":\"&ltrPar;\",\"◃\":\"&triangleleft;\",\"⥊\":\"&lurdshar;\",\"⥦\":\"&luruhar;\",\"≨︀\":\"&lvnE;\",\"∺\":\"&mDDot;\",\"¯\":\"&strns;\",\"♂\":\"&male;\",\"✠\":\"&maltese;\",\"▮\":\"&marker;\",\"⨩\":\"&mcomma;\",\"м\":\"&mcy;\",\"—\":\"&mdash;\",\"𝔪\":\"&mfr;\",\"℧\":\"&mho;\",\"µ\":\"&micro;\",\"⫰\":\"&midcir;\",\"−\":\"&minus;\",\"⨪\":\"&minusdu;\",\"⫛\":\"&mlcp;\",\"⊧\":\"&models;\",\"𝕞\":\"&mopf;\",\"𝓂\":\"&mscr;\",\"μ\":\"&mu;\",\"⊸\":\"&mumap;\",\"⋙̸\":\"&nGg;\",\"≫⃒\":\"&nGt;\",\"⇍\":\"&nlArr;\",\"⇎\":\"&nhArr;\",\"⋘̸\":\"&nLl;\",\"≪⃒\":\"&nLt;\",\"⇏\":\"&nrArr;\",\"⊯\":\"&nVDash;\",\"⊮\":\"&nVdash;\",\"ń\":\"&nacute;\",\"∠⃒\":\"&nang;\",\"⩰̸\":\"&napE;\",\"≋̸\":\"&napid;\",\"ŉ\":\"&napos;\",\"♮\":\"&natural;\",\"⩃\":\"&ncap;\",\"ň\":\"&ncaron;\",\"ņ\":\"&ncedil;\",\"⩭̸\":\"&ncongdot;\",\"⩂\":\"&ncup;\",\"н\":\"&ncy;\",\"–\":\"&ndash;\",\"⇗\":\"&neArr;\",\"⤤\":\"&nearhk;\",\"≐̸\":\"&nedot;\",\"⤨\":\"&toea;\",\"𝔫\":\"&nfr;\",\"↮\":\"&nleftrightarrow;\",\"⫲\":\"&nhpar;\",\"⋼\":\"&nis;\",\"⋺\":\"&nisd;\",\"њ\":\"&njcy;\",\"≦̸\":\"&nleqq;\",\"↚\":\"&nleftarrow;\",\"‥\":\"&nldr;\",\"𝕟\":\"&nopf;\",\"¬\":\"&not;\",\"⋹̸\":\"&notinE;\",\"⋵̸\":\"&notindot;\",\"⋷\":\"&notinvb;\",\"⋶\":\"&notinvc;\",\"⋾\":\"&notnivb;\",\"⋽\":\"&notnivc;\",\"⫽⃥\":\"&nparsl;\",\"∂̸\":\"&npart;\",\"⨔\":\"&npolint;\",\"↛\":\"&nrightarrow;\",\"⤳̸\":\"&nrarrc;\",\"↝̸\":\"&nrarrw;\",\"𝓃\":\"&nscr;\",\"⊄\":\"&nsub;\",\"⫅̸\":\"&nsubseteqq;\",\"⊅\":\"&nsup;\",\"⫆̸\":\"&nsupseteqq;\",\"ñ\":\"&ntilde;\",\"ν\":\"&nu;\",\"#\":\"&num;\",\"№\":\"&numero;\",\" \":\"&numsp;\",\"⊭\":\"&nvDash;\",\"⤄\":\"&nvHarr;\",\"≍⃒\":\"&nvap;\",\"⊬\":\"&nvdash;\",\"≥⃒\":\"&nvge;\",\">⃒\":\"&nvgt;\",\"⧞\":\"&nvinfin;\",\"⤂\":\"&nvlArr;\",\"≤⃒\":\"&nvle;\",\"<⃒\":\"&nvlt;\",\"⊴⃒\":\"&nvltrie;\",\"⤃\":\"&nvrArr;\",\"⊵⃒\":\"&nvrtrie;\",\"∼⃒\":\"&nvsim;\",\"⇖\":\"&nwArr;\",\"⤣\":\"&nwarhk;\",\"⤧\":\"&nwnear;\",\"ó\":\"&oacute;\",\"ô\":\"&ocirc;\",\"о\":\"&ocy;\",\"ő\":\"&odblac;\",\"⨸\":\"&odiv;\",\"⦼\":\"&odsold;\",\"œ\":\"&oelig;\",\"⦿\":\"&ofcir;\",\"𝔬\":\"&ofr;\",\"˛\":\"&ogon;\",\"ò\":\"&ograve;\",\"⧁\":\"&ogt;\",\"⦵\":\"&ohbar;\",\"⦾\":\"&olcir;\",\"⦻\":\"&olcross;\",\"⧀\":\"&olt;\",\"ō\":\"&omacr;\",\"ω\":\"&omega;\",\"ο\":\"&omicron;\",\"⦶\":\"&omid;\",\"𝕠\":\"&oopf;\",\"⦷\":\"&opar;\",\"⦹\":\"&operp;\",\"∨\":\"&vee;\",\"⩝\":\"&ord;\",\"ℴ\":\"&oscr;\",\"ª\":\"&ordf;\",\"º\":\"&ordm;\",\"⊶\":\"&origof;\",\"⩖\":\"&oror;\",\"⩗\":\"&orslope;\",\"⩛\":\"&orv;\",\"ø\":\"&oslash;\",\"⊘\":\"&osol;\",\"õ\":\"&otilde;\",\"⨶\":\"&otimesas;\",\"ö\":\"&ouml;\",\"⌽\":\"&ovbar;\",\"¶\":\"&para;\",\"⫳\":\"&parsim;\",\"⫽\":\"&parsl;\",\"п\":\"&pcy;\",\"%\":\"&percnt;\",\".\":\"&period;\",\"‰\":\"&permil;\",\"‱\":\"&pertenk;\",\"𝔭\":\"&pfr;\",\"φ\":\"&phi;\",\"ϕ\":\"&varphi;\",\"☎\":\"&phone;\",\"π\":\"&pi;\",\"ϖ\":\"&varpi;\",\"ℎ\":\"&planckh;\",\"+\":\"&plus;\",\"⨣\":\"&plusacir;\",\"⨢\":\"&pluscir;\",\"⨥\":\"&plusdu;\",\"⩲\":\"&pluse;\",\"⨦\":\"&plussim;\",\"⨧\":\"&plustwo;\",\"⨕\":\"&pointint;\",\"𝕡\":\"&popf;\",\"£\":\"&pound;\",\"⪳\":\"&prE;\",\"⪷\":\"&precapprox;\",\"⪹\":\"&prnap;\",\"⪵\":\"&prnE;\",\"⋨\":\"&prnsim;\",\"′\":\"&prime;\",\"⌮\":\"&profalar;\",\"⌒\":\"&profline;\",\"⌓\":\"&profsurf;\",\"⊰\":\"&prurel;\",\"𝓅\":\"&pscr;\",\"ψ\":\"&psi;\",\" \":\"&puncsp;\",\"𝔮\":\"&qfr;\",\"𝕢\":\"&qopf;\",\"⁗\":\"&qprime;\",\"𝓆\":\"&qscr;\",\"⨖\":\"&quatint;\",\"?\":\"&quest;\",\"⤜\":\"&rAtail;\",\"⥤\":\"&rHar;\",\"∽̱\":\"&race;\",\"ŕ\":\"&racute;\",\"⦳\":\"&raemptyv;\",\"⦒\":\"&rangd;\",\"⦥\":\"&range;\",\"»\":\"&raquo;\",\"⥵\":\"&rarrap;\",\"⤠\":\"&rarrbfs;\",\"⤳\":\"&rarrc;\",\"⤞\":\"&rarrfs;\",\"⥅\":\"&rarrpl;\",\"⥴\":\"&rarrsim;\",\"↣\":\"&rightarrowtail;\",\"↝\":\"&rightsquigarrow;\",\"⤚\":\"&ratail;\",\"∶\":\"&ratio;\",\"❳\":\"&rbbrk;\",\"}\":\"&rcub;\",\"]\":\"&rsqb;\",\"⦌\":\"&rbrke;\",\"⦎\":\"&rbrksld;\",\"⦐\":\"&rbrkslu;\",\"ř\":\"&rcaron;\",\"ŗ\":\"&rcedil;\",\"р\":\"&rcy;\",\"⤷\":\"&rdca;\",\"⥩\":\"&rdldhar;\",\"↳\":\"&rdsh;\",\"▭\":\"&rect;\",\"⥽\":\"&rfisht;\",\"𝔯\":\"&rfr;\",\"⥬\":\"&rharul;\",\"ρ\":\"&rho;\",\"ϱ\":\"&varrho;\",\"⇉\":\"&rrarr;\",\"⋌\":\"&rthree;\",\"˚\":\"&ring;\",\"‏\":\"&rlm;\",\"⎱\":\"&rmoustache;\",\"⫮\":\"&rnmid;\",\"⟭\":\"&roang;\",\"⇾\":\"&roarr;\",\"⦆\":\"&ropar;\",\"𝕣\":\"&ropf;\",\"⨮\":\"&roplus;\",\"⨵\":\"&rotimes;\",\")\":\"&rpar;\",\"⦔\":\"&rpargt;\",\"⨒\":\"&rppolint;\",\"›\":\"&rsaquo;\",\"𝓇\":\"&rscr;\",\"⋊\":\"&rtimes;\",\"▹\":\"&triangleright;\",\"⧎\":\"&rtriltri;\",\"⥨\":\"&ruluhar;\",\"℞\":\"&rx;\",\"ś\":\"&sacute;\",\"⪴\":\"&scE;\",\"⪸\":\"&succapprox;\",\"š\":\"&scaron;\",\"ş\":\"&scedil;\",\"ŝ\":\"&scirc;\",\"⪶\":\"&succneqq;\",\"⪺\":\"&succnapprox;\",\"⋩\":\"&succnsim;\",\"⨓\":\"&scpolint;\",\"с\":\"&scy;\",\"⋅\":\"&sdot;\",\"⩦\":\"&sdote;\",\"⇘\":\"&seArr;\",\"§\":\"&sect;\",\";\":\"&semi;\",\"⤩\":\"&tosa;\",\"✶\":\"&sext;\",\"𝔰\":\"&sfr;\",\"♯\":\"&sharp;\",\"щ\":\"&shchcy;\",\"ш\":\"&shcy;\",\"­\":\"&shy;\",\"σ\":\"&sigma;\",\"ς\":\"&varsigma;\",\"⩪\":\"&simdot;\",\"⪞\":\"&simg;\",\"⪠\":\"&simgE;\",\"⪝\":\"&siml;\",\"⪟\":\"&simlE;\",\"≆\":\"&simne;\",\"⨤\":\"&simplus;\",\"⥲\":\"&simrarr;\",\"⨳\":\"&smashp;\",\"⧤\":\"&smeparsl;\",\"⌣\":\"&ssmile;\",\"⪪\":\"&smt;\",\"⪬\":\"&smte;\",\"⪬︀\":\"&smtes;\",\"ь\":\"&softcy;\",\"/\":\"&sol;\",\"⧄\":\"&solb;\",\"⌿\":\"&solbar;\",\"𝕤\":\"&sopf;\",\"♠\":\"&spadesuit;\",\"⊓︀\":\"&sqcaps;\",\"⊔︀\":\"&sqcups;\",\"𝓈\":\"&sscr;\",\"☆\":\"&star;\",\"⊂\":\"&subset;\",\"⫅\":\"&subseteqq;\",\"⪽\":\"&subdot;\",\"⫃\":\"&subedot;\",\"⫁\":\"&submult;\",\"⫋\":\"&subsetneqq;\",\"⊊\":\"&subsetneq;\",\"⪿\":\"&subplus;\",\"⥹\":\"&subrarr;\",\"⫇\":\"&subsim;\",\"⫕\":\"&subsub;\",\"⫓\":\"&subsup;\",\"♪\":\"&sung;\",\"¹\":\"&sup1;\",\"²\":\"&sup2;\",\"³\":\"&sup3;\",\"⫆\":\"&supseteqq;\",\"⪾\":\"&supdot;\",\"⫘\":\"&supdsub;\",\"⫄\":\"&supedot;\",\"⟉\":\"&suphsol;\",\"⫗\":\"&suphsub;\",\"⥻\":\"&suplarr;\",\"⫂\":\"&supmult;\",\"⫌\":\"&supsetneqq;\",\"⊋\":\"&supsetneq;\",\"⫀\":\"&supplus;\",\"⫈\":\"&supsim;\",\"⫔\":\"&supsub;\",\"⫖\":\"&supsup;\",\"⇙\":\"&swArr;\",\"⤪\":\"&swnwar;\",\"ß\":\"&szlig;\",\"⌖\":\"&target;\",\"τ\":\"&tau;\",\"ť\":\"&tcaron;\",\"ţ\":\"&tcedil;\",\"т\":\"&tcy;\",\"⌕\":\"&telrec;\",\"𝔱\":\"&tfr;\",\"θ\":\"&theta;\",\"ϑ\":\"&vartheta;\",\"þ\":\"&thorn;\",\"×\":\"&times;\",\"⨱\":\"&timesbar;\",\"⨰\":\"&timesd;\",\"⌶\":\"&topbot;\",\"⫱\":\"&topcir;\",\"𝕥\":\"&topf;\",\"⫚\":\"&topfork;\",\"‴\":\"&tprime;\",\"▵\":\"&utri;\",\"≜\":\"&trie;\",\"◬\":\"&tridot;\",\"⨺\":\"&triminus;\",\"⨹\":\"&triplus;\",\"⧍\":\"&trisb;\",\"⨻\":\"&tritime;\",\"⏢\":\"&trpezium;\",\"𝓉\":\"&tscr;\",\"ц\":\"&tscy;\",\"ћ\":\"&tshcy;\",\"ŧ\":\"&tstrok;\",\"⥣\":\"&uHar;\",\"ú\":\"&uacute;\",\"ў\":\"&ubrcy;\",\"ŭ\":\"&ubreve;\",\"û\":\"&ucirc;\",\"у\":\"&ucy;\",\"ű\":\"&udblac;\",\"⥾\":\"&ufisht;\",\"𝔲\":\"&ufr;\",\"ù\":\"&ugrave;\",\"▀\":\"&uhblk;\",\"⌜\":\"&ulcorner;\",\"⌏\":\"&ulcrop;\",\"◸\":\"&ultri;\",\"ū\":\"&umacr;\",\"ų\":\"&uogon;\",\"𝕦\":\"&uopf;\",\"υ\":\"&upsilon;\",\"⇈\":\"&uuarr;\",\"⌝\":\"&urcorner;\",\"⌎\":\"&urcrop;\",\"ů\":\"&uring;\",\"◹\":\"&urtri;\",\"𝓊\":\"&uscr;\",\"⋰\":\"&utdot;\",\"ũ\":\"&utilde;\",\"ü\":\"&uuml;\",\"⦧\":\"&uwangle;\",\"⫨\":\"&vBar;\",\"⫩\":\"&vBarv;\",\"⦜\":\"&vangrt;\",\"⊊︀\":\"&vsubne;\",\"⫋︀\":\"&vsubnE;\",\"⊋︀\":\"&vsupne;\",\"⫌︀\":\"&vsupnE;\",\"в\":\"&vcy;\",\"⊻\":\"&veebar;\",\"≚\":\"&veeeq;\",\"⋮\":\"&vellip;\",\"𝔳\":\"&vfr;\",\"𝕧\":\"&vopf;\",\"𝓋\":\"&vscr;\",\"⦚\":\"&vzigzag;\",\"ŵ\":\"&wcirc;\",\"⩟\":\"&wedbar;\",\"≙\":\"&wedgeq;\",\"℘\":\"&wp;\",\"𝔴\":\"&wfr;\",\"𝕨\":\"&wopf;\",\"𝓌\":\"&wscr;\",\"𝔵\":\"&xfr;\",\"ξ\":\"&xi;\",\"⋻\":\"&xnis;\",\"𝕩\":\"&xopf;\",\"𝓍\":\"&xscr;\",\"ý\":\"&yacute;\",\"я\":\"&yacy;\",\"ŷ\":\"&ycirc;\",\"ы\":\"&ycy;\",\"¥\":\"&yen;\",\"𝔶\":\"&yfr;\",\"ї\":\"&yicy;\",\"𝕪\":\"&yopf;\",\"𝓎\":\"&yscr;\",\"ю\":\"&yucy;\",\"ÿ\":\"&yuml;\",\"ź\":\"&zacute;\",\"ž\":\"&zcaron;\",\"з\":\"&zcy;\",\"ż\":\"&zdot;\",\"ζ\":\"&zeta;\",\"𝔷\":\"&zfr;\",\"ж\":\"&zhcy;\",\"⇝\":\"&zigrarr;\",\"𝕫\":\"&zopf;\",\"𝓏\":\"&zscr;\",\"‍\":\"&zwj;\",\"‌\":\"&zwnj;\"}}};","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.numericUnicodeMap={0:65533,128:8364,130:8218,131:402,132:8222,133:8230,134:8224,135:8225,136:710,137:8240,138:352,139:8249,140:338,142:381,145:8216,146:8217,147:8220,148:8221,149:8226,150:8211,151:8212,152:732,153:8482,154:353,155:8250,156:339,158:382,159:376};","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.fromCodePoint=String.fromCodePoint||function(astralCodePoint){return String.fromCharCode(Math.floor((astralCodePoint-65536)/1024)+55296,(astralCodePoint-65536)%1024+56320)};exports.getCodePoint=String.prototype.codePointAt?function(input,position){return input.codePointAt(position)}:function(input,position){return(input.charCodeAt(position)-55296)*1024+input.charCodeAt(position+1)-56320+65536};exports.highSurrogateFrom=55296;exports.highSurrogateTo=56319;","const {\n\tonlyValidChildren,\n\tonlyValidParents,\n\tknownInvalidChildren,\n\tknownInvalidParents,\n} = require('./mapping');\n\n/**\n * returns true if given parent-child nesting is valid HTML\n * @param {string} child\n * @param {string} parent\n * @returns {boolean}\n */\nfunction isValidHTMLNesting(parent, child) {\n\t// if we know the list of children that are the only valid children for the given parent\n\tif (parent in onlyValidChildren) {\n\t\treturn onlyValidChildren[parent].has(child);\n\t}\n\n\t// if we know the list of parents that are the only valid parents for the given child\n\tif (child in onlyValidParents) {\n\t\treturn onlyValidParents[child].has(parent);\n\t}\n\n\t// if we know the list of children that are NOT valid for the given parent\n\tif (parent in knownInvalidChildren) {\n\t\t// check if the child is in the list of invalid children\n\t\t// if so, return false\n\t\tif (knownInvalidChildren[parent].has(child)) return false;\n\t}\n\n\t// if we know the list of parents that are NOT valid for the given child\n\tif (child in knownInvalidParents) {\n\t\t// check if the parent is in the list of invalid parents\n\t\t// if so, return false\n\t\tif (knownInvalidParents[child].has(parent)) return false;\n\t}\n\n\treturn true;\n}\n\nmodule.exports = {\n\tisValidHTMLNesting,\n};\n","const headings = new Set(['h1', 'h2', 'h3', 'h4', 'h5', 'h6']);\nconst emptySet = new Set([]);\n\n/**\n * maps element to set of elements that can be it's children, no other */\nconst onlyValidChildren = {\n\thead: new Set([\n\t\t'base',\n\t\t'basefront',\n\t\t'bgsound',\n\t\t'link',\n\t\t'meta',\n\t\t'title',\n\t\t'noscript',\n\t\t'noframes',\n\t\t'style',\n\t\t'script',\n\t\t'template',\n\t]),\n\toptgroup: new Set(['option']),\n\tselect: new Set(['optgroup', 'option']),\n\tmath: new Set(['mrow']),\n\tscript: new Set(),\n\t// table\n\ttable: new Set(['caption', 'colgroup', 'tbody', 'tfoot', 'thead']),\n\ttr: new Set(['td', 'th']),\n\tcolgroup: new Set(['col']),\n\ttbody: new Set(['tr']),\n\tthead: new Set(['tr']),\n\ttfoot: new Set(['tr']),\n\t// these elements can not have any children elements\n\tiframe: emptySet,\n\toption: emptySet,\n\ttextarea: emptySet,\n\tstyle: emptySet,\n\ttitle: emptySet,\n};\n\n/** maps elements to set of elements which can be it's parent, no other */\nconst onlyValidParents = {\n\t// sections\n\thtml: emptySet,\n\tbody: new Set(['html']),\n\thead: new Set(['html']),\n\t// table\n\ttd: new Set(['tr']),\n\tcolgroup: new Set(['table']),\n\tcaption: new Set(['table']),\n\ttbody: new Set(['table']),\n\ttfoot: new Set(['table']),\n\tcol: new Set(['colgroup']),\n\tth: new Set(['tr']),\n\tthead: new Set(['table']),\n\ttr: new Set(['tbody', 'thead', 'tfoot']),\n\t// data list\n\tdd: new Set(['dl', 'div']),\n\tdt: new Set(['dl', 'div']),\n\t// other\n\tfigcaption: new Set(['figure']),\n\t// li: new Set([\"ul\", \"ol\"]),\n\tsummary: new Set(['details']),\n\tarea: new Set(['map']),\n};\n\n/** maps element to set of elements that can not be it's children, others can */\nconst knownInvalidChildren = {\n\tp: new Set([\n\t\t'address',\n\t\t'article',\n\t\t'aside',\n\t\t'blockquote',\n\t\t'center',\n\t\t'details',\n\t\t'dialog',\n\t\t'dir',\n\t\t'div',\n\t\t'dl',\n\t\t'fieldset',\n\t\t'figure',\n\t\t'footer',\n\t\t'form',\n\t\t'h1',\n\t\t'h2',\n\t\t'h3',\n\t\t'h4',\n\t\t'h5',\n\t\t'h6',\n\t\t'header',\n\t\t'hgroup',\n\t\t'hr',\n\t\t'li',\n\t\t'main',\n\t\t'nav',\n\t\t'menu',\n\t\t'ol',\n\t\t'p',\n\t\t'pre',\n\t\t'section',\n\t\t'table',\n\t\t'ul',\n\t]),\n\tsvg: new Set([\n\t\t'b',\n\t\t'blockquote',\n\t\t'br',\n\t\t'code',\n\t\t'dd',\n\t\t'div',\n\t\t'dl',\n\t\t'dt',\n\t\t'em',\n\t\t'embed',\n\t\t'h1',\n\t\t'h2',\n\t\t'h3',\n\t\t'h4',\n\t\t'h5',\n\t\t'h6',\n\t\t'hr',\n\t\t'i',\n\t\t'img',\n\t\t'li',\n\t\t'menu',\n\t\t'meta',\n\t\t'ol',\n\t\t'p',\n\t\t'pre',\n\t\t'ruby',\n\t\t's',\n\t\t'small',\n\t\t'span',\n\t\t'strong',\n\t\t'sub',\n\t\t'sup',\n\t\t'table',\n\t\t'u',\n\t\t'ul',\n\t\t'var',\n\t]),\n};\n\n/** maps element to set of elements that can not be it's parent, others can */\nconst knownInvalidParents = {\n\ta: new Set(['a']),\n\tbutton: new Set(['button']),\n\tdd: new Set(['dd', 'dt']),\n\tdt: new Set(['dd', 'dt']),\n\tform: new Set(['form']),\n\tli: new Set(['li']),\n\th1: headings,\n\th2: headings,\n\th3: headings,\n\th4: headings,\n\th5: headings,\n\th6: headings,\n};\n\nmodule.exports = {\n\tonlyValidChildren,\n\tonlyValidParents,\n\tknownInvalidChildren,\n\tknownInvalidParents,\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n"],"names":["importScripts","modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","mainExports","define","amd","jsxTransform","context","options","plugins","assign","builtIns","contextToCustomElements","wrapConditionals","generate","n","SyntaxJSX","t","helperModuleImports","htmlEntities","t__namespace","create","keys","forEach","k","d","getOwnPropertyDescriptor","enumerable","e","default","freeze","booleans","BooleanAttributes","Set","Properties","ChildProperties","Aliases","className","htmlFor","PropAliases","class","formnovalidate","$","BUTTON","INPUT","ismap","IMG","nomodule","SCRIPT","playsinline","VIDEO","readonly","TEXTAREA","DelegatedEvents","SVGElements","SVGNamespace","xlink","xml","VoidElements","reservedNameSpaces","nonSpreadNameSpaces","getConfig","path","hub","file","metadata","config","getRendererConfig","renderer","renderers","find","r","registerImportMethod","imports","scope","getProgramParent","data","Map","has","iden","cloneNode","addNamed","nameHint","set","getTagName","tag","jsxElementNameToString","node","isJSXMemberExpression","object","property","isJSXIdentifier","isIdentifier","namespace","openingElement","isComponent","tagName","toLowerCase","includes","test","isDynamic","checkMember","checkTags","checkCallExpressions","native","dynamic","expr","isFunction","leadingComments","value","trim","staticMarker","shift","isCallExpression","isOptionalCallExpression","isMemberExpression","isOptionalMemberExpression","isSpreadElement","isBinaryExpression","operator","isJSXElement","isJSXFragment","traverse","Function","p","isObjectMethod","computed","skip","CallExpression","stop","OptionalCallExpression","MemberExpression","OptionalMemberExpression","SpreadElement","BinaryExpression","JSXElement","JSXFragment","getStaticExpression","type","isJSXExpressionContainer","isSequenceExpression","expression","undefined","evaluate","filterChildren","children","filter","child","isJSXEmptyExpression","isJSXText","extra","raw","checkLength","trimWhitespace","text","replace","split","map","s","join","transformCondition","inline","deep","dTest","cond","memo","memoWrapper","isConditionalExpression","unaryExpression","callExpression","arrowFunctionExpression","generateUidIdentifier","consequent","isLogicalExpression","alternate","nextPath","left","statements","variableDeclaration","variableDeclarator","blockStatement","returnStatement","escapeBackticks","escapeHTML","attr","delim","escDelim","iDelim","indexOf","iAmp","out","substring","convertJSXIdentifier","isValidIdentifier","stringLiteral","memberExpression","isJSXNamespacedName","canNativeSpread","key","checkNameSpaces","InlineElements","BlockElements","alwaysClose","setAttr$2","elem","isSVG","prevId","isCE","parts","isStringLiteral","identifier","isNullLiteral","conditionalExpression","binaryExpression","nullLiteral","hydratable","assignmentExpression","isChildProp","isProp","alias","getPropAlias","prop","a","toUpperCase","_","w","isNameSpaced","ns","detectResolvableEventHandler","attribute","handler","lookup","getBinding","isVariableDeclarator","init","isFunctionDeclaration","createPlaceholder","results","tempPath","char","contentId","exprId","template","declarations","push","arrayPattern","createTemplate$2","result","wrap","registerTemplate","decl","templateDef","templateId","skipTemplate","templates","hasCustomElement","unshift","exprs","dynamics","postExprs","concat","wrapDynamics$1","effectWrapperId","effectWrapper","prevValue","startsWith","isBooleanLiteral","isUnaryExpression","expressionStatement","identifiers","prev","logicalExpression","objectExpression","objectProperty","createTemplate$1","Array","isArray","strings","tmpl","arrayExpression","found","tmp","isArrayExpression","elements","every","el","wontEscape","templateValues","callee","numericLiteral","appendToTemplate","array","apply","toAttribute","escapeExpression","escapeLiterals","isNumericLiteral","isTemplateLiteral","expressions","quasis","isBlockStatement","body","isReturnStatement","argument","right","booleanLiteral","transformToObject","attrName","attributes","selectedAttributes","properties","existingAttribute","splice","isObjectExpression","jsxAttribute","jsxIdentifier","jsxExpressionContainer","normalizeAttributes","styleAttributes","classNamespaceAttributes","classAttributes","first","values","TemplateElement","isLast","some","transformClasslistObject","pop","JSXIdentifier","JSXExpressionContainer","TemplateLiteral","setAttr","createTemplate","wrapDynamics","transformJSX","thisId","ThisExpression","replaceWith","getStatementParent","thisExpression","insertBefore","transformNode","info","staticValue","transformElement","transformComponent","tagId","convertComponentIdentifier","props","runningObject","dynamicSpread","hasChildren","hasBinding","newTagId","isJSXSpreadAttribute","arguments","isTSNonNullExpression","isTSAsExpression","isTSSatisfiesExpression","binding","kind","isLVal","refIdentifier","objectMethod","isArrowFunctionExpression","childResult","transformComponentChildren","filteredChildren","pathNodes","transformedChildren","reduce","v","decode","topLevel","componentChild","lastElement","getCreateTemplate","isJSXSpreadChild","isExpression","componentArgs","ret","component","tagRenderer","transformElement$3","wrapSVG","voidTag","isCustomElement","createComponent","NoHydration","skipId","transformAttributes$2","hasHydratableEvent","spreadExpr","processSpreads$1","filteredAttributes","spreadArgs","firstSpread","isContainer","styleAttribute","leading","slice","index","JSXAttribute","JSXNamespacedName","classListAttribute","classListProperties","propPath","confident","needsSpacing","reservedNameSpace","evaluated","String","JSXEmptyExpression","ev","listenerOptions","delegateEvents","delegatedEvents","events","add","resolveable","nextElem","JSXText","rawValue","needsQuoting","len","contextToCustomElement","toBeClosed","omitNestedClosingTags","transformChildren$2","nextPlaceholder","findLastElement","childNodes","transformed","detectExpressions","nextChildren","getNextMatch","walk","insert","multi","markers","wrappedByText","list","startIndex","wrapped","nextChild$1","runHydrationEvents","transformElement$2","createElement","spreadElement","Boolean","doNotEscape","transformAttributes$1","doEscape","fn","templateLiteral","isLiteral","setAttr$1","last","isBoolean","transformChildren$1","transformAttributes","processSpreads","transformChildren","appends","insertNode","createTextNode","templateElement","nextChild","transformFragmentChildren","fragmentChild","toString","postprocess","from","domTemplates","temp","ssrTemplates","appendTemplates$1","declarators","cooked","addComment","appendTemplates","requireImportSource","validate","isValidHTMLNesting","JSXValidator","elName","elTagName","parentElName","parentElTagName","buildCodeFrameError","preprocess","opts","merged","lib","comments","ast","process","comment","inherits","visitor","Program","enter","exit","_default","_helperPluginUtils","declare","api","assertVersion","manipulateOptions","parserOpts","declarePreset","apiPolyfills","range","throwVersionError","version","Number","isInteger","limit","stackTraceLimit","builder","dirname","_clonedApi2","clonedApi","copyApiObject","proto","getPrototypeOf","obj","prototype","hasOwnProperty","targets","assumption","_importInjector","addDefault","importedSource","addNamespace","addSideEffect","_isModule","_assert","_t","_importBuilder","sequenceExpression","constructor","_defaultOpts","importedType","importedInterop","importingInterop","ensureLiveReference","ensureNoContext","importPosition","programPath","isProgram","_programPath","_programScope","_hub","_applyDefaults","importedSourceIn","importName","_generateImport","isInit","newOpts","blockHoist","isDefault","isNamed","isNamespace","isMod","isModuleForNode","isModuleForBabel","import","named","es6Default","var","wildcardInterop","defaultInterop","read","resultName","done","_insertStatements","isImportDeclaration","insertAfter","_blockHoist","targetPath","val","isFinite","unshiftContainer","importDeclaration","importDefaultSpecifier","importNamespaceSpecifier","importSpecifier","_statements","_resultName","_importedSource","_scope","local","statement","specifiers","_interop","addHelper","fail","sourceType","__assign","named_references_1","numeric_unicode_map_1","surrogate_pairs_1","allNamedReferences","namedReferences","all","html5","encodeRegExps","specialChars","nonAscii","nonAsciiPrintable","extensive","defaultEncodeOptions","mode","level","numeric","encode","_a","_b","_c","_d","_e","encodeRegExp","references","characters","isHex","lastIndex","exec","result_1","code_1","getCodePoint","charCodeAt","defaultDecodeOptions","strict","baseDecodeRegExps","bodyRegExps","html4","decodeRegExps","fromCharCode","outOfBoundsChar","defaultDecodeEntityOptions","decodeEntity","entity","decodeResultByReference_1","entities","decodeSecondChar_1","decodeCode_1","parseInt","substr","fromCodePoint","numericUnicodeMap","replaceResult_1","decodeRegExp","isAttribute","isStrict","replaceMatch_1","replaceLastIndex_1","replaceInput_1","decodeResult_1","decodeEntityLastChar_2","decodeResultByReference_2","decodeSecondChar_2","decodeCode_2","fj","astralCodePoint","Math","floor","codePointAt","input","position","highSurrogateFrom","highSurrogateTo","onlyValidChildren","onlyValidParents","knownInvalidChildren","knownInvalidParents","headings","emptySet","head","optgroup","select","math","script","table","tr","colgroup","tbody","thead","tfoot","iframe","option","textarea","style","title","html","td","caption","col","th","dd","dt","figcaption","summary","area","svg","button","form","li","h1","h2","h3","h4","h5","h6","cachedSetTimeout","cachedClearTimeout","currentQueue","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","runClearTimeout","marker","Item","noop","nextTick","args","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","cwd","chdir","dir","umask","ctor","superCtor","super_","writable","configurable","TempCtor","_clonedApi"],"version":3,"file":"babel-preset-solid.72103b68.js.map"}